{"version":3,"sources":["../../src/packages/lists/index.tsx","../../src/packages/table/index.tsx","../../src/packages/blockquote/index.tsx","../../src/packages/codeblock/index.tsx","../../src/packages/common/utils.ts","../../src/utils/index.ts","../../src/packages/editable/utils.ts","../../src/packages/editable/index.tsx","../../src/packages/headings/index.tsx","../../src/packages/image/index.tsx","../../src/packages/link/index.tsx","../../src/packages/paragraph/index.tsx","../../src/modules/editor/modules/element/index.tsx","../../src/packages/leaf/index.tsx","../../src/constants/colors.ts","../../src/constants/html-node-names.ts","../../src/constants/html-node-types.ts","../../src/constants/index.ts","../../src/constants/paper-sizes.ts","../../src/packages/common/commands.ts","../../src/packages/leaf/commands.ts","../../src/packages/lists/utils.ts","../../src/packages/lists/commands.ts","../../src/packages/keybindings/index.ts","../../src/packages/leaf/keybinding.ts","../../src/packages/lists/keybinding.ts","../../src/modules/editor/modules/canvas/index.tsx","../../src/constants/datetime.ts","../../src/modules/editor/modules/field/index.tsx","../../src/hooks/index.ts","../../src/modules/editor/modules/icon/index.tsx","../../src/modules/editor/modules/options/index.tsx","../../src/modules/editor/modules/switch/index.tsx","../../src/packages/editable/commands.ts","../../src/modules/editor/modules/sidebar/edit-editable/index.tsx","../../src/packages/image/commands.ts","../../src/modules/editor/modules/sidebar/edit-image/index.tsx","../../src/packages/table/utils.ts","../../src/packages/table/commands.ts","../../src/modules/editor/modules/sidebar/table-tools/index.tsx","../../src/modules/editor/modules/sidebar/index.tsx","../../src/modules/editor/modules/icon-button/index.tsx","../../src/modules/editor/modules/toolbar/modules/align-center/index.tsx","../../src/modules/editor/modules/toolbar/modules/align-justified/index.tsx","../../src/modules/editor/modules/toolbar/modules/align-left/index.tsx","../../src/modules/editor/modules/toolbar/modules/align-right/index.tsx","../../src/modules/editor/modules/toolbar/modules/bold/index.tsx","../../src/modules/editor/modules/toolbar/modules/bulleted-list/index.tsx","../../src/modules/editor/modules/toolbar/modules/clear-formatting/index.tsx","../../src/modules/editor/modules/button/index.tsx","../../src/modules/editor/modules/popup/content/index.tsx","../../src/modules/editor/modules/popup/index.tsx","../../src/modules/editor/modules/popups/display-flag/index.tsx","../../src/modules/editor/modules/toolbar/modules/display-flag/index.tsx","../../src/modules/editor/modules/icon-group/index.tsx","../../src/modules/editor/modules/toolbar/modules/indent-decrease/index.tsx","../../src/modules/editor/modules/toolbar/modules/indent-increase/index.tsx","../../src/modules/editor/modules/popups/editable-type/index.tsx","../../src/modules/editor/modules/popups/editable-label/index.tsx","../../src/modules/editor/modules/popups/existing-editable/index.tsx","../../src/modules/editor/modules/toolbar/modules/insert-editable/index.tsx","../../src/packages/image/utils.ts","../../src/modules/editor/modules/popups/insert-photo/index.tsx","../../src/modules/editor/modules/toolbar/modules/insert-photo/index.tsx","../../src/modules/editor/modules/toolbar/modules/insert-table/index.tsx","../../src/modules/editor/modules/toolbar/modules/italic/index.tsx","../../src/modules/editor/modules/toolbar/modules/numbered-list/index.tsx","../../src/modules/editor/modules/toolbar/modules/redo/index.tsx","../../src/modules/editor/modules/toolbar/modules/strikethrough/index.tsx","../../src/modules/editor/modules/popups/text-style/index.tsx","../../src/packages/paragraph/commands.ts","../../src/packages/headings/commands.ts","../../src/modules/editor/modules/toolbar/modules/text-style/index.tsx","../../src/modules/editor/modules/toolbar/modules/underline/index.tsx","../../src/modules/editor/modules/toolbar/modules/undo/index.tsx","../../src/modules/editor/modules/toolbar/index.tsx","../../src/packages/editable/plugin.ts","../../src/packages/deserialize/utils.ts","../../src/packages/deserialize/rules.ts","../../src/packages/deserialize/index.ts","../../src/packages/blockquote/deserialize.ts","../../src/packages/codeblock/deserialize.ts","../../src/packages/headings/deserialize.ts","../../src/packages/image/deserialize.ts","../../src/packages/link/deserialize.ts","../../src/packages/lists/deserialize.ts","../../src/packages/paragraph/deserialize.ts","../../src/packages/table/deserialize.ts","../../src/packages/image/plugin.ts","../../src/packages/link/commands.ts","../../src/packages/link/plugin.ts","../../src/packages/lists/plugin.ts","../../src/packages/table/plugin.ts","../../src/packages/common/plugin.ts","../../src/modules/editor/index.tsx","../../src/modules/preview/utils/index.ts","../../src/modules/preview/state/index.ts","../../src/packages/hookstate/index.ts","../../src/packages/hookstate/hooks.ts","../../src/modules/preview/dom/modules/leaf/index.tsx","../../src/modules/download/pdf.tsx","../../src/modules/preview/dom/modules/editable/index.tsx","../../src/modules/preview/dom/modules/image/index.tsx","../../src/modules/preview/dom/modules/element/index.tsx","../../src/modules/preview/dom/modules/slice/index.tsx","../../src/modules/preview/dom/modules/canvas/index.tsx","../../src/modules/preview/pdf/styles/index.ts","../../src/modules/preview/pdf/modules/leaf/index.tsx","../../src/modules/preview/pdf/modules/lists/index.tsx","../../src/modules/preview/pdf/modules/table/index.tsx","../../src/modules/preview/pdf/modules/blockquote/index.tsx","../../src/modules/preview/pdf/modules/codeblock/index.tsx","../../src/modules/preview/pdf/modules/editable/index.tsx","../../src/modules/preview/pdf/modules/headings/index.tsx","../../src/modules/preview/pdf/modules/image/index.tsx","../../src/modules/preview/pdf/modules/link/index.tsx","../../src/modules/preview/pdf/modules/paragraph/index.tsx","../../src/modules/preview/pdf/modules/element/index.tsx","../../src/modules/preview/pdf/modules/slice/index.tsx","../../src/modules/preview/pdf/modules/canvas/index.tsx","App.tsx","index.tsx"],"names":["List","attributes","style","useMemo","properties","element","ListItem","children","React","ListItemContainer","TableCell","height","colSpan","rowSpan","borderColor","borderWidth","minWidth","width","TableRow","Table","className","Blockquote","Codeblock","getLastChild","node","level","Editor","Element","lastNode","getLastChildEntry","entry","Text","getCurrentBlock","editor","mode","selection","depth","match","getSelectionLeaf","getCurrentDisplayTextSize","includes","getCurrentBlockAlignment","isAlignableElement","isBlockActive","type","matches","getMatchingNodes","Array","isMarkActive","mark","marks","editorMarks","isEditableElement","getMarkValue","query","forEachMatchingNode","callback","value","validElementTypes","getNextPath","path","steps","getNodeAt","at","options","error","getSelectionCoordinates","x","y","domSelection","window","domRange","rect","IS_MAC","test","sleep","timeInMs","Promise","resolve","setTimeout","notNil","nil","getPlaceholderImage","toTitleCase","text","firstValidCharPosition","generateUUID","uuidv4","clamp","min","max","Math","formatDate","dateTime","token","format","Date","runIfDefined","fn","isValidUrl","isUrl","lastItem","list","array","size","fill","map","unsetProperty","source","key","clone","getRgbaColor","hex","alpha","hexAlpha","getShortcutText","keys","o","isEnterKey","e","isObjectEqual","left","right","Object","EDITABLE_ELEMENTS_CACHE","EDITABLE_ELEMENTS_CACHED","createEditableElement","id","editable","getCurrentEditableElement","voids","getAllEditableElements","editableElements","cacheEditableElements","invalidateEditableElementsCache","Editable","selected","useSelected","focused","useFocused","parent","getEditableElementAttributes","classNames","src","contentEditable","fontSize","condition","Headings","Image","url","Link","href","undefined","Paragraph","EditorElement","props","Leaf","leaf","color","colors","transparent","black","PRESET_COLORS","THEME_COLORS","htmlNodeNames","A","B","BLOCKQUOTE","BODY","BR","CODE","DIV","FONT","H1","H2","H3","H4","H5","H6","I","IMG","LI","LIC","OL","P","PRE","S","SPAN","STRONG","TABLE","TD","TH","TR","U","UL","htmlNodeTypes","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","constants","a4","WRAPPED_BLOCKS","BLOCKS_WITH_ALIGNMENT","BLOCKS_WITH_INDENTATION","preBlockOps","Transforms","split","activateBlock","deactivateBlock","activateMark","editables","hanging","deactivateMark","setBlockAlignment","alignment","changeBlockIndentation","indentation","eventualIndentation","focusEditor","ReactEditor","toggleBoldMark","toggleItalicMark","toggleUnderlineMark","toggleStrikethroughMark","getListEntries","listEntry","listItemEntry","getCurrentListBlock","removeListItemBlock","ancestorListItemEntry","listItemPath","to","Path","increaseListNesting","previousListItemPath","getPreviousPath","previousListItemEntry","lastNodeEntry","destinationEntry","lastNodePath","decreaseListNesting","nextItem","lastPath","range","anchor","edge","focus","listNode","KEYBINDINGS","generators","bindings","generator","mergeKeyBindings","tab","runKeyBindings","hotkey","toHotkey","keybinding","canvasWidthStyle","minHeight","Canvas","memo","useSlateStatic","renderElement","useCallback","renderLeaf","handleKeyDown","css","spellCheck","placeholder","onKeyDown","DATE_FORMATS","TIME_FORMATS","Field","label","child","cloneElement","useMouseDown","useModalUtils","initialOpen","animationDuration","useState","handleOpen","setVisible","handleClose","a","handleToggle","actions","visible","open","close","toggle","useEditingBlock","useSlate","useEffect","block","Range","getConfigurableBlockInSelection","setEntry","Icon","handlePress","onPress","onMouseDown","Children","OptionItem","onClickDelete","option","Options","onDeleteOption","handleSubmitEditingOption","editingOption","onCreateOption","setEditingOption","onChange","Switch","onChangeValue","checked","offColor","onColor","checkedIcon","uncheckedIcon","handleDiameter","activeBoxShadow","insertInlineEditable","updateInlineEditable","editableEntry","editableNode","defaultValue","tip","linkId","multiline","dateTimeFormat","EditEditable","now","useRef","setAttributes","persistChanges","patch","current","handleBlurInput","handleChangeDateTimeFormat","handleDeleteOption","eventualValue","index","onBlur","parsedValue","parseInt","eventualWidth","isNaN","eventualHeight","hidden","getCurrentInlineImage","EditImage","ratio","currentImage","resizeInlineImage","title","disabled","setWidth","setHeight","getTableEntries","tableEntry","tableRowEntry","tableCellEntry","createTableCell","DEFAULT_TABLE_CELL_HEIGHT","createTableRow","DEFAULT_TABLE_COLS","columns","insertTableBlock","destination","blockNode","rows","createTable","select","firstPoint","TableTools","setHasBorders","colCount","tableRowNode","tableRowPath","insertTableRowAbove","rowCount","tableNode","colPos","tableCellPath","cellToCreate","insertTableColumnLeft","removeTableRow","hideTableBorders","showTableBorders","hasBorders","insertTableRowBelow","insertTableColumnRight","removeTableColumn","removeTableBlock","Sidebar","editingBlock","IconButton","forwardRef","role","ref","AlignCenterButton","active","AlignJustifiedButton","AlignLeftButton","AlignRightButton","BoldButton","isActive","BulletedListButton","listBlock","insertBulletedListBlock","ClearFormattingButton","clearMarks","Button","onClick","classnames","Content","hideArrow","useLayoutEffect","document","computedDimensions","JSON","setDimensions","onLayoutUpdate","dimensions","composedClassName","arrowClassName","arrow","top","getViewportWidth","getViewportHeight","getPositioningWithoutAnchor","viewportWidth","viewportHeight","getValidPositioning","offsets","contentPosition","anchorElement","anchorRef","position","anchorY","anchorX","anchorWidth","anchorHeight","getPositioningWithAnchor","distance","xOffset","yOffset","rightEdge","bottomEdge","Popup","isVisible","overlayCloseOnClick","onRequestClose","portalRef","handleClickOverlay","handleKeyUp","createPortal","contentClassName","popupContentPosition","setPopupContentPosition","DisplayFlagPopup","coordinates","onSubmit","matchedElements","setParent","equals","setEquals","DisplayFlagButton","selectionRef","modalUtils","unsetConditionMark","setCoordinates","setConditionMark","IconGroup","IndentDecreaseButton","IndentIncreaseButton","EditableTypePopup","onSelect","rangeIsCollapsed","handleClickOption","EditableLabelPopup","handleSubmit","setLabel","autoFocus","length","ExistingEditablePopup","matchingElements","keyword","handleSelectOption","setKeyword","InsertEditableButton","editableTypeModalUtils","editableLabelModalUtils","existingEditableModalUtils","setSelectedText","setEditableType","dataType","isInvisible","editableType","insertInvisibleEditable","getImageSizeAsync","img","naturalHeight","InsertPhotoPopup","parsedScale","parseFloat","resetFields","getAndSetImageDimensionsAsync","setUrl","setScale","deps","delay","useDebouncedEffectLib","useDebounceEffect","scale","maxLength","InsertPhotoButton","insertInlineImage","InsertTableButton","ItalicButton","NumberedListButton","insertNumberedListBlock","RedoButton","HistoryEditor","StrikethroughButton","ColorItem","handleMouseDown","backgroundColor","TextSizeItem","textSize","TextStylePopup","colorMark","initialState","state","setState","useBooleanState","handleClickSelector","toggleSelectorOpen","handleClickTextSizeOption","setBlockAsParagraph","toggleHeadingOne","toggleHeadingTwo","toggleHeadingThree","handleClickColorOption","setColorMark","unsetColorMark","selectorOpen","TextStyleButton","UnderlineButton","UndoButton","Toolbar","withEditable","isInline","isVoid","cruftFilterFn","invalidNodesFilterFn","deserializeToFragment","jsx","deserializeToElement","deserializeToLeaf","matchHTMLNode","rules","matchHTMLElementNode","nodeType","getNodeStyle","getNodeAttribute","getStencylAlignmentAttribute","getNodeIndentation","marginLeft","parsed","getNodeTextContent","withHTMLDeserializer","insertData","data","html","fragment","DOMParser","parseFromString","deserializeHTMLElements","nodes","firstNode","normalizeFirstNode","wrappedNodes","pendingNodes","flushPendingNodes","wrapInlineTopLevelNodesInParagraph","deserializeHTML","VOID_NODES","nodeName","colspan","rowspan","bold","italic","underline","strikethrough","code","elements","result","childNodeList","childNodes","validNodes","validNodeNames","container","normalizeChildNodes","rule","f","deserializeHTMLElement","withImage","insertInlineLink","removeInlineLink","withLink","insertText","withLists","deleteBackward","nodeEntry","getParentNode","parentNode","fixOrphanedListItems","validChildren","opsCount","i","listItem","j","fixUnwrappedListItemChildren","fixEmptyList","normalizeNode","lowestBlockEntry","leafNodeEntry","leafNode","pointRef","always","focusNext","currentPath","nextNodeEntry","nextNode","insertNewListItem","insertBreak","unit","withTable","deleteForward","n","start","Point","end","withTrailingBlock","lastChild","getLastNode","lastChildNode","currentNode","initialData","bodyRef","fns","res","setSidebarTop","useImperativeHandle","getNodes","editorState","setEditorState","sidebarTop","getValueFromDataset","dataset","isStencylElement","shouldRenderByCondition","conditions","getMatchingEditableElement","getLevelByElementType","BULLETS","getOrderedListSymbol","toRomanNumeral","romanize","alphanumerize","toAlphabetNumeral","Font","previewDatasetState","initialValue","SUBSCRIBERS","STATE","get","set","subscriber","subscribe","unsubscribe","unsubscribeAll","createHookState","useHookState","hookState","DomPreviewElement","Slice","styles","page","paddingTop","paddingHorizontal","paddingBottom","blockquote","paddingLeft","listItemSymbol","pre","borderRadius","padding","fontFamily","h1","lineHeight","h2","h3","h4","h5","h6","image","maxWidth","alignSelf","link","textDecoration","tableRow","flexDirection","alignItems","tableCell","borderStyle","shouldRender","parentType","getListItemSymbol","borderTopWidth","borderLeftWidth","PdfPreviewElement","author","creator","producer","getRenderedDocument","renderedDocument","CACHED_DATASET","pdf","CACHED_BLOB","saveAs","EditorApp","textAlign","generatePDFAsync","ReactDOM","render","App","getElementById"],"mappings":"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","file":"static/js/main.0990f6bf.chunk.js","sourcesContent":["import React, {CSSProperties, FC, useMemo} from 'react';\n\nimport {RenderElementProps} from 'slate-react';\n\nexport const List: FC<RenderElementProps> = ({element, children, attributes}) => {\n\tconst style = useMemo(() => {\n\t\tconst properties: CSSProperties = {};\n\n\t\tif (element.type === 'numbered-list' || element.type === 'bulleted-list') {\n\t\t\tif (element.indentation) {\n\t\t\t\tproperties.marginLeft = `${element.indentation}%`;\n\t\t\t}\n\t\t}\n\n\t\treturn properties;\n\t}, [element]);\n\n\tif (element.type === 'bulleted-list') {\n\t\treturn (\n\t\t\t<ul {...attributes} style={style}>\n\t\t\t\t{children}\n\t\t\t</ul>\n\t\t);\n\t}\n\n\tif (element.type === 'numbered-list') {\n\t\treturn (\n\t\t\t<ol {...attributes} style={style}>\n\t\t\t\t{children}\n\t\t\t</ol>\n\t\t);\n\t}\n\n\treturn null;\n};\n\nexport const ListItem: FC<RenderElementProps> = ({element, attributes, children}) => {\n\tif (element.type === 'list-item') {\n\t\treturn <li {...attributes}>{children}</li>;\n\t}\n\n\treturn null;\n};\n\nexport const ListItemContainer: FC<RenderElementProps> = ({element, attributes, children}) => {\n\tif (element.type === 'list-item-container') {\n\t\treturn <div {...attributes}>{children}</div>;\n\t}\n\n\treturn null;\n};\n","import React, {FC} from 'react';\n\nimport {RenderElementProps} from 'slate-react';\n\nexport const TableCell: FC<RenderElementProps> = ({element, attributes, children}) => {\n\tif (element.type === 'table-cell') {\n\t\treturn (\n\t\t\t<td\n\t\t\t\t{...attributes}\n\t\t\t\theight={element.height}\n\t\t\t\tcolSpan={element.colspan ?? 1}\n\t\t\t\trowSpan={element.rowspan ?? 1}\n\t\t\t\tstyle={{\n\t\t\t\t\tborderColor: element.borderColor ?? 'black',\n\t\t\t\t\tborderWidth: element.borderWidth ?? 1,\n\t\t\t\t\tminWidth: element.width,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</td>\n\t\t);\n\t}\n\n\treturn null;\n};\n\nexport const TableRow: FC<RenderElementProps> = ({element, attributes, children}) => {\n\tif (element.type === 'table-row') {\n\t\treturn <tr {...attributes}>{children}</tr>;\n\t}\n\n\treturn null;\n};\n\nexport const Table: FC<RenderElementProps> = ({element, attributes, children}) => {\n\tif (element.type === 'table') {\n\t\treturn (\n\t\t\t<table className='border-collapse'>\n\t\t\t\t<tbody {...attributes}>{children}</tbody>\n\t\t\t</table>\n\t\t);\n\t}\n\n\treturn null;\n};\n","import React, {CSSProperties, FC, useMemo} from 'react';\n\nimport {RenderElementProps} from 'slate-react';\n\nexport const Blockquote: FC<RenderElementProps> = ({element, children, attributes}) => {\n\tconst style = useMemo(() => {\n\t\tconst properties: CSSProperties = {};\n\n\t\tif (element.type === 'block-quote') {\n\t\t\tif (element.indentation) {\n\t\t\t\tproperties.marginLeft = `${element.indentation}%`;\n\t\t\t}\n\n\t\t\tif (element.alignment) {\n\t\t\t\tproperties.textAlign = element.alignment;\n\t\t\t}\n\t\t}\n\n\t\treturn properties;\n\t}, [element]);\n\n\treturn (\n\t\t<blockquote className='ml-40' style={style} {...attributes}>\n\t\t\t{children}\n\t\t</blockquote>\n\t);\n};\n","import React, {CSSProperties, FC, useMemo} from 'react';\n\nimport {RenderElementProps} from 'slate-react';\n\nexport const Codeblock: FC<RenderElementProps> = ({element, children, attributes}) => {\n\tconst style = useMemo(() => {\n\t\tconst properties: CSSProperties = {};\n\n\t\tif (element.type === 'code-block') {\n\t\t\tif (element.indentation) {\n\t\t\t\tproperties.marginLeft = `${element.indentation}%`;\n\t\t\t}\n\n\t\t\tif (element.alignment) {\n\t\t\t\tproperties.textAlign = element.alignment;\n\t\t\t}\n\t\t}\n\n\t\treturn properties;\n\t}, [element]);\n\n\treturn (\n\t\t<pre style={style} className='bg-gray-100 rounded-default p-12'>\n\t\t\t<code {...attributes}>{children}</code>\n\t\t</pre>\n\t);\n};\n","import {\n\tAlignableElement,\n\tEditableElement,\n\tHeadingOneElement,\n\tHeadingThreeElement,\n\tHeadingTwoElement,\n\tImageElement,\n\tIndentableElement,\n\tStencylAlignment,\n\tStencylDisplayTextSize,\n\tStencylEditor,\n\tStencylElementTypes,\n\tStencylMarks,\n\tStencylPopupCoordinates,\n\tTableElement,\n} from '../../types';\nimport {\n\tDescendant,\n\tEditor,\n\tElement,\n\tLocation,\n\tNode,\n\tNodeEntry,\n\tNodeMatch,\n\tPath,\n\tRange,\n\tText,\n\tTransforms,\n} from 'slate';\n\nexport const EMPTY_TEXT_NODE = [{text: ''}];\n\nexport const getEmptyTextNode = () => [{text: ''}];\n\nexport function getLastChild(node: Descendant, level: number = 1): Descendant {\n\tif (!(level + 1) || !(Editor.isEditor(node) || Element.isElement(node))) {\n\t\treturn node;\n\t}\n\n\tconst {children} = node;\n\n\tconst lastNode = children[children.length - 1];\n\n\treturn getLastChild(lastNode, level - 1);\n}\n\nexport function getLastChildEntry(entry: NodeEntry): NodeEntry<Node> | null {\n\tconst [node, path] = entry;\n\n\tif (Text.isText(node) || !node.children.length) {\n\t\treturn null;\n\t}\n\n\tconst {children} = node;\n\tconst lastNode = children[children.length - 1];\n\n\treturn [lastNode, [...path, node.children.length - 1]];\n}\n\nexport function getLastNode(\n\teditor: StencylEditor,\n\tlevel: number,\n): NodeEntry<Descendant> | undefined {\n\tconst {children} = editor;\n\tconst lastNode = children[children.length - 1];\n\n\tif (!lastNode) {\n\t\treturn undefined;\n\t}\n\n\tconst [, lastPath] = Editor.last(editor, []);\n\n\treturn [getLastChild(lastNode, level - 1), lastPath.slice(0, level + 1)];\n}\n\nexport function getParentNode(editor: StencylEditor, nodeEntry: NodeEntry) {\n\tconst [node, path] = nodeEntry;\n\n\tif (Editor.isEditor(node) || !path?.length) {\n\t\treturn null;\n\t}\n\n\treturn Editor.node(editor, path.slice(0, path.length - 1));\n\n\t/**\n\t * Other Alternative methods\n\t * 1. Editor.above(editor, {at: path});\n\t * 2. Editor.parent(editor, path, {depth: path.length})\n\t */\n}\n\nexport function getCurrentBlock(editor: StencylEditor, mode: 'highest' | 'lowest' = 'highest') {\n\tconst {selection} = editor;\n\n\tif (!selection) {\n\t\treturn null;\n\t}\n\n\tif (mode === 'highest') {\n\t\treturn Editor.node(editor, selection, {depth: 1});\n\t}\n\n\tconst [match] = Editor.nodes(editor, {\n\t\tmatch: (node) => Element.isElement(node) && !editor.isInline(node),\n\t\tmode: 'lowest',\n\t});\n\n\treturn match;\n}\n\nexport function getSelectionBlocks(editor: StencylEditor) {\n\tconst matches = getMatchingNodes(\n\t\teditor,\n\t\t(node) => Element.isElement(node) && !editor.isInline(node),\n\t);\n\n\treturn Array.from(matches);\n}\n\nexport function getSelectionMarks(editor: StencylEditor) {\n\tconst editorMarks = Editor.marks(editor) ?? {};\n\tconst record: Partial<Record<keyof StencylMarks, Array<StencylMarks[keyof StencylMarks]>>> = {};\n\n\tfor (const mark in editorMarks) {\n\t\tif (Object.prototype.hasOwnProperty.call(editorMarks, mark)) {\n\t\t\tconst value = editorMarks[mark];\n\t\t\trecord[mark] = [value];\n\t\t}\n\t}\n\n\tconst matches = Editor.nodes<EditableElement>(editor, {\n\t\tmatch: (node) => isEditableElement(editor, node),\n\t\tvoids: true,\n\t});\n\n\tfor (const [node] of matches) {\n\t\tconst marks = node.marks;\n\n\t\tfor (const mark in marks) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(marks, mark)) {\n\t\t\t\tconst value = marks[mark];\n\n\t\t\t\tif (record[mark]) {\n\t\t\t\t\trecord[mark].push(value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst mergedMarks: StencylMarks = {};\n\n\tfor (const key in record) {\n\t\tif (Object.prototype.hasOwnProperty.call(record, key)) {\n\t\t\tconst value = record[key];\n\t\t\tconst markActive = value.length && value.every((o: any) => !!o);\n\n\t\t\tif (markActive) {\n\t\t\t\tif (key === 'condition' || key === 'color') {\n\t\t\t\t\tmergedMarks[key] = value[0];\n\t\t\t\t} else {\n\t\t\t\t\tmergedMarks[key] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn mergedMarks;\n}\n\nexport function getSelectionLeaf(editor: StencylEditor) {\n\tif (!editor.selection) {\n\t\treturn null;\n\t}\n\n\treturn Editor.leaf(editor, editor.selection);\n}\n\nexport function getCurrentDisplayTextSize(\n\teditor: StencylEditor,\n): StencylDisplayTextSize | undefined {\n\tconst [match] = Editor.nodes<HeadingOneElement | HeadingTwoElement | HeadingThreeElement>(\n\t\teditor,\n\t\t{\n\t\t\tmatch: (node) =>\n\t\t\t\t!Editor.isEditor(node) &&\n\t\t\t\tElement.isElement(node) &&\n\t\t\t\t['heading-one', 'heading-two', 'heading-three'].includes(node.type),\n\t\t\tmode: 'lowest',\n\t\t},\n\t);\n\n\tif (!match) {\n\t\treturn undefined;\n\t}\n\n\tconst [node] = match;\n\n\treturn node.type;\n}\n\nexport function getCurrentBlockAlignment(editor: StencylEditor): StencylAlignment {\n\tconst [match] = Editor.nodes(editor, {\n\t\tmatch: isAlignableElement,\n\t\tmode: 'lowest',\n\t});\n\n\tif (match) {\n\t\tconst [node] = match;\n\n\t\tif (isAlignableElement(node)) {\n\t\t\treturn node.alignment ?? 'left';\n\t\t}\n\t}\n\n\treturn 'left';\n}\n\nexport function isBlockActive(\n\teditor: StencylEditor,\n\ttype: StencylElementTypes,\n\tmode?: 'highest' | 'lowest',\n) {\n\tconst matches = getMatchingNodes(\n\t\teditor,\n\t\t(node) => Element.isElement(node) && !editor.isInline(node) && node.type === type,\n\t\tmode,\n\t);\n\n\treturn !!Array.from(matches).length;\n}\n\nexport function isMarkActive(\n\teditor: StencylEditor,\n\tmark: keyof StencylMarks,\n\tmarks?: StencylMarks,\n) {\n\t// marks = marks ?? getSelectionMarks(editor);\n\t// return !!marks[mark];\n\tconst editorMarks = marks ?? Editor.marks(editor) ?? {};\n\n\tconst matches = Editor.nodes(editor, {\n\t\tmatch: (node) => isEditableElement(editor, node) && !!node.marks[mark],\n\t});\n\n\treturn !!editorMarks[mark] || !!Array.from(matches).length;\n}\n\nexport function getMarkValue<T extends keyof StencylMarks>(\n\teditor: StencylEditor,\n\tmark: T,\n): StencylMarks[T] | undefined {\n\tconst editorMarks = Editor.marks(editor) ?? {};\n\n\tconst [match] = Editor.nodes<EditableElement>(editor, {\n\t\tmatch: (node) => isEditableElement(editor, node) && !!node.marks[mark],\n\t});\n\n\treturn editorMarks[mark] ?? match?.[0].marks[mark];\n}\n\nexport function getMatchingNodes<T extends Node>(\n\teditor: StencylEditor,\n\tquery: NodeMatch<T>,\n\tmode?: 'all' | 'highest' | 'lowest',\n) {\n\treturn Editor.nodes(editor, {\n\t\tmatch: query,\n\t\tmode,\n\t});\n}\n\nexport function forEachMatchingNode<T extends Node>(\n\teditor: StencylEditor,\n\tquery: NodeMatch<T>,\n\tcallback: (match: NodeEntry<T>) => void,\n) {\n\tconst matches = getMatchingNodes(editor, query);\n\n\tfor (const match of matches) {\n\t\tcallback(match);\n\t}\n}\n\nexport function isEditableElement(editor: StencylEditor, value: any): value is EditableElement {\n\treturn editor.isVoid(value) && Element.isElement(value) && value.type === 'editable';\n}\n\nexport function isAlignableElement(value: any): value is AlignableElement {\n\tconst validElementTypes: Array<StencylElementTypes> = [\n\t\t'block-quote',\n\t\t'code-block',\n\t\t'heading-one',\n\t\t'heading-two',\n\t\t'heading-three',\n\t\t'heading-four',\n\t\t'heading-five',\n\t\t'heading-six',\n\t\t'paragraph',\n\t];\n\n\treturn Element.isElement(value) && validElementTypes.includes(value.type);\n}\n\nexport function isIndentableElement(value: any): value is IndentableElement {\n\tconst validElementTypes: Array<StencylElementTypes> = [\n\t\t'block-quote',\n\t\t'bulleted-list',\n\t\t'code-block',\n\t\t'heading-one',\n\t\t'heading-two',\n\t\t'heading-three',\n\t\t'heading-four',\n\t\t'heading-five',\n\t\t'heading-six',\n\t\t'numbered-list',\n\t\t'paragraph',\n\t];\n\n\treturn Element.isElement(value) && validElementTypes.includes(value.type);\n}\n\nexport function insertFragment(\n\teditor: StencylEditor,\n\tfragment: Node[],\n\toptions: {\n\t\tat?: Location;\n\t\thanging?: boolean;\n\t\tvoids?: boolean;\n\t} = {},\n) {\n\tEditor.withoutNormalizing(editor, () => {\n\t\tconst {hanging = false, voids = false} = options;\n\t\tlet {at = editor.selection} = options;\n\n\t\tif (!fragment.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!at) {\n\t\t\treturn;\n\t\t} else if (Range.isRange(at)) {\n\t\t\tif (!hanging) {\n\t\t\t\tat = Editor.unhangRange(editor, at);\n\t\t\t}\n\n\t\t\tif (Range.isCollapsed(at)) {\n\t\t\t\tat = at.anchor;\n\t\t\t} else {\n\t\t\t\tconst [, end] = Range.edges(at);\n\n\t\t\t\tif (!voids && Editor.void(editor, {at: end})) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst pointRef = Editor.pointRef(editor, end);\n\t\t\t\tTransforms.delete(editor, {at});\n\t\t\t\tat = pointRef.unref()!;\n\t\t\t}\n\t\t} else if (Path.isPath(at)) {\n\t\t\tat = Editor.start(editor, at);\n\t\t}\n\n\t\tif (!voids && Editor.void(editor, {at})) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If the insert point is at the edge of an inline node, move it outside\n\t\t// instead since it will need to be split otherwise.\n\t\tconst inlineElementMatch = Editor.above(editor, {\n\t\t\tat,\n\t\t\tmatch: (n) => Editor.isInline(editor, n),\n\t\t\tmode: 'highest',\n\t\t\tvoids,\n\t\t});\n\n\t\tif (inlineElementMatch) {\n\t\t\tconst [, inlinePath] = inlineElementMatch;\n\n\t\t\tif (Editor.isEnd(editor, at, inlinePath)) {\n\t\t\t\tconst after = Editor.after(editor, inlinePath)!;\n\t\t\t\tat = after;\n\t\t\t} else if (Editor.isStart(editor, at, inlinePath)) {\n\t\t\t\tconst before = Editor.before(editor, inlinePath)!;\n\t\t\t\tat = before;\n\t\t\t}\n\t\t}\n\n\t\tconst blockMatch = Editor.above(editor, {\n\t\t\tmatch: (n) => Editor.isBlock(editor, n),\n\t\t\tat,\n\t\t\tvoids,\n\t\t})!;\n\t\tconst [, blockPath] = blockMatch;\n\t\tconst isBlockStart = Editor.isStart(editor, at, blockPath);\n\t\tconst isBlockEnd = Editor.isEnd(editor, at, blockPath);\n\t\tconst mergeStart = !isBlockStart || (isBlockStart && isBlockEnd);\n\t\tconst mergeEnd = !isBlockEnd;\n\t\tconst [, firstPath] = Node.first({children: fragment} as any, []);\n\t\tconst [, lastPath] = Node.last({children: fragment} as any, []);\n\n\t\tconst matches: NodeEntry[] = [];\n\t\tconst matcher = ([n, p]: NodeEntry) => {\n\t\t\tif (\n\t\t\t\tmergeStart &&\n\t\t\t\tPath.isAncestor(p, firstPath) &&\n\t\t\t\tElement.isElement(n) &&\n\t\t\t\t!editor.isVoid(n) &&\n\t\t\t\t!editor.isInline(n)\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tmergeEnd &&\n\t\t\t\tPath.isAncestor(p, lastPath) &&\n\t\t\t\tElement.isElement(n) &&\n\t\t\t\t!editor.isVoid(n) &&\n\t\t\t\t!editor.isInline(n)\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\tfor (const entry of Node.nodes({children: fragment} as any, {pass: matcher})) {\n\t\t\tif (entry[1].length > 0 && matcher(entry)) {\n\t\t\t\tmatches.push(entry);\n\t\t\t}\n\t\t}\n\n\t\tconst starts: Array<Node> = [];\n\t\tconst middles: Array<Node> = [];\n\t\tconst ends: Array<Node> = [];\n\t\tlet starting = true;\n\t\tlet hasBlocks = false;\n\n\t\tfor (const [node] of matches) {\n\t\t\tif (Element.isElement(node) && !editor.isInline(node)) {\n\t\t\t\tstarting = false;\n\t\t\t\thasBlocks = true;\n\t\t\t\tmiddles.push(node);\n\t\t\t} else if (starting) {\n\t\t\t\tstarts.push(node);\n\t\t\t} else {\n\t\t\t\tends.push(node);\n\t\t\t}\n\t\t}\n\n\t\tconst [inlineMatch] = Editor.nodes(editor, {\n\t\t\tat,\n\t\t\tmatch: (n) => Text.isText(n) || Editor.isInline(editor, n),\n\t\t\tmode: 'highest',\n\t\t\tvoids,\n\t\t})!;\n\n\t\tconst [, inlinePath] = inlineMatch;\n\t\tconst isInlineStart = Editor.isStart(editor, at, inlinePath);\n\t\tconst isInlineEnd = Editor.isEnd(editor, at, inlinePath);\n\n\t\tconst middleRef = Editor.pathRef(editor, isBlockEnd ? Path.next(blockPath) : blockPath);\n\n\t\tconst endRef = Editor.pathRef(editor, isInlineEnd ? Path.next(inlinePath) : inlinePath);\n\n\t\tTransforms.splitNodes(editor, {\n\t\t\tat,\n\t\t\tmatch: (n) =>\n\t\t\t\thasBlocks ? Editor.isBlock(editor, n) : Text.isText(n) || Editor.isInline(editor, n),\n\t\t\tmode: hasBlocks ? 'lowest' : 'highest',\n\t\t\tvoids,\n\t\t});\n\n\t\tconst startRef = Editor.pathRef(\n\t\t\teditor,\n\t\t\t!isInlineStart || (isInlineStart && isInlineEnd) ? Path.next(inlinePath) : inlinePath,\n\t\t);\n\n\t\tTransforms.insertNodes(editor, starts, {\n\t\t\tat: startRef.current!,\n\t\t\tmatch: (n) => Text.isText(n) || Editor.isInline(editor, n),\n\t\t\tmode: 'highest',\n\t\t\tvoids,\n\t\t});\n\n\t\tTransforms.insertNodes(editor, middles, {\n\t\t\tat: middleRef.current!,\n\t\t\tmatch: (n) => Editor.isBlock(editor, n),\n\t\t\tmode: 'lowest',\n\t\t\tvoids,\n\t\t});\n\n\t\tTransforms.insertNodes(editor, ends, {\n\t\t\tat: endRef.current!,\n\t\t\tmatch: (n) => Text.isText(n) || Editor.isInline(editor, n),\n\t\t\tmode: 'highest',\n\t\t\tvoids,\n\t\t});\n\n\t\tif (!options.at) {\n\t\t\tlet path: Path;\n\n\t\t\tif (ends.length > 0) {\n\t\t\t\tpath = Path.previous(endRef.current!);\n\t\t\t} else if (middles.length > 0) {\n\t\t\t\tpath = Path.previous(middleRef.current!);\n\t\t\t} else {\n\t\t\t\tpath = Path.previous(startRef.current!);\n\t\t\t}\n\n\t\t\tconst end = Editor.end(editor, path);\n\t\t\tTransforms.select(editor, end);\n\t\t}\n\n\t\tstartRef.unref();\n\t\tmiddleRef.unref();\n\t\tendRef.unref();\n\t});\n}\n\nexport function getNextPath(path: Path, steps = 1): Path {\n\treturn [...path.slice(0, -1), path.slice(-1)[0] + steps];\n}\n\nexport function getPreviousPath(path: Path, steps = 1): Path {\n\treturn getNextPath(path, Math.abs(steps) * -1);\n}\n\nexport function getNodeAt(\n\teditor: StencylEditor,\n\tat: Location,\n\toptions: {\n\t\tmatch?: NodeMatch<Node>;\n\t\tmode?: 'highest' | 'lowest' | 'all';\n\t} = {},\n): NodeEntry<Node> | null {\n\tconst {match, mode} = options;\n\ttry {\n\t\tif (match) {\n\t\t\tconst [matched] = Editor.nodes(editor, {\n\t\t\t\tat,\n\t\t\t\tmatch,\n\t\t\t\tmode,\n\t\t\t});\n\t\t\treturn matched;\n\t\t} else {\n\t\t\treturn Editor.node(editor, at);\n\t\t}\n\t} catch (error) {\n\t\treturn null;\n\t}\n}\n\nexport function moveCaretTo(editor: StencylEditor, path: Path, offset: number = 0) {\n\tTransforms.setSelection(editor, {\n\t\tanchor: {\n\t\t\tpath,\n\t\t\toffset,\n\t\t},\n\t\tfocus: {\n\t\t\tpath,\n\t\t\toffset,\n\t\t},\n\t});\n}\n\nexport function getSelectionCoordinates(editor: StencylEditor): StencylPopupCoordinates {\n\tconst {selection} = editor;\n\tlet x = 0;\n\tlet y = 0;\n\n\tif (selection) {\n\t\tconst domSelection = window.getSelection();\n\t\tconst domRange = domSelection?.getRangeAt(0);\n\t\tconst rect = domRange?.getBoundingClientRect();\n\n\t\tx = rect?.x ?? 0;\n\t\ty = rect?.y ?? 0;\n\t}\n\n\treturn {\n\t\tx,\n\t\ty,\n\t};\n}\n\nexport function getConfigurableBlockInSelection(editor: StencylEditor) {\n\tif (editor.selection && !Range.isCollapsed(editor.selection)) {\n\t\treturn undefined;\n\t}\n\n\tconst [match] = Editor.nodes<TableElement | ImageElement | EditableElement>(editor, {\n\t\tmatch: (node) =>\n\t\t\tElement.isElement(node) &&\n\t\t\t(node.type === 'table' ||\n\t\t\t\tnode.type === 'image' ||\n\t\t\t\t(node.type === 'editable' && !node.linkId)),\n\t\tmode: 'lowest',\n\t\tvoids: true,\n\t});\n\n\treturn match;\n}\n","import {KeyboardEvent} from 'react';\nimport alphanumerize from 'alphanumerize';\nimport format from 'date-fns/format';\nimport hexAlpha from 'hex-alpha';\nimport isUrl from 'is-url';\nimport romanize from 'romanize';\nimport {v4 as uuidv4} from 'uuid';\n\nexport const IS_MAC =\n\ttypeof window !== 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nexport function sleep(timeInMs: number = 0) {\n\treturn new Promise((resolve) => setTimeout(resolve, timeInMs));\n}\n\nexport function notNil<T>(value?: T | null): value is T {\n\treturn typeof value !== 'undefined' && value !== null;\n}\n\nexport function nil<T>(value?: T | null): value is undefined | null {\n\treturn !notNil(value);\n}\n\nexport function getPlaceholderImage(width: number, height?: number) {\n\treturn `https://dummyimage.com/${width}x${height || width}/326FF3/FFFFFF`;\n}\n\nexport function toTitleCase(text: string) {\n\tif (!text?.length) {\n\t\treturn text;\n\t}\n\tconst firstValidCharPosition = text.search(/[a-zA-Z0-9]/);\n\n\tif (!~firstValidCharPosition) {\n\t\treturn text;\n\t}\n\n\treturn `${text.slice(0, firstValidCharPosition)}${text[\n\t\tfirstValidCharPosition\n\t].toUpperCase()}${text.slice(firstValidCharPosition + 1)}`;\n}\n\nexport function generateUUID() {\n\treturn uuidv4();\n}\n\nexport function clamp(value: number, min: number, max: number) {\n\treturn Math.min(Math.max(value, min), max);\n}\n\nexport function formatDate(\n\tdateTime: Date | string | number,\n\ttoken = 'yyyy-MM-dd',\n): string | undefined {\n\tif (nil(dateTime)) return undefined;\n\n\ttry {\n\t\treturn format(new Date(dateTime), token);\n\t} catch (error) {\n\t\treturn undefined;\n\t}\n}\n\nexport function runIfDefined<T, R>(value?: T | null, fn?: (o: T) => R): R | undefined {\n\tif (notNil(value)) {\n\t\treturn fn?.(value) ?? undefined;\n\t}\n\n\treturn undefined;\n}\n\nexport function isValidUrl(text?: string | null) {\n\tif (!text?.length) {\n\t\treturn false;\n\t}\n\n\treturn isUrl(text);\n}\n\nexport function lastItem<T>(list: Array<T>, steps = 0): T {\n\treturn list[list.length - 1 - steps];\n}\n\nexport function array(size = 3): Array<number> {\n\treturn new Array(size).fill(null).map((_o, i) => i);\n}\n\nexport function pipeline<T extends (...args: any[]) => any>(fns: Array<T>) {\n\treturn (...args: unknown[]) => {\n\t\tlet res: ReturnType<T> | undefined;\n\n\t\tfor (let i = 0; i < fns.length; i++) {\n\t\t\tconst fn = fns[i];\n\t\t\tres = i ? fn(res) : fn(...args);\n\t\t}\n\n\t\treturn res as ReturnType<T>;\n\t};\n}\n\nexport function unsetProperty<T>(source: T, key: keyof T): T {\n\tconst clone = {...source};\n\tdelete clone[key];\n\treturn clone;\n}\n\nexport function getRgbaColor(hex: string = '#000', alpha = 1) {\n\thex = hex.startsWith('#') ? hex : `#${hex}`;\n\treturn hexAlpha(hex, alpha);\n}\n\nexport function getShortcutText(...keys: string[]) {\n\tkeys = keys.filter((o) => !!o).map((o) => toTitleCase(o).replace('Mod', IS_MAC ? '⌘' : 'Ctrl'));\n\treturn `(${keys.join(\n\t\t!IS_MAC || keys.length > 2 || !(keys[0] === '⌘' && /[A-Z]/.test(keys[1])) ? '+' : '',\n\t)})`;\n}\n\nexport function isEqualColor(left?: string, right?: string) {\n\tif (!left || !right) {\n\t\treturn false;\n\t}\n\n\tleft = left.startsWith('#') ? left : `#${left}`;\n\tright = right.startsWith('#') ? right : `#${right}`;\n\treturn left.toLowerCase() === right.toLowerCase();\n}\n\nexport function isEnterKey(e: KeyboardEvent) {\n\treturn e.key?.toLowerCase() === 'enter';\n}\n\nexport function toRomanNumeral(value: number): string {\n\treturn romanize(value ?? 1);\n}\n\nexport function toAlphabetNumeral(value: number): string {\n\treturn alphanumerize(value ?? 1);\n}\n\nexport function isObjectEqual<T extends object>(left?: T, right?: T) {\n\tif (left === right) {\n\t\treturn true;\n\t}\n\n\tif (!left || !right || Object.keys(left).length !== Object.keys(right).length) {\n\t\treturn false;\n\t}\n\n\treturn !Object.keys(left).some((key) => left[key] !== right[key]);\n}\n","import {\n\tBaseEditableElement,\n\tEditableDateElement,\n\tEditableElement,\n\tEditableImageElement,\n\tEditableOptionsElement,\n\tEditableRadioElement,\n\tEditableTextElement,\n\tEditableTimeElement,\n\tStencylEditor,\n\tStencylElement,\n} from '../../types';\nimport {Editor, Element, NodeEntry} from 'slate';\nimport {getEmptyTextNode, isEditableElement} from '../common/utils';\n\nimport {generateUUID} from '../../utils';\n\ntype EditableElementOptions = Omit<\n\tBaseEditableElement,\n\t'type' | 'id' | 'children' | 'editable' | 'marks'\n> &\n\t(\n\t\t| EditableTextElement\n\t\t| EditableOptionsElement\n\t\t| EditableRadioElement\n\t\t| EditableTimeElement\n\t\t| EditableDateElement\n\t\t| EditableImageElement\n\t);\n\nlet EDITABLE_ELEMENTS_CACHE: Array<NodeEntry<EditableElement>> = [];\nlet EDITABLE_ELEMENTS_CACHED: boolean = false;\n\nexport function createEditableElement(editor: StencylEditor, attributes: EditableElementOptions) {\n\treturn {\n\t\t...attributes,\n\t\ttype: 'editable',\n\t\tid: generateUUID(),\n\t\tchildren: getEmptyTextNode(),\n\t\teditable: true,\n\t\tmarks: Editor.marks(editor) ?? {},\n\t} as EditableElement;\n}\n\nexport function getCurrentEditableElement(editor: StencylEditor) {\n\tconst [editableEntry] = Editor.nodes(editor, {\n\t\tmatch: (node) =>\n\t\t\tElement.isElement(node) && Editor.isVoid(editor, node) && node.type === 'editable',\n\t\tmode: 'lowest',\n\t\tvoids: true,\n\t});\n\n\tif (!editableEntry) {\n\t\treturn null;\n\t}\n\n\treturn editableEntry;\n}\n\nexport function getAllEditableElements(editor: StencylEditor) {\n\tif (EDITABLE_ELEMENTS_CACHED) {\n\t\treturn EDITABLE_ELEMENTS_CACHE;\n\t}\n\n\tconst matches = Editor.nodes<EditableElement>(editor, {\n\t\tat: [],\n\t\tmatch: (node) => isEditableElement(editor, node) && !node.linkId && !node.isInvisible,\n\t\tmode: 'all',\n\t});\n\n\tconst editableElements = Array.from(matches);\n\n\tcacheEditableElements(editableElements);\n\n\treturn editableElements;\n}\n\nfunction cacheEditableElements(editableElements: Array<NodeEntry<EditableElement>>) {\n\tEDITABLE_ELEMENTS_CACHE = editableElements;\n\tEDITABLE_ELEMENTS_CACHED = true;\n}\n\nexport function invalidateEditableElementsCache() {\n\tEDITABLE_ELEMENTS_CACHED = false;\n}\n\nexport function getEditableElementAttributes(element: StencylElement) {\n\tif (element.type !== 'editable' || !element.linkId) {\n\t\treturn element;\n\t}\n\n\tconst editableElements = EDITABLE_ELEMENTS_CACHE.map((o) => o[0] as EditableElement);\n\tconst parent = editableElements.find((o) => o.id === element.linkId);\n\n\tif (!parent) {\n\t\treturn element;\n\t}\n\n\treturn {...parent, id: element.id, marks: element.marks};\n}\n","import React, {FC} from 'react';\nimport {RenderElementProps, useFocused, useSelected} from 'slate-react';\n\nimport classNames from 'classnames';\nimport {getEditableElementAttributes} from './utils';\nimport {getPlaceholderImage} from '../../utils';\n\nexport const Editable: FC<RenderElementProps> = ({element, children, attributes}) => {\n\tconst selected = useSelected();\n\tconst focused = useFocused();\n\tconst editable = getEditableElementAttributes(element);\n\n\tif (editable.type === 'editable') {\n\t\tif (editable.dataType === 'image') {\n\t\t\treturn (\n\t\t\t\t<span {...attributes}>\n\t\t\t\t\t{children}\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName={classNames('inline-block max-w-full rounded-default align-bottom', {\n\t\t\t\t\t\t\t'shadow-outline': selected && focused,\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tsrc={getPlaceholderImage(editable.width, editable.height)}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: editable.width,\n\t\t\t\t\t\t\theight: editable.height,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\n\t\tif (editable.isInvisible) {\n\t\t\treturn (\n\t\t\t\t<div {...attributes}>\n\t\t\t\t\t<div contentEditable={false}>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName={classNames('inline-block font-medium px-4 rounded-default bg-gray-300', {\n\t\t\t\t\t\t\t\t'shadow-outline': selected && focused,\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tstyle={{fontSize: '0.82em'}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{editable.label}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t{children}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<span\n\t\t\t\t{...attributes}\n\t\t\t\tcontentEditable={false}\n\t\t\t\tclassName={classNames('inline-block text-white font-medium px-4 rounded-default mx-1', {\n\t\t\t\t\t'shadow-outline': selected && focused,\n\t\t\t\t\t'bg-blue-500': !editable.marks.condition,\n\t\t\t\t\t'bg-green-500': editable.marks.condition,\n\t\t\t\t})}\n\t\t\t\tstyle={{fontSize: '0.82em'}}\n\t\t\t>\n\t\t\t\t{editable.defaultValue}\n\t\t\t\t{children}\n\t\t\t</span>\n\t\t);\n\t}\n\n\treturn null;\n};\n","import React, {CSSProperties, FC, useMemo} from 'react';\n\nimport {RenderElementProps} from 'slate-react';\n\nexport const Headings: FC<RenderElementProps> = ({element, children, attributes}) => {\n\tconst style = useMemo(() => {\n\t\tconst properties: CSSProperties = {};\n\n\t\tif (\n\t\t\telement.type === 'heading-one' ||\n\t\t\telement.type === 'heading-two' ||\n\t\t\telement.type === 'heading-three' ||\n\t\t\telement.type === 'heading-four' ||\n\t\t\telement.type === 'heading-five' ||\n\t\t\telement.type === 'heading-six'\n\t\t) {\n\t\t\tif (element.indentation) {\n\t\t\t\tproperties.marginLeft = `${element.indentation}%`;\n\t\t\t}\n\n\t\t\tif (element.alignment) {\n\t\t\t\tproperties.textAlign = element.alignment;\n\t\t\t}\n\t\t}\n\n\t\treturn properties;\n\t}, [element]);\n\n\tswitch (element.type) {\n\t\tcase 'heading-one':\n\t\t\treturn (\n\t\t\t\t<h1 className='text-semi-title' style={style} {...attributes}>\n\t\t\t\t\t{children}\n\t\t\t\t</h1>\n\t\t\t);\n\t\tcase 'heading-two':\n\t\t\treturn (\n\t\t\t\t<h2 className='text-heading-1' style={style} {...attributes}>\n\t\t\t\t\t{children}\n\t\t\t\t</h2>\n\t\t\t);\n\t\tcase 'heading-three':\n\t\t\treturn (\n\t\t\t\t<h3 className='text-heading-2' style={style} {...attributes}>\n\t\t\t\t\t{children}\n\t\t\t\t</h3>\n\t\t\t);\n\t\tcase 'heading-four':\n\t\t\treturn (\n\t\t\t\t<h4 className='text-heading-3' style={style} {...attributes}>\n\t\t\t\t\t{children}\n\t\t\t\t</h4>\n\t\t\t);\n\t\tcase 'heading-five':\n\t\t\treturn (\n\t\t\t\t<h5 className='text-headline' style={style} {...attributes}>\n\t\t\t\t\t{children}\n\t\t\t\t</h5>\n\t\t\t);\n\t\tcase 'heading-six':\n\t\t\treturn (\n\t\t\t\t<h6 className='text-body' style={style} {...attributes}>\n\t\t\t\t\t{children}\n\t\t\t\t</h6>\n\t\t\t);\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n","import React, {FC} from 'react';\nimport {RenderElementProps, useFocused, useSelected} from 'slate-react';\n\nimport classNames from 'classnames';\n\nexport const Image: FC<RenderElementProps> = ({element, attributes, children}) => {\n\tconst selected = useSelected();\n\tconst focused = useFocused();\n\n\tif (element.type === 'image') {\n\t\treturn (\n\t\t\t<span {...attributes}>\n\t\t\t\t{children}\n\t\t\t\t<img\n\t\t\t\t\tclassName={classNames('inline-block max-w-full rounded-default align-bottom', {\n\t\t\t\t\t\t'shadow-outline': selected && focused,\n\t\t\t\t\t})}\n\t\t\t\t\tsrc={element.url}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: element.width,\n\t\t\t\t\t\theight: element.height,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</span>\n\t\t);\n\t}\n\n\treturn null;\n};\n","import React, {FC} from 'react';\n\nimport {RenderElementProps} from 'slate-react';\n\nexport const Link: FC<RenderElementProps> = ({element, children, attributes}) => {\n\treturn (\n\t\t<a\n\t\t\tclassName='underline'\n\t\t\thref={element.type === 'link' ? element.url : undefined}\n\t\t\t{...attributes}\n\t\t>\n\t\t\t{children}\n\t\t</a>\n\t);\n};\n","import React, {CSSProperties, FC, useMemo} from 'react';\n\nimport {RenderElementProps} from 'slate-react';\n\nexport const Paragraph: FC<RenderElementProps> = ({element, children, attributes}) => {\n\tconst style = useMemo(() => {\n\t\tconst properties: CSSProperties = {};\n\n\t\tif (element.type === 'paragraph') {\n\t\t\tif (element.indentation) {\n\t\t\t\tproperties.marginLeft = `${element.indentation}%`;\n\t\t\t}\n\n\t\t\tif (element.alignment) {\n\t\t\t\tproperties.textAlign = element.alignment;\n\t\t\t}\n\t\t}\n\n\t\treturn properties;\n\t}, [element]);\n\n\treturn (\n\t\t<p style={style} {...attributes}>\n\t\t\t{children}\n\t\t</p>\n\t);\n};\n","import {List, ListItem, ListItemContainer} from '../../../../packages/lists';\nimport React, {FC} from 'react';\nimport {Table, TableCell, TableRow} from '../../../../packages/table';\n\nimport {Blockquote} from '../../../../packages/blockquote';\nimport {Codeblock} from '../../../../packages/codeblock';\nimport {Editable} from '../../../../packages/editable';\nimport {Headings} from '../../../../packages/headings';\nimport {Image} from '../../../../packages/image';\nimport {Link} from '../../../../packages/link';\nimport {Paragraph} from '../../../../packages/paragraph';\nimport {RenderElementProps} from 'slate-react';\n\nexport const EditorElement: FC<RenderElementProps> = (props) => {\n\tswitch (props.element.type) {\n\t\tcase 'block-quote':\n\t\t\treturn <Blockquote {...props} />;\n\t\tcase 'bulleted-list':\n\t\tcase 'numbered-list':\n\t\t\treturn <List {...props} />;\n\t\tcase 'code-block':\n\t\t\treturn <Codeblock {...props} />;\n\t\tcase 'heading-one':\n\t\tcase 'heading-two':\n\t\tcase 'heading-three':\n\t\tcase 'heading-four':\n\t\tcase 'heading-five':\n\t\tcase 'heading-six':\n\t\t\treturn <Headings {...props} />;\n\t\tcase 'image':\n\t\t\treturn <Image {...props} />;\n\t\tcase 'link':\n\t\t\treturn <Link {...props} />;\n\t\tcase 'list-item':\n\t\t\treturn <ListItem {...props} />;\n\t\tcase 'list-item-container':\n\t\t\treturn <ListItemContainer {...props} />;\n\t\tcase 'paragraph':\n\t\t\treturn <Paragraph {...props} />;\n\t\tcase 'table':\n\t\t\treturn <Table {...props} />;\n\t\tcase 'table-cell':\n\t\t\treturn <TableCell {...props} />;\n\t\tcase 'table-row':\n\t\t\treturn <TableRow {...props} />;\n\t\tcase 'editable':\n\t\t\treturn <Editable {...props} />;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n","import React, {FC} from 'react';\n\nimport {RenderLeafProps} from 'slate-react';\n\nexport const Leaf: FC<RenderLeafProps> = ({attributes, children, leaf}) => {\n\tif (leaf.bold) {\n\t\tchildren = <strong>{children}</strong>;\n\t}\n\n\tif (leaf.code) {\n\t\tchildren = <code>{children}</code>;\n\t}\n\n\tif (leaf.italic) {\n\t\tchildren = <em>{children}</em>;\n\t}\n\n\tif (leaf.underline) {\n\t\tchildren = <u>{children}</u>;\n\t}\n\n\tif (leaf.strikethrough) {\n\t\tchildren = <del>{children}</del>;\n\t}\n\n\treturn (\n\t\t<span\n\t\t\t{...attributes}\n\t\t\tstyle={{color: leaf.color}}\n\t\t\tclassName={leaf.condition ? 'bg-green-highlight' : undefined}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import themeColors from '../theme/data/colors.json';\n\nconst colors = {\n\ttransparent: 'rgba(0,0,0,0)',\n\tblack: '#000',\n};\n\nexport const PRESET_COLORS = [\n\t'#FF6900',\n\t'#FCB900',\n\t'#7BDCB5',\n\t'#00D084',\n\t'#8ED1FC',\n\t'#326FF3',\n\t'#ABB8C3',\n\t'#EB144C',\n\t'#F78DA7',\n\t'#9900EF',\n];\n\nexport const THEME_COLORS = themeColors;\n\nexport default colors;\n","const htmlNodeNames = {\n\tA: 'A',\n\tB: 'B',\n\tBLOCKQUOTE: 'BLOCKQUOTE',\n\tBODY: 'BODY',\n\tBR: 'BR',\n\tCODE: 'CODE',\n\tDIV: 'DIV',\n\tFONT: 'FONT',\n\tH1: 'H1',\n\tH2: 'H2',\n\tH3: 'H3',\n\tH4: 'H4',\n\tH5: 'H5',\n\tH6: 'H6',\n\tI: 'I',\n\tIMG: 'IMG',\n\tLI: 'LI',\n\tLIC: 'LIC',\n\tOL: 'OL',\n\tP: 'P',\n\tPRE: 'PRE',\n\tS: 'S',\n\tSPAN: 'SPAN',\n\tSTRONG: 'STRONG',\n\tTABLE: 'TABLE',\n\tTD: 'TD',\n\tTH: 'TH',\n\tTR: 'TR',\n\tU: 'U',\n\tUL: 'UL',\n};\n\nexport default htmlNodeNames;\n","const htmlNodeTypes = {\n\tELEMENT_NODE: 1,\n\tATTRIBUTE_NODE: 2,\n\tTEXT_NODE: 3,\n\tCDATA_SECTION_NODE: 4,\n\tPROCESSING_INSTRUCTION_NODE: 7,\n\tCOMMENT_NODE: 8,\n\tDOCUMENT_NODE: 9,\n\tDOCUMENT_TYPE_NODE: 10,\n\tDOCUMENT_FRAGMENT_NODE: 11,\n};\n\nexport default htmlNodeTypes;\n","import colors from './colors';\nimport htmlNodeNames from './html-node-names';\nimport htmlNodeTypes from './html-node-types';\nimport paperSizes from './paper-sizes';\n\nconst constants = {\n\tcolors,\n\tpaperSizes,\n\thtmlNodeNames,\n\thtmlNodeTypes,\n};\n\nexport default constants;\n","const paperSizes = {\n\ta4: {\n\t\twidth: 595,\n\t\theight: 842,\n\t},\n};\n\nexport default paperSizes;\n","import {\n\tEditableElement,\n\tParagraphElement,\n\tStencylAlignment,\n\tStencylEditor,\n\tStencylElementTypes,\n\tStencylMarks,\n} from '../../types';\nimport {Editor, Element, Location, Transforms} from 'slate';\nimport {clamp, unsetProperty} from '../../utils';\nimport {forEachMatchingNode, isEditableElement} from './utils';\n\nimport {ReactEditor} from 'slate-react';\n\nexport const WRAPPED_BLOCKS: Array<StencylElementTypes> = [\n\t'numbered-list',\n\t'bulleted-list',\n\t'table',\n];\n\nexport const BLOCKS_WITH_ALIGNMENT: Array<StencylElementTypes> = [\n\t'block-quote',\n\t'code-block',\n\t'heading-one',\n\t'heading-two',\n\t'heading-three',\n\t'heading-four',\n\t'heading-five',\n\t'heading-six',\n\t'paragraph',\n];\n\nexport const BLOCKS_WITH_INDENTATION: Array<StencylElementTypes> = [\n\t...BLOCKS_WITH_ALIGNMENT,\n\t'bulleted-list',\n\t'numbered-list',\n];\n\nexport const INDENTATION_FACTOR = 3;\n\nexport function preBlockOps(editor: StencylEditor) {\n\tTransforms.unwrapNodes(editor, {\n\t\tmatch: (node) => Element.isElement(node) && WRAPPED_BLOCKS.includes(node.type),\n\t\tsplit: true,\n\t});\n}\n\nexport function activateBlock(editor: StencylEditor, type: StencylElementTypes) {\n\tpreBlockOps(editor);\n\n\tTransforms.setNodes(editor, {\n\t\ttype,\n\t});\n}\n\nexport function deactivateBlock(editor: StencylEditor) {\n\tpreBlockOps(editor);\n\n\tTransforms.setNodes(editor, {\n\t\ttype: 'paragraph',\n\t});\n}\n\nexport function activateMark<K extends keyof StencylMarks>(\n\teditor: StencylEditor,\n\tmark: K,\n\tvalue: StencylMarks[K] = true as any,\n) {\n\tEditor.addMark(editor, mark, value);\n\n\tconst editables = Editor.nodes<EditableElement>(editor, {\n\t\tmatch: (node) => isEditableElement(editor, node),\n\t\tvoids: true,\n\t});\n\n\tfor (const [node, path] of editables) {\n\t\tTransforms.setNodes(\n\t\t\teditor,\n\t\t\t{\n\t\t\t\tmarks: {\n\t\t\t\t\t...node.marks,\n\t\t\t\t\t[mark]: value,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tat: path,\n\t\t\t\thanging: true,\n\t\t\t\tvoids: true,\n\t\t\t},\n\t\t);\n\t}\n}\n\nexport function deactivateMark(editor: StencylEditor, mark: keyof StencylMarks) {\n\tEditor.removeMark(editor, mark);\n\n\tconst matches = Editor.nodes<EditableElement>(editor, {\n\t\tmatch: (node) => isEditableElement(editor, node),\n\t\tvoids: true,\n\t});\n\n\tfor (const [node, path] of matches) {\n\t\tTransforms.setNodes(\n\t\t\teditor,\n\t\t\t{\n\t\t\t\tmarks: unsetProperty(node.marks, mark),\n\t\t\t},\n\t\t\t{\n\t\t\t\tat: path,\n\t\t\t\thanging: true,\n\t\t\t\tvoids: true,\n\t\t\t},\n\t\t);\n\t}\n}\n\nexport function clearMarks(editor: StencylEditor) {\n\tconst marks: Array<keyof StencylMarks> = [\n\t\t'bold',\n\t\t'code',\n\t\t'color',\n\t\t'italic',\n\t\t'underline',\n\t\t'strikethrough',\n\t\t'condition',\n\t];\n\n\tmarks.forEach((o) => editor.removeMark(o));\n\n\tconst matches = Editor.nodes<EditableElement>(editor, {\n\t\tmatch: (node) => isEditableElement(editor, node),\n\t\tvoids: true,\n\t});\n\n\tfor (const [, path] of matches) {\n\t\tTransforms.setNodes(\n\t\t\teditor,\n\t\t\t{\n\t\t\t\tmarks: {},\n\t\t\t},\n\t\t\t{\n\t\t\t\tat: path,\n\t\t\t\thanging: true,\n\t\t\t\tvoids: true,\n\t\t\t},\n\t\t);\n\t}\n}\n\nexport function setBlockAlignment(editor: StencylEditor, alignment?: StencylAlignment) {\n\tforEachMatchingNode(\n\t\teditor,\n\t\t(node) =>\n\t\t\tElement.isElement(node) &&\n\t\t\t!editor.isInline(node) &&\n\t\t\tBLOCKS_WITH_ALIGNMENT.includes(node.type),\n\t\t(match) => {\n\t\t\tconst [node, path] = match;\n\n\t\t\tif (!Element.isElement(node) || !BLOCKS_WITH_ALIGNMENT.includes(node.type)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tTransforms.setNodes(\n\t\t\t\teditor,\n\t\t\t\t{\n\t\t\t\t\talignment: alignment === 'left' ? undefined : alignment,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tat: path,\n\t\t\t\t},\n\t\t\t);\n\t\t},\n\t);\n}\n\nexport function changeBlockIndentation(editor: StencylEditor, mode: 'increment' | 'decrement') {\n\tforEachMatchingNode(\n\t\teditor,\n\t\t(node) =>\n\t\t\tElement.isElement(node) &&\n\t\t\t!editor.isInline(node) &&\n\t\t\tBLOCKS_WITH_INDENTATION.includes(node.type),\n\t\t(match) => {\n\t\t\tconst [node, path] = match;\n\t\t\tconst indentation = (node as ParagraphElement).indentation ?? 0;\n\t\t\tconst eventualIndentation = clamp(\n\t\t\t\tmode === 'increment' ? indentation + INDENTATION_FACTOR : indentation - INDENTATION_FACTOR,\n\t\t\t\t0,\n\t\t\t\t99,\n\t\t\t);\n\n\t\t\tTransforms.setNodes(\n\t\t\t\teditor,\n\t\t\t\t{\n\t\t\t\t\tindentation: eventualIndentation || undefined,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tat: path,\n\t\t\t\t},\n\t\t\t);\n\t\t},\n\t);\n}\n\nexport function focusEditor(editor: StencylEditor, at?: Location) {\n\tReactEditor.focus(editor);\n\n\tif (at) {\n\t\tTransforms.select(editor, at);\n\t}\n}\n","import {StencylDisplayCondition, StencylEditor, StencylMarks} from '../../types';\nimport {activateMark, deactivateMark} from '../common/commands';\n\nimport {isMarkActive} from '../common/utils';\n\nexport function setColorMark(editor: StencylEditor, value: string) {\n\tactivateMark(editor, 'color', value);\n}\n\nexport function unsetColorMark(editor: StencylEditor) {\n\tdeactivateMark(editor, 'color');\n}\n\nexport function toggleBoldMark(editor: StencylEditor, marks?: StencylMarks) {\n\tisMarkActive(editor, 'bold', marks)\n\t\t? deactivateMark(editor, 'bold')\n\t\t: activateMark(editor, 'bold');\n}\n\nexport function toggleItalicMark(editor: StencylEditor, marks?: StencylMarks) {\n\tisMarkActive(editor, 'italic', marks)\n\t\t? deactivateMark(editor, 'italic')\n\t\t: activateMark(editor, 'italic');\n}\n\nexport function toggleUnderlineMark(editor: StencylEditor, marks?: StencylMarks) {\n\tisMarkActive(editor, 'underline', marks)\n\t\t? deactivateMark(editor, 'underline')\n\t\t: activateMark(editor, 'underline');\n}\n\nexport function toggleStrikethroughMark(editor: StencylEditor, marks?: StencylMarks) {\n\tisMarkActive(editor, 'strikethrough', marks)\n\t\t? deactivateMark(editor, 'strikethrough')\n\t\t: activateMark(editor, 'strikethrough');\n}\n\nexport function toggleCodeMark(editor: StencylEditor, marks?: StencylMarks) {\n\tisMarkActive(editor, 'code', marks)\n\t\t? deactivateMark(editor, 'code')\n\t\t: activateMark(editor, 'code');\n}\n\nexport function setConditionMark(\n\teditor: StencylEditor,\n\tvalue: StencylDisplayCondition | Array<StencylDisplayCondition>,\n) {\n\tactivateMark(editor, 'condition', value);\n}\n\nexport function unsetConditionMark(editor: StencylEditor) {\n\tdeactivateMark(editor, 'condition');\n}\n","import {BulletedListElement, NumberedListElement, StencylEditor} from '../../types';\nimport {Editor, Element} from 'slate';\n\nexport function getListEntries(editor: StencylEditor) {\n\tconst [listItemEntry] = Editor.nodes(editor, {\n\t\tmatch: (o) => Element.isElement(o) && o.type === 'list-item',\n\t\tmode: 'lowest',\n\t});\n\n\tconst [listEntry] = Editor.nodes(editor, {\n\t\tmatch: (o) =>\n\t\t\tElement.isElement(o) && (o.type === 'bulleted-list' || o.type === 'numbered-list'),\n\t\tmode: 'lowest',\n\t});\n\n\treturn {\n\t\tlistEntry,\n\t\tlistItemEntry,\n\t};\n}\n\nexport function getCurrentListBlock(editor: StencylEditor) {\n\tconst [match] = Editor.nodes<NumberedListElement | BulletedListElement>(editor, {\n\t\tmatch: (node) =>\n\t\t\tElement.isElement(node) && ['bulleted-list', 'numbered-list'].includes(node.type),\n\t\tmode: 'lowest',\n\t});\n\n\tif (!match) {\n\t\treturn undefined;\n\t}\n\n\treturn match;\n}\n","import {Editor, Element, Path, Range, Transforms} from 'slate';\nimport {\n\tgetLastChildEntry,\n\tgetNextPath,\n\tgetNodeAt,\n\tgetPreviousPath,\n\tisBlockActive,\n} from '../common/utils';\n\nimport {StencylEditor} from '../../types';\nimport {clamp} from '../../utils';\nimport {getListEntries} from './utils';\nimport {preBlockOps} from '../common/commands';\n\nexport function insertBulletedListBlock(editor: StencylEditor) {\n\tif (!editor.selection) {\n\t\treturn;\n\t}\n\n\tif (isBlockActive(editor, 'list-item')) {\n\t\tremoveListItemBlock(editor);\n\t} else {\n\t\tpreBlockOps(editor);\n\t}\n\n\tEditor.withoutNormalizing(editor, () => {\n\t\t// Transforms.setNodes(editor, {\n\t\t// \ttype: 'list-item-container',\n\t\t// });\n\n\t\t// const nodes = Array.from(\n\t\t// \tEditor.nodes(editor, {\n\t\t// \t\tmatch: (o) => Element.isElement(o) && o.type === 'list-item-container',\n\t\t// \t}),\n\t\t// );\n\n\t\t// const items: Array<any> = nodes.map(([o]) => ({\n\t\t// \ttype: 'list-item',\n\t\t// \tchildren: [o],\n\t\t// }));\n\n\t\t// Transforms.removeNodes(editor);\n\n\t\t// Transforms.insertNodes(\n\t\t// \teditor,\n\t\t// \t{\n\t\t// \t\ttype: 'bulleted-list',\n\t\t// \t\tchildren: items,\n\t\t// \t},\n\t\t// \t{select: true},\n\t\t// );\n\n\t\tTransforms.setNodes(editor, {\n\t\t\ttype: 'list-item',\n\t\t});\n\n\t\tTransforms.wrapNodes(editor, {\n\t\t\ttype: 'bulleted-list',\n\t\t\tchildren: [],\n\t\t});\n\t});\n}\n\nexport function insertNumberedListBlock(editor: StencylEditor) {\n\tif (!editor.selection) {\n\t\treturn;\n\t}\n\n\tif (isBlockActive(editor, 'list-item')) {\n\t\tremoveListItemBlock(editor);\n\t} else {\n\t\tpreBlockOps(editor);\n\t}\n\n\tEditor.withoutNormalizing(editor, () => {\n\t\tTransforms.setNodes(editor, {\n\t\t\ttype: 'list-item',\n\t\t});\n\n\t\tTransforms.wrapNodes(editor, {\n\t\t\ttype: 'numbered-list',\n\t\t\tchildren: [],\n\t\t});\n\t});\n}\n\nexport function removeListItemBlock(editor: StencylEditor) {\n\tif (!editor.selection) {\n\t\treturn;\n\t}\n\n\tconst {listEntry, listItemEntry} = getListEntries(editor);\n\n\tif (!listEntry) {\n\t\treturn;\n\t}\n\n\tconst [, listPath] = listEntry;\n\tconst [, listItemPath] = listItemEntry;\n\tconst ancestorListItemEntry = Editor.parent(editor, listItemPath, {\n\t\tdepth: clamp(listItemPath.length - 1, 0, Infinity),\n\t});\n\tconst isNested =\n\t\tElement.isElement(ancestorListItemEntry[0]) && ancestorListItemEntry[0].type === 'list-item';\n\n\tif (isNested) {\n\t\tTransforms.moveNodes(editor, {\n\t\t\tat: listItemPath,\n\t\t\tto: Path.next(ancestorListItemEntry[1]),\n\t\t});\n\t} else {\n\t\tEditor.withoutNormalizing(editor, () => {\n\t\t\tTransforms.unwrapNodes(editor, {\n\t\t\t\tsplit: true,\n\t\t\t});\n\n\t\t\tTransforms.moveNodes(editor, {\n\t\t\t\tto: Path.next(listPath),\n\t\t\t});\n\t\t\tTransforms.setNodes(\n\t\t\t\teditor,\n\t\t\t\t{\n\t\t\t\t\ttype: 'paragraph',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\thanging: true,\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t}\n}\n\nexport function increaseListNesting(editor: StencylEditor) {\n\t/**\n\t * Get previous list item in same level\n\t * If no previous list item, do nothing.\n\t * If previous list item exists, get last node in it\n\t * If last node is a list, move current list item into list in last node from above\n\t * If not, wrap list item with a list of type of parent list and move into previous list item\n\t */\n\n\tconst {listEntry, listItemEntry} = getListEntries(editor);\n\n\tif (!listEntry) {\n\t\treturn;\n\t}\n\n\tconst [, listItemPath] = listItemEntry;\n\tconst previousListItemPath = getPreviousPath(listItemPath, 1);\n\tconst previousListItemEntry = getNodeAt(editor, previousListItemPath);\n\n\tif (!previousListItemEntry) {\n\t\treturn;\n\t}\n\n\tconst lastNodeEntry = getLastChildEntry(previousListItemEntry);\n\n\tif (!lastNodeEntry) {\n\t\treturn;\n\t}\n\n\tconst [lastNode, lastNodePath] = lastNodeEntry;\n\n\tif (!Element.isElement(lastNode)) {\n\t\treturn;\n\t}\n\n\tEditor.withoutNormalizing(editor, () => {\n\t\tif (lastNode.type === 'bulleted-list' || lastNode.type === 'numbered-list') {\n\t\t\tconst destinationEntry = getLastChildEntry(lastNodeEntry);\n\n\t\t\tif (destinationEntry) {\n\t\t\t\tTransforms.moveNodes(editor, {\n\t\t\t\t\tmatch: (o) => Element.isElement(o) && o.type === 'list-item',\n\t\t\t\t\tto: getNextPath(destinationEntry[1]),\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tTransforms.wrapNodes(\n\t\t\t\teditor,\n\t\t\t\t{\n\t\t\t\t\ttype: (listEntry[0] as any).type,\n\t\t\t\t\tchildren: [],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmatch: (o) => Element.isElement(o) && o.type === 'list-item',\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tTransforms.moveNodes(editor, {\n\t\t\t\tmatch: (o) => Element.isElement(o) && ['bulleted-list', 'numbered-list'].includes(o.type),\n\t\t\t\tto: getNextPath(lastNodePath),\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport function decreaseListNesting(editor: StencylEditor) {\n\tconst {listEntry, listItemEntry} = getListEntries(editor);\n\n\tif (!listEntry) {\n\t\treturn;\n\t}\n\n\tconst [listNode, listPath] = listEntry;\n\tconst [, listItemPath] = listItemEntry;\n\tconst [ancestorListItemNode, ancestorListItemPath] = Editor.parent(editor, listItemPath, {\n\t\tdepth: clamp(listItemPath.length - 1, 0, Infinity),\n\t});\n\tconst [, lastPath] = Editor.last(editor, listPath);\n\tconst nextItem = getNodeAt(editor, Path.next(listItemPath));\n\tconst lastItem = getNodeAt(editor, lastPath.slice(0, listItemPath.length));\n\n\tif (nextItem && lastItem) {\n\t\tconst range: Range = {\n\t\t\tanchor: Editor.point(editor, nextItem[1], {edge: 'start'}),\n\t\t\tfocus: Editor.point(editor, lastItem[1], {edge: 'end'}),\n\t\t};\n\n\t\tEditor.withoutNormalizing(editor, () => {\n\t\t\tTransforms.wrapNodes(\n\t\t\t\teditor,\n\t\t\t\t{\n\t\t\t\t\ttype: Element.isElement(listNode) ? (listNode.type as any) : 'bulleted-list',\n\t\t\t\t\tchildren: [],\n\t\t\t\t},\n\t\t\t\t{at: range},\n\t\t\t);\n\n\t\t\tTransforms.moveNodes(editor, {\n\t\t\t\tat: Path.next(listItemPath),\n\t\t\t\tto: [...listItemPath, 1],\n\t\t\t});\n\t\t});\n\t}\n\n\tif (Editor.isEditor(ancestorListItemNode)) {\n\t\tEditor.withoutNormalizing(editor, () => {\n\t\t\tTransforms.unwrapNodes(editor, {\n\t\t\t\tsplit: true,\n\t\t\t});\n\n\t\t\tTransforms.moveNodes(editor, {\n\t\t\t\tto: Path.next(listPath),\n\t\t\t});\n\t\t\tTransforms.setNodes(\n\t\t\t\teditor,\n\t\t\t\t{\n\t\t\t\t\ttype: 'paragraph',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\thanging: true,\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t} else {\n\t\tTransforms.moveNodes(editor, {\n\t\t\tat: listItemPath,\n\t\t\tto: Path.next(ancestorListItemPath),\n\t\t});\n\t}\n}\n","import {IS_MAC} from '../../utils';\nimport {KeyboardEvent} from 'react';\nimport {StencylEditor} from '../../types';\nimport {leafKeyBindings} from '../leaf/keybinding';\nimport {listsKeyBindings} from '../lists/keybinding';\n\nexport type KeyBinding = (editor: StencylEditor, e: KeyboardEvent) => void;\n\nexport type KeyBindings = Record<string, KeyBinding>;\n\nexport type KeyBindingFn = () => KeyBindings;\n\nexport function mergeKeyBindings(generators: Array<KeyBindingFn>): KeyBindings {\n\tlet bindings: KeyBindings = {};\n\n\tfor (const generator of generators) {\n\t\tbindings = {...bindings, ...generator()};\n\t}\n\n\treturn bindings;\n}\n\nexport function toHotkey(e: KeyboardEvent) {\n\tconst list: Array<string> = [];\n\tconst key = e.key.toLowerCase();\n\n\tif (IS_MAC && e.metaKey) {\n\t\tif (key === 'meta') {\n\t\t\treturn 'mod';\n\t\t}\n\n\t\tlist.push('mod');\n\t}\n\n\tif (!IS_MAC && e.ctrlKey) {\n\t\tif (key === 'control') {\n\t\t\treturn 'mod';\n\t\t}\n\n\t\tlist.push('mod');\n\t}\n\n\tif (IS_MAC && e.ctrlKey && key !== 'control') {\n\t\tlist.push('control');\n\t}\n\n\tif (e.altKey && key !== 'alt') {\n\t\tlist.push('alt');\n\t}\n\n\tif (e.shiftKey && key !== 'shift') {\n\t\tlist.push('shift');\n\t}\n\n\tlist.push(key);\n\n\treturn list.join('+');\n}\n\n// ------------------------------------------------\n// Operations\n// ------------------------------------------------\n\nconst generators: Array<KeyBindingFn> = [leafKeyBindings, listsKeyBindings];\n\nconst KEYBINDINGS = mergeKeyBindings(generators);\n\nexport function runKeyBindings(editor: StencylEditor, e: KeyboardEvent) {\n\tconst hotkey = toHotkey(e);\n\tconst keybinding = KEYBINDINGS[hotkey];\n\n\tif (keybinding) {\n\t\tkeybinding(editor, e);\n\t}\n}\n","import {\n\ttoggleBoldMark,\n\ttoggleItalicMark,\n\ttoggleStrikethroughMark,\n\ttoggleUnderlineMark,\n} from './commands';\n\nimport {KeyBindingFn} from '../keybindings';\n\nexport const leafKeyBindings: KeyBindingFn = () => ({\n\t'mod+b': (editor) => {\n\t\ttoggleBoldMark(editor);\n\t},\n\t'mod+i': (editor) => {\n\t\ttoggleItalicMark(editor);\n\t},\n\t'mod+u': (editor) => {\n\t\ttoggleUnderlineMark(editor);\n\t},\n\t'mod+shift+x': (editor) => {\n\t\ttoggleStrikethroughMark(editor);\n\t},\n});\n","import {decreaseListNesting, increaseListNesting} from './commands';\n\nimport {KeyBindingFn} from '../keybindings';\nimport {isBlockActive} from '../common/utils';\n\nexport const listsKeyBindings: KeyBindingFn = () => ({\n\ttab: (editor, e) => {\n\t\tconst isActive = isBlockActive(editor, 'list-item');\n\n\t\tif (isActive) {\n\t\t\te.preventDefault();\n\t\t\tincreaseListNesting(editor);\n\t\t}\n\t},\n\t'shift+tab': (editor, e) => {\n\t\tconst isActive = isBlockActive(editor, 'list-item');\n\n\t\tif (isActive) {\n\t\t\te.preventDefault();\n\t\t\tdecreaseListNesting(editor);\n\t\t}\n\t},\n});\n","import {Editable, useSlateStatic} from 'slate-react';\nimport React, {FC, KeyboardEvent, PropsWithChildren, memo, useCallback} from 'react';\n\nimport {EditorElement} from '../element';\nimport {Leaf} from '../../../../packages/leaf';\nimport constants from '../../../../constants';\nimport css from './style.module.css';\nimport {runKeyBindings} from '../../../../packages/keybindings';\n\ntype CanvasProps = PropsWithChildren<{}>;\n\nconst canvasWidthStyle = {\n\twidth: constants.paperSizes.a4.width,\n\tminHeight: constants.paperSizes.a4.height,\n};\n\nconst BaseCanvas: FC<CanvasProps> = () => {\n\tconst editor = useSlateStatic();\n\tconst renderElement = useCallback((props) => <EditorElement {...props} />, []);\n\tconst renderLeaf = useCallback((props) => <Leaf {...props} />, []);\n\tconst handleKeyDown = useCallback((e: KeyboardEvent) => {\n\t\trunKeyBindings(editor, e);\n\t}, []);\n\n\treturn (\n\t\t<div className={css.container} style={canvasWidthStyle}>\n\t\t\t<Editable\n\t\t\t\tspellCheck\n\t\t\t\tplaceholder='Start typing...'\n\t\t\t\trenderElement={renderElement}\n\t\t\t\trenderLeaf={renderLeaf}\n\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport const Canvas = memo(BaseCanvas);\n","export const DATE_FORMATS = [\n\t'do MMMM, yyyy',\n\t'dd MMMM, yyyy',\n\t'MMMM dd, yyyy',\n\t'dd/MM/yyyy',\n\t'MM/dd/yyyy',\n\t'MMM d, yyyy',\n\t'dd MMM, yy',\n\t'dd-MM-yyyy',\n\t'dd-MM-yy',\n];\n\nexport const TIME_FORMATS = ['hh:mm a', 'hh:mm aaaa', 'HH:mm'];\n","import React, {Children, FC, PropsWithChildren, ReactElement, cloneElement} from 'react';\n\nimport classNames from 'classnames';\n\ntype FieldProps = PropsWithChildren<{\n\tlabel?: string;\n\tclassName?: string;\n}>;\n\nconst Field: FC<FieldProps> = ({className, children, label}) => {\n\treturn (\n\t\t<div className={className}>\n\t\t\t{!!label?.length && (\n\t\t\t\t<label className='text-blue-500 block mb-4 text-subhead font-medium'>{label}</label>\n\t\t\t)}\n\t\t\t{Children.map(children, (child: ReactElement) =>\n\t\t\t\tcloneElement(child, {\n\t\t\t\t\tclassName: classNames(\n\t\t\t\t\t\tchild.props.className,\n\t\t\t\t\t\t'w-full appearance-none border border-gray-200 rounded-lg h-36 px-8 transition:colors transition:shadow duration-250 focus:border-blue-500 focus:shadow-outline',\n\t\t\t\t\t),\n\t\t\t\t}),\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Field;\n","import {DependencyList, MouseEvent, useCallback, useEffect, useMemo, useState} from 'react';\nimport {EditableElement, ImageElement, TableElement} from '../types';\nimport {useFocused, useSlate} from 'slate-react';\n\nimport {NodeEntry} from 'slate';\nimport {getConfigurableBlockInSelection} from '../packages/common/utils';\nimport {sleep} from '../utils';\nimport useDebouncedEffectLib from 'use-debounced-effect';\n\nexport type ModalActions = {\n\tvisible: boolean;\n\topen: Fn;\n\tclose: () => Promise<void>;\n\ttoggle: Fn;\n};\n\nexport function useMouseDown(fn?: Fn): (e: MouseEvent) => void {\n\treturn useCallback(\n\t\t(e: MouseEvent) => {\n\t\t\te?.preventDefault();\n\t\t\tfn?.();\n\t\t},\n\t\t[fn],\n\t);\n}\n\nexport function useModalUtils(initialOpen: boolean = false, animationDuration = 0): ModalActions {\n\tconst [visible, setVisible] = useState(initialOpen);\n\n\tconst handleOpen = useCallback(() => {\n\t\tsetVisible(true);\n\t}, []);\n\n\tconst handleClose = useCallback(async () => {\n\t\tsetVisible(false);\n\t\tawait sleep(animationDuration);\n\t\treturn Promise.resolve();\n\t}, [animationDuration]);\n\n\tconst handleToggle = useCallback(() => {\n\t\tsetVisible((o) => !o);\n\t}, []);\n\n\tconst actions: ModalActions = useMemo(\n\t\t() => ({\n\t\t\tvisible,\n\t\t\topen: handleOpen,\n\t\t\tclose: handleClose,\n\t\t\ttoggle: handleToggle,\n\t\t}),\n\t\t[handleClose, handleOpen, handleToggle, visible],\n\t);\n\n\treturn actions;\n}\n\nexport function useBooleanState(initialState: boolean) {\n\tconst [state, setState] = useState(initialState);\n\tconst toggleState = useCallback(() => {\n\t\tsetState((o) => !o);\n\t}, []);\n\treturn [state, toggleState, setState] as const;\n}\n\nexport function useDebounceEffect(callback: Fn, deps: DependencyList, delay = 500) {\n\treturn useDebouncedEffectLib(callback, delay, deps);\n}\n\nexport function useEditingBlock() {\n\tconst editor = useSlate();\n\tconst focused = useFocused();\n\tconst [entry, setEntry] = useState<NodeEntry<ImageElement | TableElement | EditableElement>>();\n\n\tuseEffect(() => {\n\t\tconst block = getConfigurableBlockInSelection(editor);\n\t\tsetEntry((o) => (focused ? block : o));\n\t}, [editor.selection, focused]);\n\n\treturn entry;\n}\n\nexport function withMouseDown(fn?: Fn): (e: MouseEvent) => void {\n\tconst wrapped = (e: MouseEvent) => {\n\t\te?.preventDefault();\n\t\tfn?.();\n\t};\n\treturn wrapped;\n}\n","import React, {Children, FC, PropsWithChildren, ReactElement, cloneElement, memo} from 'react';\n\nimport classNames from 'classnames';\nimport {useMouseDown} from '../../../../hooks';\n\ntype IconProps = PropsWithChildren<{\n\tclassName?: string;\n\tonPress?: Fn;\n}>;\n\nconst BaseIcon: FC<IconProps> = ({children, className, onPress}) => {\n\tconst handlePress = useMouseDown(onPress);\n\treturn (\n\t\t<figure\n\t\t\tonMouseDown={handlePress}\n\t\t\tclassName={classNames('flex-shrink-0', className, {\n\t\t\t\t's-16': !/\\bs-[0-9]/gi.test(className ?? ''),\n\t\t\t})}\n\t\t>\n\t\t\t{Children.map(children, (child: ReactElement) =>\n\t\t\t\tchild\n\t\t\t\t\t? cloneElement(child, {\n\t\t\t\t\t\t\tclassName: classNames(\n\t\t\t\t\t\t\t\tchild.props.className,\n\t\t\t\t\t\t\t\t'h-full w-full object-contain  object-center m-auto pointer-events-none',\n\t\t\t\t\t\t\t),\n\t\t\t\t\t  })\n\t\t\t\t\t: child,\n\t\t\t)}\n\t\t</figure>\n\t);\n};\n\nconst Icon = memo(BaseIcon);\n\nexport default Icon;\n","import React, {ChangeEvent, FC, KeyboardEvent, useState} from 'react';\n\nimport {ReactComponent as CirclePlus} from '../../../../assets/images/icon-circle-plus.svg';\nimport Icon from '../icon';\nimport {StencylOption} from '../../../../types';\nimport {ReactComponent as Trash} from '../../../../assets/images/icon-trash.svg';\n\ntype OptionItemProps = {\n\toption: StencylOption;\n\tonClickDelete?: (id: string) => void;\n};\n\ntype OptionsProps = {\n\tclassName?: string;\n\tlabel?: string;\n\toptions: Array<StencylOption>;\n\tonCreateOption?: (text: string) => void;\n\tonDeleteOption?: (id: string) => void;\n};\n\nconst OptionItem: FC<OptionItemProps> = ({option, onClickDelete}) => {\n\treturn (\n\t\t<div className='flex items-center justify-between px-8 h-36 w-full border border-gray-200 bg-gray-100 rounded-lg'>\n\t\t\t<span className='text-gray-500'>{option.label}</span>\n\t\t\t<Icon\n\t\t\t\tonPress={() => onClickDelete?.(option.id)}\n\t\t\t\tclassName='cursor-pointer text-gray-500 transition-colors duration-250 hover:text-red-300'\n\t\t\t>\n\t\t\t\t<Trash />\n\t\t\t</Icon>\n\t\t</div>\n\t);\n};\n\nexport const Options: FC<OptionsProps> = ({\n\tclassName,\n\tlabel,\n\toptions,\n\tonCreateOption,\n\tonDeleteOption,\n}) => {\n\tconst [editingOption, setEditingOption] = useState('');\n\n\tconst handleSubmitEditingOption = () => {\n\t\tif (!editingOption?.trim().length) {\n\t\t\treturn;\n\t\t}\n\n\t\tonCreateOption?.(editingOption);\n\t\tsetEditingOption('');\n\t};\n\n\tconst handleChangeEditingOption = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetEditingOption(e.target.value);\n\t};\n\n\tconst handleEditingOptionKeydown = (e: KeyboardEvent) => {\n\t\tif (e.key?.toLowerCase() === 'enter') {\n\t\t\te.preventDefault();\n\t\t\thandleSubmitEditingOption();\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{!!label?.length && (\n\t\t\t\t<label className='text-blue-500 block mb-4 text-subhead font-medium'>{label}</label>\n\t\t\t)}\n\t\t\t<div className='space-y-8'>\n\t\t\t\t{options.map((o) => (\n\t\t\t\t\t<OptionItem option={o} key={o.id} onClickDelete={onDeleteOption} />\n\t\t\t\t))}\n\t\t\t\t<div className='flex items-center justify-between px-8 h-36 w-full border border-gray-200 rounded-lg transition:colors transition:shadow duration-250 focus-within:shadow-outline focus-within:border-blue-500'>\n\t\t\t\t\t<input\n\t\t\t\t\t\tvalue={editingOption}\n\t\t\t\t\t\tclassName='border-none h-full w-full bg-transparent m-0'\n\t\t\t\t\t\tplaceholder='+ Add an option'\n\t\t\t\t\t\tonChange={handleChangeEditingOption}\n\t\t\t\t\t\tonKeyDown={handleEditingOptionKeydown}\n\t\t\t\t\t/>\n\t\t\t\t\t<Icon\n\t\t\t\t\t\tonPress={handleSubmitEditingOption}\n\t\t\t\t\t\tclassName='cursor-pointer text-blue-500 transition-colors duration-250 hover:text-blue-600'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CirclePlus />\n\t\t\t\t\t</Icon>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React, {FC, memo} from 'react';\n\nimport ReactSwitch from 'react-switch';\n\ntype SwitchProps = {\n\tclassName?: string;\n\tvalue: boolean;\n\tonChangeValue: (value: boolean) => void;\n};\n\nconst BaseSwitch: FC<SwitchProps> = ({className, value, onChangeValue}) => {\n\treturn (\n\t\t<ReactSwitch\n\t\t\tchecked={value}\n\t\t\tclassName={className}\n\t\t\tonChange={onChangeValue}\n\t\t\toffColor='#ADC5FA'\n\t\t\tonColor='#326FF3'\n\t\t\tcheckedIcon={false}\n\t\t\tuncheckedIcon={false}\n\t\t\thandleDiameter={18}\n\t\t\theight={22}\n\t\t\twidth={44}\n\t\t\tactiveBoxShadow='0 0 0 4px rgba(103, 126, 138, 0.125)'\n\t\t/>\n\t);\n};\n\nconst Switch = memo(BaseSwitch);\n\nexport default Switch;\n","import {\n\tEditableDateElement,\n\tEditableElement,\n\tEditableImageElement,\n\tEditableOptionsElement,\n\tEditableTextElement,\n\tStencylEditor,\n} from '../../types';\nimport {Element, Node, NodeEntry, Transforms} from 'slate';\nimport {getCurrentEditableElement, invalidateEditableElementsCache} from './utils';\n\nexport function insertInlineEditable(editor: StencylEditor, element: EditableElement) {\n\tTransforms.insertNodes(editor, element, {voids: false});\n\tinvalidateEditableElementsCache();\n}\n\nexport function insertInvisibleEditable(editor: StencylEditor, element: EditableElement) {\n\tTransforms.insertNodes(editor, element);\n\tinvalidateEditableElementsCache();\n}\n\nexport function updateInlineEditable(\n\teditor: StencylEditor,\n\tattributes: Partial<EditableElement> = {},\n\teditableEntry?: NodeEntry<Node>,\n) {\n\teditableEntry = editableEntry ?? getCurrentEditableElement(editor) ?? undefined;\n\n\tif (!editableEntry) {\n\t\treturn;\n\t}\n\n\tconst [editableNode, editablePath] = editableEntry;\n\n\tif (!Element.isElement(editableNode) || editableNode.type !== 'editable') {\n\t\treturn;\n\t}\n\n\tTransforms.setNodes(\n\t\teditor,\n\t\t{\n\t\t\tdefaultValue: attributes.defaultValue ?? editableNode.defaultValue,\n\t\t\tlabel: attributes.label ?? editableNode.label,\n\t\t\ttip: attributes.tip,\n\t\t\tlinkId: attributes.linkId ?? editableNode.linkId,\n\t\t\tmultiline:\n\t\t\t\teditableNode.dataType === 'text'\n\t\t\t\t\t? (attributes as EditableTextElement).multiline ?? editableNode.multiline\n\t\t\t\t\t: undefined,\n\t\t\toptions:\n\t\t\t\teditableNode.dataType === 'options' || editableNode.dataType === 'radio'\n\t\t\t\t\t? (attributes as EditableOptionsElement).options ?? editableNode.options\n\t\t\t\t\t: undefined,\n\t\t\tdateTimeFormat:\n\t\t\t\teditableNode.dataType === 'date' || editableNode.dataType === 'time'\n\t\t\t\t\t? (attributes as EditableDateElement).dateTimeFormat ?? editableNode.dateTimeFormat\n\t\t\t\t\t: undefined,\n\t\t\twidth:\n\t\t\t\teditableNode.dataType === 'image'\n\t\t\t\t\t? (attributes as EditableImageElement).width ?? editableNode.width\n\t\t\t\t\t: undefined,\n\t\t\theight:\n\t\t\t\teditableNode.dataType === 'image'\n\t\t\t\t\t? (attributes as EditableImageElement).height ?? editableNode.height\n\t\t\t\t\t: undefined,\n\t\t},\n\t\t{at: editablePath, hanging: true, voids: true},\n\t);\n\n\tinvalidateEditableElementsCache();\n}\n","import {DATE_FORMATS, TIME_FORMATS} from '../../../../../constants/datetime';\nimport {EditableElement, ImageElement, TableElement} from '../../../../../types';\nimport React, {\n\tChangeEvent,\n\tFC,\n\tFragment,\n\tKeyboardEvent,\n\tmemo,\n\tuseCallback,\n\tuseEffect,\n\tuseRef,\n\tuseState,\n} from 'react';\nimport {formatDate, generateUUID, isEnterKey} from '../../../../../utils';\n\nimport Field from '../../field';\nimport {NodeEntry} from 'slate';\nimport {Options} from '../../options';\nimport Switch from '../../switch';\nimport {updateInlineEditable} from '../../../../../packages/editable/commands';\nimport {useSlateStatic} from 'slate-react';\n\ntype EditEditableProps = {\n\tentry: NodeEntry<ImageElement | TableElement | EditableElement>;\n};\n\nconst BaseEditEditable: FC<EditEditableProps> = ({entry}) => {\n\tconst now = useRef(Date.now());\n\tconst editor = useSlateStatic();\n\tconst [node, path] = entry;\n\n\tif (node.type !== 'editable') {\n\t\treturn null;\n\t}\n\n\tconst [attributes, setAttributes] = useState(node);\n\n\tuseEffect(() => {\n\t\tsetAttributes(node);\n\t}, [node]);\n\n\tconst persistChanges = (patch: Partial<EditableElement> = {}) => {\n\t\tconst current: Partial<EditableElement> = {...attributes, ...patch};\n\t\tcurrent.label = current.label?.length ? current.label : undefined;\n\t\tcurrent.tip = current.tip?.length ? current.tip : undefined;\n\n\t\tupdateInlineEditable(editor, current, [node, path]);\n\t};\n\n\tconst handleBlurInput = () => {\n\t\tpersistChanges();\n\t};\n\n\tconst handleKeyDown = (e: KeyboardEvent) => {\n\t\tif (isEnterKey(e)) {\n\t\t\tpersistChanges();\n\t\t}\n\t};\n\n\tconst handleChangeLabel = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tconst label = e.target?.value ?? '';\n\t\tsetAttributes((o) => ({...o, label}));\n\t};\n\n\tconst handleChangeMultiline = (value: boolean) => {\n\t\tsetAttributes((o) => ({...o, multiline: value}));\n\t\tpersistChanges({multiline: value});\n\t};\n\n\tconst handleChangeTip = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tconst tip = e.target?.value ?? '';\n\t\tsetAttributes((o) => ({...o, tip}));\n\t};\n\n\tconst handleChangeDateTimeFormat = useCallback(\n\t\t(e: ChangeEvent<HTMLSelectElement>) => {\n\t\t\tconst value = e.target.value;\n\t\t\tsetAttributes((o) => ({...o, dateTimeFormat: value}));\n\t\t\tpersistChanges({dateTimeFormat: value});\n\t\t},\n\t\t[persistChanges],\n\t);\n\n\tconst handleChangeWidth = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tif (attributes.dataType !== 'image') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst parsedValue = parseInt(e.target.value);\n\t\tconst eventualWidth = isNaN(parsedValue) || parsedValue < 1 ? attributes.width : parsedValue;\n\t\tsetAttributes((o) => ({...o, width: eventualWidth}));\n\t};\n\n\tconst handleChangeHeight = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tif (attributes.dataType !== 'image') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst parsedValue = parseInt(e.target.value);\n\t\tconst eventualHeight = isNaN(parsedValue) || parsedValue < 1 ? attributes.height : parsedValue;\n\t\tsetAttributes((o) => ({...o, height: eventualHeight}));\n\t};\n\n\tconst handleCreateOption = (text: string) => {\n\t\tif (attributes.dataType !== 'options' && attributes.dataType !== 'radio') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = generateUUID();\n\t\tconst eventualValue = [...attributes.options, {id, label: text}];\n\n\t\tsetAttributes((o) => ({...o, options: eventualValue}));\n\t\tpersistChanges({options: eventualValue});\n\t};\n\n\tconst handleDeleteOption = useCallback((id: string) => {\n\t\tif (attributes.dataType !== 'options' && attributes.dataType !== 'radio') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst eventualValue = [...attributes.options];\n\t\tconst index = eventualValue.findIndex((o) => o.id === id);\n\n\t\tif (!~index) {\n\t\t\treturn;\n\t\t}\n\n\t\teventualValue.splice(index, 1);\n\t\tsetAttributes((o) => ({...o, options: eventualValue}));\n\t\tpersistChanges({options: eventualValue});\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='text-headline text-blue-500 mb-8'>Editable {attributes.dataType}</div>\n\t\t\t<div className='text-gray-500 mb-24 text-subhead'>\n\t\t\t\tConfigure properties of editable elements, which show up as form elements to users.\n\t\t\t</div>\n\t\t\t<div className='space-y-16'>\n\t\t\t\t<Field label='Question'>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Type a question here...'\n\t\t\t\t\t\tvalue={attributes.label}\n\t\t\t\t\t\tonChange={handleChangeLabel}\n\t\t\t\t\t\tonBlur={handleBlurInput}\n\t\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\t/>\n\t\t\t\t</Field>\n\t\t\t\t{attributes.linkId || (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t{attributes.dataType === 'text' && (\n\t\t\t\t\t\t\t<div className='flex items-center justify-between'>\n\t\t\t\t\t\t\t\t<div>Multiline text</div>\n\t\t\t\t\t\t\t\t<Switch value={!!attributes.multiline} onChangeValue={handleChangeMultiline} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{attributes.dataType === 'image' && (\n\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t<div className='flex items-center justify-between'>\n\t\t\t\t\t\t\t\t\t<div className='bg-gray-500 text-footnote font-medium rounded-default px-8 py-4 text-white uppercase'>\n\t\t\t\t\t\t\t\t\t\tWidth\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<Field className='w-120'>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='0'\n\t\t\t\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\t\t\t\tvalue={attributes.width}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChangeWidth}\n\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlurInput}\n\t\t\t\t\t\t\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='flex items-center justify-between'>\n\t\t\t\t\t\t\t\t\t<div className='bg-gray-500 text-footnote font-medium rounded-default px-8 py-4 text-white uppercase'>\n\t\t\t\t\t\t\t\t\t\tHeight\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<Field className='w-120'>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='0'\n\t\t\t\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\t\t\t\tvalue={attributes.height}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChangeHeight}\n\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlurInput}\n\t\t\t\t\t\t\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{attributes.dataType === 'date' && (\n\t\t\t\t\t\t\t<Field label='Date format'>\n\t\t\t\t\t\t\t\t<select value={attributes.dateTimeFormat} onChange={handleChangeDateTimeFormat}>\n\t\t\t\t\t\t\t\t\t<option hidden value=''>\n\t\t\t\t\t\t\t\t\t\tChoose one\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t{DATE_FORMATS.map((o) => (\n\t\t\t\t\t\t\t\t\t\t<option value={o} key={o}>\n\t\t\t\t\t\t\t\t\t\t\t{formatDate(now.current, o)}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{attributes.dataType === 'time' && (\n\t\t\t\t\t\t\t<Field label='Time format'>\n\t\t\t\t\t\t\t\t<select value={attributes.dateTimeFormat} onChange={handleChangeDateTimeFormat}>\n\t\t\t\t\t\t\t\t\t<option hidden value=''>\n\t\t\t\t\t\t\t\t\t\tChoose one\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t{TIME_FORMATS.map((o) => (\n\t\t\t\t\t\t\t\t\t\t<option value={o} key={o}>\n\t\t\t\t\t\t\t\t\t\t\t{formatDate(now.current, o)}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field label='Description'>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tplaceholder='Type a description here'\n\t\t\t\t\t\t\t\tvalue={attributes.tip ?? ''}\n\t\t\t\t\t\t\t\tonChange={handleChangeTip}\n\t\t\t\t\t\t\t\tonBlur={handleBlurInput}\n\t\t\t\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t{(attributes.dataType === 'options' || attributes.dataType === 'radio') && (\n\t\t\t\t\t\t\t<Options\n\t\t\t\t\t\t\t\tlabel='Options'\n\t\t\t\t\t\t\t\toptions={attributes.options}\n\t\t\t\t\t\t\t\tonCreateOption={handleCreateOption}\n\t\t\t\t\t\t\t\tonDeleteOption={handleDeleteOption}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Fragment>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport const EditEditable = memo(BaseEditEditable);\n","import {Editor, Element, NodeEntry, Range, Transforms} from 'slate';\nimport {ImageElement, StencylEditor} from '../../types';\n\nimport {getEmptyTextNode} from '../common/utils';\n\nexport type ImageInsertOptions = {\n\twidth: number;\n\theight: number;\n\turl: string;\n};\n\nexport type ImageResizeOptions = {\n\tentry?: NodeEntry<ImageElement>;\n\twidth?: number;\n\theight?: number;\n};\n\nexport function getCurrentInlineImage(editor: StencylEditor) {\n\tconst {selection} = editor;\n\n\tif (!selection) {\n\t\treturn null;\n\t}\n\n\tconst [match] = Editor.nodes<ImageElement>(editor, {\n\t\tmatch: (node) => Element.isElement(node) && editor.isInline(node) && node.type === 'image',\n\t\tmode: 'lowest',\n\t});\n\n\treturn match;\n}\n\nexport function insertInlineImage(editor: StencylEditor, options: ImageInsertOptions) {\n\tif (!editor.selection) {\n\t\treturn;\n\t}\n\n\tif (!Range.isCollapsed(editor.selection)) {\n\t\tTransforms.delete(editor);\n\t}\n\n\tTransforms.insertNodes(editor, {\n\t\ttype: 'image',\n\t\turl: options.url,\n\t\twidth: options.width,\n\t\theight: options.height,\n\t\tchildren: getEmptyTextNode(),\n\t});\n}\n\nexport function resizeInlineImage(editor: StencylEditor, options: ImageResizeOptions = {}) {\n\tconst currentImage = options.entry ?? getCurrentInlineImage(editor);\n\n\tif (!currentImage || (!options.width && !options.height)) {\n\t\treturn;\n\t}\n\n\tconst [, path] = currentImage;\n\tconst {width, height} = options;\n\n\tTransforms.setNodes(\n\t\teditor,\n\t\t{\n\t\t\twidth,\n\t\t\theight,\n\t\t},\n\t\t{at: path},\n\t);\n}\n","import {EditableElement, ImageElement, TableElement} from '../../../../../types';\nimport React, {ChangeEvent, FC, KeyboardEvent, memo, useState} from 'react';\n\nimport Field from '../../field';\nimport Icon from '../../icon';\nimport {NodeEntry} from 'slate';\nimport {ReactComponent as Photo} from '../../../../../assets/images/icon-photo.svg';\nimport {isEnterKey} from '../../../../../utils';\nimport {resizeInlineImage} from '../../../../../packages/image/commands';\nimport {useSlateStatic} from 'slate-react';\n\ntype EditImageProps = {\n\tentry: NodeEntry<ImageElement | TableElement | EditableElement>;\n};\n\nconst BaseEditImage: FC<EditImageProps> = ({entry}) => {\n\tconst editor = useSlateStatic();\n\tconst [node, path] = entry;\n\n\tif (node.type !== 'image') {\n\t\treturn null;\n\t}\n\n\tconst ratio = node.width / node.height;\n\tconst [width, setWidth] = useState(node.width);\n\tconst [height, setHeight] = useState(node.height);\n\n\tconst handleChangeWidth = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tconst parsedValue = parseInt(e.target.value);\n\t\tconst eventualWidth = isNaN(parsedValue) || parsedValue < 1 ? width : parsedValue;\n\t\tconst eventualHeight = Math.round(eventualWidth / ratio);\n\n\t\tsetWidth(eventualWidth);\n\t\tsetHeight(eventualHeight);\n\t};\n\n\tconst handleChangeHeight = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tconst parsedValue = parseInt(e.target.value);\n\t\tconst eventualHeight = isNaN(parsedValue) || parsedValue < 1 ? height : parsedValue;\n\t\tconst eventualWidth = Math.round(eventualHeight * ratio);\n\n\t\tsetWidth(eventualWidth);\n\t\tsetHeight(eventualHeight);\n\t};\n\n\tconst persistChanges = () => {\n\t\tresizeInlineImage(editor, {\n\t\t\tentry: [node, path],\n\t\t\twidth,\n\t\t\theight,\n\t\t});\n\t};\n\n\tconst handleBlurInput = () => {\n\t\tpersistChanges();\n\t};\n\n\tconst handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n\t\tif (isEnterKey(e)) {\n\t\t\tpersistChanges();\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='text-headline text-blue-500 mb-16'>Edit an image</div>\n\t\t\t<div className='space-y-8'>\n\t\t\t\t<div className='space-x-16 flex items-center'>\n\t\t\t\t\t<Icon className='s-20 text-gray-500'>\n\t\t\t\t\t\t<Photo />\n\t\t\t\t\t</Icon>\n\t\t\t\t\t<Field className='w-full'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttitle={node.url}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tplaceholder='Paste a link to an image'\n\t\t\t\t\t\t\tdefaultValue={node.url}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Field>\n\t\t\t\t</div>\n\t\t\t\t<div className='flex items-center justify-between'>\n\t\t\t\t\t<div className='bg-gray-500 text-footnote font-medium rounded-default px-8 py-4 text-white uppercase'>\n\t\t\t\t\t\tWidth\n\t\t\t\t\t</div>\n\t\t\t\t\t<Field className='w-120'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tplaceholder='0'\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tvalue={width}\n\t\t\t\t\t\t\tonChange={handleChangeWidth}\n\t\t\t\t\t\t\tonBlur={handleBlurInput}\n\t\t\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Field>\n\t\t\t\t</div>\n\t\t\t\t<div className='flex items-center justify-between'>\n\t\t\t\t\t<div className='bg-gray-500 text-footnote font-medium rounded-default px-8 py-4 text-white uppercase'>\n\t\t\t\t\t\tHeight\n\t\t\t\t\t</div>\n\t\t\t\t\t<Field className='w-120'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tplaceholder='0'\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tvalue={height}\n\t\t\t\t\t\t\tonChange={handleChangeHeight}\n\t\t\t\t\t\t\tonBlur={handleBlurInput}\n\t\t\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Field>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport const EditImage = memo(BaseEditImage);\n","import {Editor, Element} from 'slate';\nimport {StencylEditor, TableCellElement, TableElement, TableRowElement} from '../../types';\n\nimport {array} from '../../utils';\n\nexport const DEFAULT_TABLE_CELL_WIDTH = 48;\nexport const DEFAULT_TABLE_CELL_HEIGHT = 48;\nexport const DEFAULT_TABLE_ROWS = 2;\nexport const DEFAULT_TABLE_COLS = 2;\n\nexport function getTableEntries(editor: StencylEditor) {\n\tconst [tableEntry, tableRowEntry, tableCellEntry] = Editor.nodes(editor, {\n\t\tmatch: (node) =>\n\t\t\tElement.isElement(node) && ['table', 'table-row', 'table-cell'].includes(node.type),\n\t\tmode: 'all',\n\t});\n\n\treturn {tableEntry, tableRowEntry, tableCellEntry};\n}\n\nexport function createTableCell(\n\twidth = DEFAULT_TABLE_CELL_WIDTH,\n\theight = DEFAULT_TABLE_CELL_HEIGHT,\n): TableCellElement {\n\treturn {\n\t\ttype: 'table-cell',\n\t\tchildren: [{type: 'paragraph', children: [{text: ''}]}],\n\t\twidth,\n\t\theight,\n\t};\n}\n\nexport function createTableRow(columns = DEFAULT_TABLE_COLS): TableRowElement {\n\treturn {\n\t\ttype: 'table-row',\n\t\tchildren: array(columns).map(() => createTableCell()),\n\t};\n}\n\nexport function createTable(rows = DEFAULT_TABLE_ROWS, columns = DEFAULT_TABLE_COLS): TableElement {\n\treturn {\n\t\ttype: 'table',\n\t\tchildren: array(rows).map(() => createTableRow(columns)),\n\t};\n}\n","import {Editor, Element, Path, Range, Text, Transforms} from 'slate';\nimport {array, lastItem} from '../../utils';\nimport {createTable, createTableCell, createTableRow, getTableEntries} from './utils';\nimport {getCurrentBlock, getNextPath, getSelectionLeaf} from '../common/utils';\n\nimport {StencylEditor} from '../../types';\nimport colors from '../../constants/colors';\n\nexport function insertTableBlock(editor: StencylEditor) {\n\tconst {selection} = editor;\n\n\tif (!selection) {\n\t\treturn;\n\t}\n\n\tlet destination: Path | undefined;\n\n\tif (!Range.isCollapsed(selection)) {\n\t\tTransforms.splitNodes(editor);\n\t} else {\n\t\tconst block = getCurrentBlock(editor, 'lowest');\n\n\t\tif (block) {\n\t\t\tconst [blockNode, blockPath] = block;\n\t\t\tconst leaf = getSelectionLeaf(editor);\n\n\t\t\tif (leaf && Text.isText(leaf[0]) && !leaf[0].text.length) {\n\t\t\t\tdestination =\n\t\t\t\t\tElement.isElement(blockNode) && blockNode.type === 'list-item-container'\n\t\t\t\t\t\t? getNextPath(blockPath)\n\t\t\t\t\t\t: blockPath;\n\t\t\t} else {\n\t\t\t\tdestination = getNextPath(blockPath);\n\t\t\t}\n\t\t}\n\t}\n\n\tTransforms.insertNodes(editor, createTable(), {\n\t\tat: destination,\n\t\tselect: true,\n\t});\n\n\tconst {tableEntry} = getTableEntries(editor);\n\tconst firstPoint = Editor.start(editor, tableEntry[1]);\n\n\tTransforms.setSelection(editor, {\n\t\tanchor: firstPoint,\n\t\tfocus: firstPoint,\n\t});\n}\n\nexport function removeTableBlock(editor: StencylEditor) {\n\tconst {tableEntry} = getTableEntries(editor);\n\n\tif (tableEntry) {\n\t\tTransforms.removeNodes(editor, {at: tableEntry[1], hanging: true});\n\t}\n}\n\nexport function insertTableRowAbove(editor: StencylEditor) {\n\tconst {tableRowEntry} = getTableEntries(editor);\n\n\tif (!tableRowEntry) {\n\t\treturn;\n\t}\n\n\tconst [tableRowNode, tableRowPath] = tableRowEntry;\n\tconst colCount = Element.isElement(tableRowNode) ? tableRowNode.children.length : 1;\n\n\tTransforms.insertNodes(editor, createTableRow(colCount), {\n\t\tat: tableRowPath,\n\t});\n}\n\nexport function insertTableRowBelow(editor: StencylEditor) {\n\tconst {tableRowEntry} = getTableEntries(editor);\n\n\tif (!tableRowEntry) {\n\t\treturn;\n\t}\n\n\tconst [tableRowNode, tableRowPath] = tableRowEntry;\n\tconst colCount = Element.isElement(tableRowNode) ? tableRowNode.children.length : 1;\n\n\tTransforms.insertNodes(editor, createTableRow(colCount), {\n\t\tat: getNextPath(tableRowPath),\n\t});\n}\n\nexport function removeTableRow(editor: StencylEditor) {\n\tconst {tableEntry, tableRowEntry} = getTableEntries(editor);\n\n\tif (!tableEntry || !tableRowEntry) {\n\t\treturn;\n\t}\n\n\tconst [tableNode] = tableEntry;\n\tconst [, tableRowPath] = tableRowEntry;\n\tconst rowCount = Element.isElement(tableNode) ? tableNode.children.length : 1;\n\n\tif (rowCount <= 1) {\n\t\treturn;\n\t}\n\n\tTransforms.removeNodes(editor, {\n\t\tat: tableRowPath,\n\t\thanging: true,\n\t});\n}\n\nexport function insertTableColumnLeft(editor: StencylEditor) {\n\tconst {tableEntry, tableCellEntry} = getTableEntries(editor);\n\n\tif (!tableEntry || !tableCellEntry) {\n\t\treturn;\n\t}\n\n\tconst [tableNode, tablePath] = tableEntry;\n\tconst [, tableCellPath] = tableCellEntry;\n\tconst rowCount = Element.isElement(tableNode) ? tableNode.children.length : 1;\n\tconst colPos = tableCellPath.slice(-1)[0];\n\tconst cellToCreate = createTableCell();\n\n\tarray(rowCount).forEach((o) => {\n\t\tTransforms.insertNodes(editor, cellToCreate, {\n\t\t\tat: [...tablePath, o, colPos],\n\t\t\thanging: true,\n\t\t});\n\t});\n}\n\nexport function insertTableColumnRight(editor: StencylEditor) {\n\tconst {tableEntry, tableCellEntry} = getTableEntries(editor);\n\n\tif (!tableEntry || !tableCellEntry) {\n\t\treturn;\n\t}\n\n\tconst [tableNode, tablePath] = tableEntry;\n\tconst [, tableCellPath] = tableCellEntry;\n\tconst rowCount = Element.isElement(tableNode) ? tableNode.children.length : 1;\n\tconst colPos = tableCellPath.slice(-1)[0];\n\tconst cellToCreate = createTableCell();\n\n\tarray(rowCount).forEach((o) => {\n\t\tTransforms.insertNodes(editor, cellToCreate, {\n\t\t\tat: [...tablePath, o, colPos + 1],\n\t\t\thanging: true,\n\t\t});\n\t});\n}\n\nexport function removeTableColumn(editor: StencylEditor) {\n\tconst {tableEntry, tableRowEntry, tableCellEntry} = getTableEntries(editor);\n\n\tif (!tableEntry || !tableRowEntry || !tableCellEntry) {\n\t\treturn;\n\t}\n\n\tconst [, tablePath] = tableEntry;\n\tconst [tableRowNode] = tableRowEntry;\n\tconst [, tableCellPath] = tableCellEntry;\n\tconst colCount = Element.isElement(tableRowNode) ? tableRowNode.children.length : 1;\n\tconst colPos = tableCellPath.slice(-1)[0];\n\n\tif (colCount <= 1) {\n\t\treturn;\n\t}\n\n\tTransforms.removeNodes(editor, {\n\t\tat: tablePath,\n\t\thanging: true,\n\t\tmatch: (node, path) =>\n\t\t\tElement.isElement(node) &&\n\t\t\tnode.type === 'table-cell' &&\n\t\t\tpath.length === tableCellPath.length &&\n\t\t\tlastItem(path) === colPos,\n\t});\n}\n\nexport function showTableBorders(editor: StencylEditor) {\n\tconst {tableEntry} = getTableEntries(editor);\n\tconst [, tablePath] = tableEntry;\n\n\tTransforms.setNodes(\n\t\teditor,\n\t\t{\n\t\t\tborderColor: undefined,\n\t\t},\n\t\t{\n\t\t\tat: tablePath,\n\t\t\tmatch: (node) => Element.isElement(node) && node.type === 'table-cell',\n\t\t\thanging: true,\n\t\t\tsplit: true,\n\t\t\tmode: 'all',\n\t\t},\n\t);\n}\n\nexport function hideTableBorders(editor: StencylEditor) {\n\tconst {tableEntry} = getTableEntries(editor);\n\tconst [, tablePath] = tableEntry;\n\n\tTransforms.setNodes(\n\t\teditor,\n\t\t{\n\t\t\tborderColor: colors.transparent,\n\t\t},\n\t\t{\n\t\t\tat: tablePath,\n\t\t\tmatch: (node) => Element.isElement(node) && node.type === 'table-cell',\n\t\t\thanging: true,\n\t\t\tsplit: true,\n\t\t\tmode: 'all',\n\t\t},\n\t);\n}\n\nexport function tabToNextCell(editor: StencylEditor) {\n\tconst {tableCellEntry} = getTableEntries(editor);\n\n\tif (!tableCellEntry) {\n\t\treturn;\n\t}\n\n\tconst nextTableCellEntry = Editor.next(editor, {\n\t\tmatch: (node, path) =>\n\t\t\tElement.isElement(node) &&\n\t\t\tnode.type === 'table-cell' &&\n\t\t\t!Path.equals(path, tableCellEntry[1]) &&\n\t\t\tpath.length === tableCellEntry[1].length,\n\t});\n\n\tif (!nextTableCellEntry) {\n\t\treturn;\n\t}\n\n\tconst edges = Editor.edges(editor, nextTableCellEntry[1]);\n\n\tTransforms.setSelection(editor, {\n\t\tanchor: edges[0],\n\t\tfocus: edges[1],\n\t});\n}\n\nexport function tabToPreviousCell(editor: StencylEditor) {\n\tconst {tableCellEntry} = getTableEntries(editor);\n\n\tif (!tableCellEntry) {\n\t\treturn;\n\t}\n\n\tconst previousTableCellEntry = Editor.previous(editor, {\n\t\tmatch: (node, path) =>\n\t\t\tElement.isElement(node) &&\n\t\t\tnode.type === 'table-cell' &&\n\t\t\t!Path.equals(path, tableCellEntry[1]) &&\n\t\t\tpath.length === tableCellEntry[1].length,\n\t});\n\n\tif (!previousTableCellEntry) {\n\t\treturn;\n\t}\n\n\tconst edges = Editor.edges(editor, previousTableCellEntry[1]);\n\n\tTransforms.setSelection(editor, {\n\t\tanchor: edges[0],\n\t\tfocus: edges[1],\n\t});\n}\n","import React, {FC, MouseEvent, memo, useEffect, useState} from 'react';\nimport {\n\thideTableBorders,\n\tinsertTableColumnLeft,\n\tinsertTableColumnRight,\n\tinsertTableRowAbove,\n\tinsertTableRowBelow,\n\tremoveTableBlock,\n\tremoveTableColumn,\n\tremoveTableRow,\n\tshowTableBorders,\n} from '../../../../../packages/table/commands';\n\nimport {ReactComponent as BorderAll} from '../../../../../assets/images/icon-border-all.svg';\nimport {ReactComponent as BorderNone} from '../../../../../assets/images/icon-border-none.svg';\nimport {ReactComponent as ColumnInsertLeft} from '../../../../../assets/images/icon-column-insert-left.svg';\nimport {ReactComponent as ColumnInsertRight} from '../../../../../assets/images/icon-column-insert-right.svg';\nimport Icon from '../../icon';\nimport {ReactComponent as LayoutList} from '../../../../../assets/images/icon-layout-list.svg';\nimport {NodeEntry} from 'slate';\nimport {ReactComponent as RowInsertBottom} from '../../../../../assets/images/icon-row-insert-bottom.svg';\nimport {ReactComponent as RowInsertTop} from '../../../../../assets/images/icon-row-insert-top.svg';\nimport {TableElement} from '../../../../../types';\nimport {ReactComponent as Trash} from '../../../../../assets/images/icon-trash.svg';\nimport {useSlateStatic} from 'slate-react';\n\ntype TableToolsProps = {\n\tentry: NodeEntry<TableElement>;\n};\n\nconst BaseTableTools: FC<TableToolsProps> = ({entry: [node]}) => {\n\tconst editor = useSlateStatic();\n\n\tconst [hasBorders, setHasBorders] = useState(!node.children[0].children[0].borderColor);\n\n\tuseEffect(() => {\n\t\tsetHasBorders(!node.children[0].children[0].borderColor);\n\t}, [node]);\n\n\tconst handleInsertRowAbove = (e: MouseEvent) => {\n\t\te.preventDefault();\n\t\tinsertTableRowAbove(editor);\n\t};\n\n\tconst handleInsertRowBelow = (e: MouseEvent) => {\n\t\te.preventDefault();\n\t\tinsertTableRowBelow(editor);\n\t};\n\n\tconst handleInsertColLeft = (e: MouseEvent) => {\n\t\te.preventDefault();\n\t\tinsertTableColumnLeft(editor);\n\t};\n\n\tconst handleInsertColRight = (e: MouseEvent) => {\n\t\te.preventDefault();\n\t\tinsertTableColumnRight(editor);\n\t};\n\n\tconst handleRemoveRow = (e: MouseEvent) => {\n\t\te.preventDefault();\n\t\tremoveTableRow(editor);\n\t};\n\n\tconst handleRemoveColumn = (e: MouseEvent) => {\n\t\te.preventDefault();\n\t\tremoveTableColumn(editor);\n\t};\n\n\tconst handleToggleBorders = (e: MouseEvent) => {\n\t\te.preventDefault();\n\t\tif (hasBorders) {\n\t\t\thideTableBorders(editor);\n\t\t} else {\n\t\t\tshowTableBorders(editor);\n\t\t}\n\n\t\tsetHasBorders((o) => !o);\n\t};\n\n\tconst handleRemoveTable = (e: MouseEvent) => {\n\t\te.preventDefault();\n\t\tremoveTableBlock(editor);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='text-headline text-blue-500 mb-8'>Table tools</div>\n\t\t\t<div className='text-gray-500 mb-8 text-subhead'>\n\t\t\t\tUse these tools to add or modify features on the table.\n\t\t\t</div>\n\t\t\t<div className='space-y-8'>\n\t\t\t\t<div className='flex space-x-8'>\n\t\t\t\t\t<div className='flex-1 space-y-8'>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonMouseDown={handleInsertRowAbove}\n\t\t\t\t\t\t\tclassName='h-36 px-6 flex items-center space-x-4 w-full bg-gray-100 text-gray-500 rounded-default cursor-pointer transition-colors duration-125 hover:bg-gray-200'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon className='s-16'>\n\t\t\t\t\t\t\t\t<RowInsertTop />\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t<div className='font-medium text-subhead'>Add row above</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonMouseDown={handleInsertColLeft}\n\t\t\t\t\t\t\tclassName='h-36 px-6 flex items-center space-x-4 w-full bg-gray-100 text-gray-500 rounded-default cursor-pointer transition-colors duration-125 hover:bg-gray-200'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon className='s-16'>\n\t\t\t\t\t\t\t\t<ColumnInsertLeft />\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t<div className='font-medium text-subhead'>Add column left</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonMouseDown={handleRemoveRow}\n\t\t\t\t\t\t\tclassName='h-36 px-6 flex items-center space-x-4 w-full bg-gray-100 text-gray-500 rounded-default cursor-pointer transition-colors duration-125 hover:bg-gray-200'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon className='s-16'>\n\t\t\t\t\t\t\t\t<LayoutList />\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t<div className='font-medium text-subhead'>Delete row</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonMouseDown={handleToggleBorders}\n\t\t\t\t\t\t\tclassName='h-36 px-6 flex items-center space-x-4 w-full bg-gray-100 text-gray-500 rounded-default cursor-pointer transition-colors duration-125 hover:bg-gray-200'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon className='s-16'>{hasBorders ? <BorderAll /> : <BorderNone />}</Icon>\n\t\t\t\t\t\t\t<div className='font-medium text-subhead'>Toggle borders</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='flex-1 space-y-8'>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonMouseDown={handleInsertRowBelow}\n\t\t\t\t\t\t\tclassName='h-36 px-6 flex items-center space-x-4 w-full bg-gray-100 text-gray-500 rounded-default cursor-pointer transition-colors duration-125 hover:bg-gray-200'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon className='s-16'>\n\t\t\t\t\t\t\t\t<RowInsertBottom />\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t<div className='font-medium text-subhead'>Add row below</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonMouseDown={handleInsertColRight}\n\t\t\t\t\t\t\tclassName='h-36 pl-6 flex items-center space-x-4 w-full bg-gray-100 text-gray-500 rounded-default cursor-pointer transition-colors duration-125 hover:bg-gray-200'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon className='s-16'>\n\t\t\t\t\t\t\t\t<ColumnInsertRight />\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t<div className='font-medium text-subhead'>Add column right</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonMouseDown={handleRemoveColumn}\n\t\t\t\t\t\t\tclassName='h-36 px-6 flex items-center space-x-4 w-full bg-gray-100 text-gray-500 rounded-default cursor-pointer transition-colors duration-125 hover:bg-gray-200'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon className='s-16 transform rotate-90'>\n\t\t\t\t\t\t\t\t<LayoutList />\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t<div className='font-medium text-subhead'>Delete column</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonMouseDown={handleRemoveTable}\n\t\t\t\t\t\t\tclassName='h-36 px-6 flex items-center space-x-4 w-full bg-red-300 text-white rounded-default cursor-pointer transition-colors duration-125 hover:bg-red-400'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon className='s-16'>\n\t\t\t\t\t\t\t\t<Trash />\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t<div className='font-medium text-subhead'>Delete table</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport const TableTools = memo(BaseTableTools);\n","import React, {memo} from 'react';\n\nimport {EditEditable} from './edit-editable';\nimport {EditImage} from './edit-image';\nimport {TableTools} from './table-tools';\nimport {useEditingBlock} from '../../../../hooks';\n\nconst BaseSidebar = () => {\n\tconst editingBlock = useEditingBlock();\n\n\tif (!editingBlock) {\n\t\treturn null;\n\t}\n\n\tconst [node, path] = editingBlock;\n\n\treturn (\n\t\t<div className='shadow-1 rounded-lg w-full bg-white p-16'>\n\t\t\t{node.type === 'table' && <TableTools entry={[node, path]} />}\n\t\t\t{node.type === 'image' && <EditImage entry={editingBlock} />}\n\t\t\t{node.type === 'editable' && <EditEditable entry={editingBlock} />}\n\t\t</div>\n\t);\n};\n\nexport const Sidebar = memo(BaseSidebar);\n","import React, {CSSProperties, MouseEventHandler, ReactNode, Ref, forwardRef} from 'react';\n\nimport Icon from '../icon';\nimport classNames from 'classnames';\nimport css from './style.module.css';\n\ntype IconButtonProps = {\n\tactive?: boolean;\n\tdisabled?: boolean;\n\tclassName?: string;\n\tstyle?: CSSProperties;\n\ttip?: string;\n\tonPress?: MouseEventHandler;\n\tchildren?: ReactNode;\n};\n\nconst BaseIconButton = (\n\t{active, disabled, className, children, onPress, style, tip}: IconButtonProps,\n\tref: Ref<HTMLDivElement>,\n) => {\n\tconst handleMouseDown: MouseEventHandler = (e) => {\n\t\te.preventDefault();\n\t\tonPress?.(e);\n\t};\n\treturn (\n\t\t<div\n\t\t\tstyle={style}\n\t\t\trole='button'\n\t\t\tref={ref}\n\t\t\tdata-tip={tip}\n\t\t\tonMouseDown={handleMouseDown}\n\t\t\tclassName={classNames(\n\t\t\t\t's-32 rounded-lg bg-transparent cursor-pointer flex items-center justify-center transition-colors duration-250 hover:bg-blue-100 hover:text-blue-500',\n\t\t\t\t{\n\t\t\t\t\t'text-gray-500': !active,\n\t\t\t\t\t'text-blue-500 bg-blue-highlight': active,\n\t\t\t\t\t'pointer-events-none opacity-50': disabled,\n\t\t\t\t\t[css.tooltip]: !!tip?.length,\n\t\t\t\t},\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t>\n\t\t\t<Icon className='s-20'>{children}</Icon>\n\t\t</div>\n\t);\n};\n\nexport const IconButton = forwardRef(BaseIconButton);\n","import {ReactComponent as AlignCenter} from '../../../../../../assets/images/icon-align-center.svg';\nimport {IconButton} from '../../../icon-button';\nimport React from 'react';\nimport {getCurrentBlockAlignment} from '../../../../../../packages/common/utils';\nimport {setBlockAlignment} from '../../../../../../packages/common/commands';\nimport {useSlate} from 'slate-react';\n\nexport const AlignCenterButton = () => {\n\tconst editor = useSlate();\n\tconst alignment = getCurrentBlockAlignment(editor);\n\n\tconst handlePress = () => {\n\t\tsetBlockAlignment(editor, 'center');\n\t};\n\n\treturn (\n\t\t<IconButton onPress={handlePress} active={alignment === 'center'} tip='Center align'>\n\t\t\t<AlignCenter />\n\t\t</IconButton>\n\t);\n};\n","import {ReactComponent as AlignJustified} from '../../../../../../assets/images/icon-align-justified.svg';\nimport {IconButton} from '../../../icon-button';\nimport React from 'react';\nimport {getCurrentBlockAlignment} from '../../../../../../packages/common/utils';\nimport {setBlockAlignment} from '../../../../../../packages/common/commands';\nimport {useSlate} from 'slate-react';\n\nexport const AlignJustifiedButton = () => {\n\tconst editor = useSlate();\n\tconst alignment = getCurrentBlockAlignment(editor);\n\n\tconst handlePress = () => {\n\t\tsetBlockAlignment(editor, 'justify');\n\t};\n\n\treturn (\n\t\t<IconButton onPress={handlePress} active={alignment === 'justify'} tip='Justify'>\n\t\t\t<AlignJustified />\n\t\t</IconButton>\n\t);\n};\n","import {ReactComponent as AlignLeft} from '../../../../../../assets/images/icon-align-left.svg';\nimport {IconButton} from '../../../icon-button';\nimport React from 'react';\nimport {getCurrentBlockAlignment} from '../../../../../../packages/common/utils';\nimport {setBlockAlignment} from '../../../../../../packages/common/commands';\nimport {useSlate} from 'slate-react';\n\nexport const AlignLeftButton = () => {\n\tconst editor = useSlate();\n\tconst alignment = getCurrentBlockAlignment(editor);\n\n\tconst handlePress = () => {\n\t\tsetBlockAlignment(editor, 'left');\n\t};\n\n\treturn (\n\t\t<IconButton onPress={handlePress} active={alignment === 'left'} tip='Left align'>\n\t\t\t<AlignLeft />\n\t\t</IconButton>\n\t);\n};\n","import {ReactComponent as AlignRight} from '../../../../../../assets/images/icon-align-right.svg';\nimport {IconButton} from '../../../icon-button';\nimport React from 'react';\nimport {getCurrentBlockAlignment} from '../../../../../../packages/common/utils';\nimport {setBlockAlignment} from '../../../../../../packages/common/commands';\nimport {useSlate} from 'slate-react';\n\nexport const AlignRightButton = () => {\n\tconst editor = useSlate();\n\tconst alignment = getCurrentBlockAlignment(editor);\n\n\tconst handlePress = () => {\n\t\tsetBlockAlignment(editor, 'right');\n\t};\n\n\treturn (\n\t\t<IconButton onPress={handlePress} active={alignment === 'right'} tip='Right align'>\n\t\t\t<AlignRight />\n\t\t</IconButton>\n\t);\n};\n","import {ReactComponent as Bold} from '../../../../../../assets/images/icon-bold.svg';\nimport {IconButton} from '../../../icon-button';\nimport React from 'react';\nimport {getShortcutText} from '../../../../../../utils';\nimport {isMarkActive} from '../../../../../../packages/common/utils';\nimport {toggleBoldMark} from '../../../../../../packages/leaf/commands';\nimport {useSlate} from 'slate-react';\n\nexport const BoldButton = () => {\n\tconst editor = useSlate();\n\tconst isActive = isMarkActive(editor, 'bold');\n\n\tconst handlePress = () => {\n\t\ttoggleBoldMark(editor);\n\t};\n\n\treturn (\n\t\t<IconButton onPress={handlePress} active={isActive} tip={`Bold ${getShortcutText('Mod', 'B')}`}>\n\t\t\t<Bold />\n\t\t</IconButton>\n\t);\n};\n","import {\n\tinsertBulletedListBlock,\n\tremoveListItemBlock,\n} from '../../../../../../packages/lists/commands';\n\nimport {IconButton} from '../../../icon-button';\nimport {ReactComponent as List} from '../../../../../../assets/images/icon-list.svg';\nimport React from 'react';\nimport {getCurrentListBlock} from '../../../../../../packages/lists/utils';\nimport {useSlate} from 'slate-react';\n\nexport const BulletedListButton = () => {\n\tconst editor = useSlate();\n\tconst listBlock = getCurrentListBlock(editor);\n\tconst isActive = listBlock && listBlock[0].type === 'bulleted-list';\n\n\tconst handlePress = () => {\n\t\tisActive ? removeListItemBlock(editor) : insertBulletedListBlock(editor);\n\t};\n\n\treturn (\n\t\t<IconButton onPress={handlePress} active={isActive} tip='Bulleted list'>\n\t\t\t<List />\n\t\t</IconButton>\n\t);\n};\n","import {ReactComponent as ClearFormatting} from '../../../../../../assets/images/icon-clear-formatting.svg';\nimport {IconButton} from '../../../icon-button';\nimport React from 'react';\nimport {clearMarks} from '../../../../../../packages/common/commands';\nimport {useSlate} from 'slate-react';\n\nexport const ClearFormattingButton = () => {\n\tconst editor = useSlate();\n\n\tconst handlePress = () => {\n\t\tclearMarks(editor);\n\t};\n\n\treturn (\n\t\t<IconButton onPress={handlePress} tip='Clear formatting'>\n\t\t\t<ClearFormatting />\n\t\t</IconButton>\n\t);\n};\n","import React, {FC, PropsWithChildren, memo} from 'react';\n\nimport classnames from 'classnames';\n\ntype ButtonProps = PropsWithChildren<{\n\tclassName?: string;\n\tdisabled?: boolean;\n\tonPress?: Fn;\n}>;\n\nconst BaseButton: FC<ButtonProps> = ({children, className, disabled, onPress}) => {\n\treturn (\n\t\t<button\n\t\t\trole='button'\n\t\t\tonClick={onPress}\n\t\t\tclassName={classnames(\n\t\t\t\t'border-transparent rounded-lg font-medium cursor-pointer text-white px-18 flex items-center justify-center transition-colors duration-250 hover:bg-blue-600',\n\t\t\t\t{\n\t\t\t\t\t'bg-blue-500': !disabled,\n\t\t\t\t\t'pointer-events-none bg-blue-300': disabled,\n\t\t\t\t\t'h-36': !/\\bh-[0-9]/gi.test(className ?? ''),\n\t\t\t\t},\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t>\n\t\t\t{children}\n\t\t</button>\n\t);\n};\n\nexport const Button = memo(BaseButton);\n","import React, {useLayoutEffect, useState} from 'react';\n\nimport classnames from 'classnames';\nimport css from './style.module.css';\n\nexport type ContentDimensions = {\n\twidth?: number;\n\theight?: number;\n\tx?: number;\n\ty?: number;\n};\n\ntype ContentProps = {\n\tonLayoutUpdate: (dimensions: ContentDimensions) => void;\n\tx?: number;\n\ty?: number;\n\thideArrow?: boolean;\n\tposition?: string;\n\talignment?: string;\n\tclassName?: string;\n};\n\nexport const Content: React.FC<ContentProps> = ({\n\tonLayoutUpdate,\n\tchildren,\n\tx = 0,\n\ty = 0,\n\tposition,\n\talignment,\n\tclassName,\n\thideArrow,\n}) => {\n\tconst [dimensions, setDimensions] = useState<ContentDimensions>({x, y});\n\n\tuseLayoutEffect(() => {\n\t\tconst element = document.querySelector(`.${css.container}`);\n\t\tconst {width, height, x, y} = element?.getBoundingClientRect() ?? {};\n\t\tconst computedDimensions: ContentDimensions = {width, height, x, y};\n\n\t\tif (JSON.stringify(computedDimensions) !== JSON.stringify(dimensions)) {\n\t\t\tsetDimensions(computedDimensions);\n\t\t\tonLayoutUpdate(computedDimensions);\n\t\t}\n\t}, [dimensions, onLayoutUpdate]);\n\n\tlet composedClassName = css.container;\n\tconst arrowClassName = ` ${css.arrow} ${css[`arrow${position}`]} ${css[`arrow${alignment}`]}`;\n\n\tif (!hideArrow) composedClassName += arrowClassName;\n\n\treturn (\n\t\t<div className={classnames(composedClassName, 'shadow-6', className)} style={{top: y, left: x}}>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n","import {Content, ContentDimensions} from './content';\nimport React, {FC, MutableRefObject, useCallback, useEffect, useRef, useState} from 'react';\n\nimport {createPortal} from 'react-dom';\nimport {useMouseDown} from '../../../../hooks';\n\nexport type AnchorRef = MutableRefObject<Element | null>;\n\nexport type PopupPosition = 'up' | 'right' | 'down' | 'left' | 'center';\n\nexport type PopupAlignment = 'start' | 'center' | 'end';\n\ntype PopupOffset = {\n\tx?: number;\n\ty?: number;\n};\n\ntype PopupContentPosition = {\n\tx: number;\n\ty: number;\n};\n\ntype PopupProps = {\n\tanchor?: string;\n\tanchorRef?: AnchorRef;\n\tcontentClassName?: string;\n\tposition?: PopupPosition;\n\talignment?: PopupAlignment;\n\ttransparent?: boolean;\n\tdistance?: number;\n\toffsets?: PopupOffset;\n\thideArrow?: boolean;\n\tisVisible?: boolean;\n\toverlayCloseOnClick?: boolean;\n\tonRequestClose: () => void;\n};\n\nconst EDGE_PADDING = 12;\n\nconst getViewportWidth = () =>\n\twindow.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n\nconst getViewportHeight = () =>\n\twindow.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n\nconst getPositioningWithoutAnchor = ({\n\tdimensions,\n\tposition,\n\talignment,\n}: {\n\tdimensions: ContentDimensions;\n\tposition: PopupPosition;\n\talignment: PopupAlignment;\n}) => {\n\tconst viewportWidth = getViewportWidth();\n\tconst viewportHeight = getViewportHeight();\n\tconst {width = 0, height = 0} = dimensions;\n\n\tlet x: number, y: number;\n\n\tswitch (position) {\n\t\tcase 'up':\n\t\t\ty = 0;\n\t\t\tbreak;\n\t\tcase 'down':\n\t\t\ty = viewportHeight - height;\n\t\t\tbreak;\n\t\tcase 'center':\n\t\t\ty = (viewportHeight - height) / 2;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ty = 0;\n\t\t\tbreak;\n\t}\n\n\tswitch (alignment) {\n\t\tcase 'start':\n\t\t\tx = 0;\n\t\t\tbreak;\n\t\tcase 'center':\n\t\t\tx = (viewportWidth - width) / 2;\n\t\t\tbreak;\n\t\tcase 'end':\n\t\t\tx = viewportWidth - width;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tx = 0;\n\t\t\tbreak;\n\t}\n\n\treturn {x, y};\n};\n\nconst getPositioningWithAnchor = ({\n\tdimensions,\n\tanchor,\n\tanchorRef,\n\tdistance,\n\tposition,\n\talignment,\n}: {\n\tdimensions: ContentDimensions;\n\tanchor?: string;\n\tanchorRef?: AnchorRef;\n\tdistance: number;\n\tposition: PopupPosition;\n\talignment: PopupAlignment;\n}) => {\n\tconst anchorElement = anchorRef?.current ?? (anchor ? document.querySelector(anchor) : null);\n\tif (!anchorElement) return getPositioningWithoutAnchor({dimensions, position, alignment});\n\n\tconst {\n\t\twidth: anchorWidth,\n\t\theight: anchorHeight,\n\t\tx: anchorX,\n\t\ty: anchorY,\n\t} = anchorElement.getBoundingClientRect();\n\tconst {width = 0, height = 0} = dimensions;\n\n\tlet x: number = 0;\n\tlet y: number = 0;\n\n\tif (position === 'up') {\n\t\ty = anchorY - height - distance;\n\n\t\tswitch (alignment) {\n\t\t\tcase 'start':\n\t\t\t\tx = anchorX;\n\t\t\t\tbreak;\n\t\t\tcase 'center':\n\t\t\t\tx = anchorX + anchorWidth / 2 - width / 2;\n\t\t\t\tbreak;\n\t\t\tcase 'end':\n\t\t\t\tx = anchorX + anchorWidth - width;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (position === 'down') {\n\t\ty = anchorY + anchorHeight + distance;\n\n\t\tswitch (alignment) {\n\t\t\tcase 'start':\n\t\t\t\tx = anchorX;\n\t\t\t\tbreak;\n\t\t\tcase 'center':\n\t\t\t\tx = anchorX + anchorWidth / 2 - width / 2;\n\t\t\t\tbreak;\n\t\t\tcase 'end':\n\t\t\t\tx = anchorX + anchorWidth - width;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (position === 'left') {\n\t\tx = anchorX - width - distance;\n\n\t\tswitch (alignment) {\n\t\t\tcase 'start':\n\t\t\t\ty = anchorY;\n\t\t\t\tbreak;\n\t\t\tcase 'center':\n\t\t\t\ty = anchorY + anchorHeight / 2 - height / 2;\n\t\t\t\tbreak;\n\t\t\tcase 'end':\n\t\t\t\ty = anchorY + anchorHeight - height;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (position === 'right') {\n\t\tx = anchorX + anchorWidth + distance;\n\n\t\tswitch (alignment) {\n\t\t\tcase 'start':\n\t\t\t\ty = anchorY;\n\t\t\t\tbreak;\n\t\t\tcase 'center':\n\t\t\t\ty = anchorY + anchorHeight / 2 - height / 2;\n\t\t\t\tbreak;\n\t\t\tcase 'end':\n\t\t\t\ty = anchorY + anchorHeight - height;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn {x, y};\n};\n\nconst getValidPositioning = ({\n\tdimensions,\n\tanchor,\n\tanchorRef,\n\tdistance,\n\tposition,\n\talignment,\n\toffsets,\n}: {\n\tdimensions: ContentDimensions;\n\tanchor?: string;\n\tanchorRef?: AnchorRef;\n\tdistance: number;\n\tposition: PopupPosition;\n\talignment: PopupAlignment;\n\toffsets?: PopupOffset;\n}) => {\n\tconst {width = 0, height = 0} = dimensions;\n\tconst viewportWidth = getViewportWidth();\n\tconst viewportHeight = getViewportHeight();\n\tlet contentPosition: PopupContentPosition;\n\n\tif (!!anchor || !!anchorRef) {\n\t\tcontentPosition = getPositioningWithAnchor({\n\t\t\tdimensions,\n\t\t\tanchor,\n\t\t\tanchorRef,\n\t\t\tdistance,\n\t\t\tposition,\n\t\t\talignment,\n\t\t});\n\t} else {\n\t\tcontentPosition = getPositioningWithoutAnchor({dimensions, position, alignment});\n\t}\n\n\tif (offsets) {\n\t\tconst xOffset = offsets.x ?? 0;\n\t\tconst yOffset = offsets.y ?? 0;\n\n\t\tcontentPosition.x = contentPosition.x + xOffset;\n\t\tcontentPosition.y = contentPosition.y + yOffset;\n\t}\n\n\tconst leftEdge = EDGE_PADDING;\n\tconst topEdge = EDGE_PADDING;\n\tconst rightEdge = viewportWidth - width;\n\tconst bottomEdge = viewportHeight - height;\n\n\tif (contentPosition.x <= leftEdge) contentPosition.x = leftEdge;\n\tif (contentPosition.y <= topEdge) contentPosition.y = topEdge;\n\tif (contentPosition.x >= rightEdge) contentPosition.x = rightEdge;\n\tif (contentPosition.y >= bottomEdge) contentPosition.y = bottomEdge;\n\n\treturn contentPosition;\n};\n\nexport const Popup: FC<PopupProps> = ({\n\tanchor,\n\tanchorRef,\n\tchildren,\n\tcontentClassName,\n\tposition = 'center',\n\talignment = 'center',\n\ttransparent = false,\n\tdistance = 10,\n\toffsets,\n\tisVisible = false,\n\thideArrow = false,\n\toverlayCloseOnClick = true,\n\tonRequestClose,\n}) => {\n\tconst portalRef = useRef<HTMLElement | null>();\n\tconst [popupContentPosition, setPopupContentPosition] = useState<PopupContentPosition>({\n\t\tx: 0,\n\t\ty: 0,\n\t});\n\n\tconst handleClickOverlay = useMouseDown(() => {\n\t\tif (overlayCloseOnClick) onRequestClose();\n\t});\n\n\tconst handleKeyUp = useCallback(\n\t\t(e: KeyboardEvent) => {\n\t\t\tif (e.key === 'Escape' && isVisible) onRequestClose();\n\t\t},\n\t\t[isVisible, onRequestClose],\n\t);\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('keyup', handleKeyUp);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('keyup', handleKeyUp);\n\t\t};\n\t}, [isVisible, handleKeyUp]);\n\n\tuseEffect(() => {\n\t\tif (!portalRef.current) {\n\t\t\tportalRef.current = document.getElementById('stencyl-portal');\n\t\t}\n\t}, [isVisible, portalRef]);\n\n\tconst render = () => (\n\t\t<div className='fixed top-0 left-0 w-full h-full z-2'>\n\t\t\t<div\n\t\t\t\tclassName={\n\t\t\t\t\ttransparent\n\t\t\t\t\t\t? 'w-full h-full absolute top-0 left-0 z-0'\n\t\t\t\t\t\t: 'w-full h-full absolute top-0 left-0 z-0 bg-blue-800 opacity-50'\n\t\t\t\t}\n\t\t\t\tonMouseDown={handleClickOverlay}\n\t\t\t/>\n\t\t\t<Content\n\t\t\t\tclassName={contentClassName}\n\t\t\t\tx={popupContentPosition.x}\n\t\t\t\ty={popupContentPosition.y}\n\t\t\t\tposition={position}\n\t\t\t\talignment={alignment}\n\t\t\t\thideArrow={(!anchorRef && !anchor) || hideArrow}\n\t\t\t\tonLayoutUpdate={(dimensions) =>\n\t\t\t\t\tsetPopupContentPosition(\n\t\t\t\t\t\tgetValidPositioning({\n\t\t\t\t\t\t\tdimensions,\n\t\t\t\t\t\t\tanchor,\n\t\t\t\t\t\t\tanchorRef,\n\t\t\t\t\t\t\tdistance,\n\t\t\t\t\t\t\tposition,\n\t\t\t\t\t\t\talignment,\n\t\t\t\t\t\t\toffsets,\n\t\t\t\t\t\t}),\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</Content>\n\t\t</div>\n\t);\n\n\tif (!isVisible || !portalRef.current) return null;\n\n\treturn createPortal(render(), portalRef.current);\n};\n","import React, {ChangeEvent, FC, memo, useMemo, useState} from 'react';\nimport {\n\tStencylDisplayCondition,\n\tStencylOption,\n\tStencylPopupCoordinates,\n} from '../../../../../types';\n\nimport {Button} from '../../button';\nimport Field from '../../field';\nimport {Popup} from '../../popup';\nimport {getAllEditableElements} from '../../../../../packages/editable/utils';\nimport {useSlateStatic} from 'slate-react';\n\ntype DisplayFlagPopupProps = {\n\tcoordinates: StencylPopupCoordinates;\n\tisVisible: boolean;\n\tonRequestClose: () => void;\n\tonSubmit: (condition: StencylDisplayCondition) => void;\n};\n\nconst BaseDisplayFlagPopup: FC<DisplayFlagPopupProps> = ({\n\tcoordinates: {x, y},\n\tisVisible,\n\tonRequestClose,\n\tonSubmit,\n}) => {\n\tconst editor = useSlateStatic();\n\tconst editableElements = getAllEditableElements(editor);\n\tconst matchedElements = useMemo(\n\t\t() =>\n\t\t\teditableElements\n\t\t\t\t.filter(\n\t\t\t\t\t([node]) => !node.linkId && (node.dataType === 'options' || node.dataType === 'radio'),\n\t\t\t\t)\n\t\t\t\t.map((o) => o[0]),\n\t\t[editableElements],\n\t);\n\n\tconst [parent, setParent] = useState('');\n\tconst [equals, setEquals] = useState('');\n\n\tconst handleSelectParent = (e: ChangeEvent<HTMLSelectElement>) => {\n\t\tsetParent(e.target.value);\n\t};\n\n\tconst handleSelectEquals = (e: ChangeEvent<HTMLSelectElement>) => {\n\t\tsetEquals(e.target.value);\n\t};\n\n\tconst handleSubmit = () => {\n\t\tonSubmit({parent, value: equals});\n\t\tonRequestClose();\n\t\tsetParent('');\n\t\tsetEquals('');\n\t};\n\n\treturn (\n\t\t<Popup\n\t\t\tposition='right'\n\t\t\talignment='start'\n\t\t\tisVisible={isVisible}\n\t\t\tonRequestClose={onRequestClose}\n\t\t\ttransparent\n\t\t\thideArrow\n\t\t\toverlayCloseOnClick\n\t\t\tcontentClassName='border-gray-50 border-solid border bg-white rounded-lg flex items-center py-8 px-8 space-x-8 text-gray-500'\n\t\t\tdistance={4}\n\t\t\toffsets={{\n\t\t\t\ty: y + 16,\n\t\t\t\tx: x,\n\t\t\t}}\n\t\t>\n\t\t\t<div className='flex items-center space-x-4'>\n\t\t\t\t<div className='bg-gray-500 text-footnote font-medium rounded-default px-8 py-4 text-white uppercase'>\n\t\t\t\t\tWhen\n\t\t\t\t</div>\n\t\t\t\t<Field className='w-180'>\n\t\t\t\t\t<select value={parent} onChange={handleSelectParent}>\n\t\t\t\t\t\t<option hidden value=''>\n\t\t\t\t\t\t\tChoose one\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t{matchedElements.map((node) => (\n\t\t\t\t\t\t\t<option key={node.id} value={node.id}>\n\t\t\t\t\t\t\t\t{node.defaultValue}({node.label})\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t</Field>\n\t\t\t</div>\n\t\t\t<div className='flex items-center space-x-4'>\n\t\t\t\t<div className='bg-gray-500 text-footnote font-medium rounded-default px-8 py-4 text-white uppercase'>\n\t\t\t\t\tEquals\n\t\t\t\t</div>\n\t\t\t\t<Field className='w-144'>\n\t\t\t\t\t<select value={equals} onChange={handleSelectEquals}>\n\t\t\t\t\t\t<option hidden value=''>\n\t\t\t\t\t\t\tChoose one\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t{parent?.length &&\n\t\t\t\t\t\t\t(matchedElements.find((o) => o.id === parent) as any).options.map(\n\t\t\t\t\t\t\t\t(option: StencylOption) => (\n\t\t\t\t\t\t\t\t\t<option key={option.id} value={option.id}>\n\t\t\t\t\t\t\t\t\t\t{option.label}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t</select>\n\t\t\t\t</Field>\n\t\t\t</div>\n\t\t\t<Button onPress={handleSubmit} disabled={!parent?.length || !equals?.length} className='h-36'>\n\t\t\t\tDone\n\t\t\t</Button>\n\t\t</Popup>\n\t);\n};\n\nexport const DisplayFlagPopup = memo(BaseDisplayFlagPopup);\n","import React, {Fragment, useRef, useState} from 'react';\nimport {StencylDisplayCondition, StencylPopupCoordinates} from '../../../../../../types';\nimport {getSelectionCoordinates, isMarkActive} from '../../../../../../packages/common/utils';\nimport {setConditionMark, unsetConditionMark} from '../../../../../../packages/leaf/commands';\n\nimport {BaseSelection} from 'slate';\nimport {DisplayFlagPopup} from '../../../popups/display-flag';\nimport {IconButton} from '../../../icon-button';\nimport {ReactComponent as Pennant} from '../../../../../../assets/images/icon-pennant.svg';\nimport {focusEditor} from '../../../../../../packages/common/commands';\nimport {useModalUtils} from '../../../../../../hooks';\nimport {useSlate} from 'slate-react';\n\nexport const DisplayFlagButton = () => {\n\tconst selectionRef = useRef<BaseSelection>();\n\tconst ref = useRef(null);\n\tconst editor = useSlate();\n\tconst modalUtils = useModalUtils();\n\tconst isActive = isMarkActive(editor, 'condition');\n\tconst [coordinates, setCoordinates] = useState<StencylPopupCoordinates>({x: 0, y: 0});\n\n\tconst handlePressIcon = () => {\n\t\tconst {selection} = editor;\n\n\t\tif (!selection) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isActive) {\n\t\t\tunsetConditionMark(editor);\n\t\t\treturn;\n\t\t}\n\n\t\tselectionRef.current = selection;\n\t\tsetCoordinates(getSelectionCoordinates(editor));\n\t\tmodalUtils.open();\n\t};\n\n\tconst handleAddCondition = (condition: StencylDisplayCondition) => {\n\t\tif (!selectionRef.current) {\n\t\t\treturn;\n\t\t}\n\n\t\tfocusEditor(editor, selectionRef.current);\n\n\t\tsetConditionMark(editor, condition);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<IconButton active={isActive} onPress={handlePressIcon} ref={ref} tip='Display flag'>\n\t\t\t\t<Pennant />\n\t\t\t</IconButton>\n\t\t\t<DisplayFlagPopup\n\t\t\t\tcoordinates={coordinates}\n\t\t\t\tisVisible={modalUtils.visible}\n\t\t\t\tonRequestClose={modalUtils.close}\n\t\t\t\tonSubmit={handleAddCondition}\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n","import React, {FC} from 'react';\n\nimport classnames from 'classnames';\n\ntype IconGroupProps = {\n\tclassName?: string;\n};\n\nconst IconGroup: FC<IconGroupProps> = ({className, children}) => {\n\treturn <div className={classnames('flex items-center space-x-4', className)}>{children}</div>;\n};\n\nIconGroup.defaultProps = {\n\tclassName: 'px-16',\n};\n\nexport default IconGroup;\n","import {IconButton} from '../../../icon-button';\nimport {ReactComponent as IndentDecrease} from '../../../../../../assets/images/icon-indent-decrease.svg';\nimport React from 'react';\nimport {changeBlockIndentation} from '../../../../../../packages/common/commands';\nimport {useSlateStatic} from 'slate-react';\n\nexport const IndentDecreaseButton = () => {\n\tconst editor = useSlateStatic();\n\n\tconst handlePress = () => {\n\t\tchangeBlockIndentation(editor, 'decrement');\n\t};\n\n\treturn (\n\t\t<IconButton onPress={handlePress} tip='Decrease indent'>\n\t\t\t<IndentDecrease />\n\t\t</IconButton>\n\t);\n};\n","import {IconButton} from '../../../icon-button';\nimport {ReactComponent as IndentIncrease} from '../../../../../../assets/images/icon-indent-increase.svg';\nimport React from 'react';\nimport {changeBlockIndentation} from '../../../../../../packages/common/commands';\nimport {useSlateStatic} from 'slate-react';\n\nexport const IndentIncreaseButton = () => {\n\tconst editor = useSlateStatic();\n\n\tconst handlePress = () => {\n\t\tchangeBlockIndentation(editor, 'increment');\n\t};\n\n\treturn (\n\t\t<IconButton onPress={handlePress} tip='Increase indent'>\n\t\t\t<IndentIncrease />\n\t\t</IconButton>\n\t);\n};\n","import {AnchorRef, Popup} from '../../popup';\nimport React, {FC, memo} from 'react';\n\nimport {Range} from 'slate';\nimport {StencylEditableElementTypes} from '../../../../../types';\nimport classNames from 'classnames';\nimport {useSlateStatic} from 'slate-react';\n\nexport type InsertEditableType = StencylEditableElementTypes | 'question' | 'existing';\n\ntype EditableTypePopupProps = {\n\tanchorRef: AnchorRef;\n\tisVisible: boolean;\n\tonRequestClose: () => void;\n\tonSelect: (value: InsertEditableType) => void;\n};\n\ntype OptionItemProps = {\n\tid: InsertEditableType;\n\tlabel: string;\n\tdisabled?: boolean;\n\tonPress: (id: InsertEditableType) => void;\n};\n\nconst OptionItem: FC<OptionItemProps> = ({disabled, id, label, onPress}) => {\n\treturn (\n\t\t<div\n\t\t\tonClick={() => onPress(id)}\n\t\t\tclassName={classNames(\n\t\t\t\t'h-36 flex items-center transition-colors duration-250 hover:text-gray-900 cursor-pointer',\n\t\t\t\t{\n\t\t\t\t\t'pointer-events-none opacity-50': disabled,\n\t\t\t\t},\n\t\t\t)}\n\t\t>\n\t\t\t<div>{label}</div>\n\t\t</div>\n\t);\n};\n\nconst BaseEditableTypePopup: FC<EditableTypePopupProps> = ({\n\tanchorRef,\n\tisVisible,\n\tonRequestClose,\n\tonSelect,\n}) => {\n\tconst editor = useSlateStatic();\n\tconst rangeIsCollapsed = editor.selection ? Range.isCollapsed(editor.selection) : true;\n\n\tconst handleClickOption = (option: InsertEditableType) => {\n\t\tonSelect(option);\n\t\tonRequestClose();\n\t};\n\n\treturn (\n\t\t<Popup\n\t\t\tposition='down'\n\t\t\talignment='start'\n\t\t\tanchorRef={anchorRef}\n\t\t\tisVisible={isVisible}\n\t\t\tonRequestClose={onRequestClose}\n\t\t\ttransparent\n\t\t\thideArrow\n\t\t\toverlayCloseOnClick\n\t\t\tcontentClassName='bg-white rounded-lg py-8 px-16 w-144 text-gray-500'\n\t\t\tdistance={4}\n\t\t\toffsets={{\n\t\t\t\ty: 16,\n\t\t\t}}\n\t\t>\n\t\t\t<OptionItem id='text' label='Text' disabled={rangeIsCollapsed} onPress={handleClickOption} />\n\t\t\t<OptionItem\n\t\t\t\tid='image'\n\t\t\t\tlabel='Image'\n\t\t\t\tdisabled={rangeIsCollapsed}\n\t\t\t\tonPress={handleClickOption}\n\t\t\t/>\n\t\t\t<OptionItem\n\t\t\t\tid='options'\n\t\t\t\tlabel='Dropdown'\n\t\t\t\tdisabled={rangeIsCollapsed}\n\t\t\t\tonPress={handleClickOption}\n\t\t\t/>\n\t\t\t<OptionItem\n\t\t\t\tid='radio'\n\t\t\t\tlabel='Radio'\n\t\t\t\tdisabled={rangeIsCollapsed}\n\t\t\t\tonPress={handleClickOption}\n\t\t\t/>\n\t\t\t<OptionItem id='date' label='Date' disabled={rangeIsCollapsed} onPress={handleClickOption} />\n\t\t\t<OptionItem id='time' label='Time' disabled={rangeIsCollapsed} onPress={handleClickOption} />\n\t\t\t<OptionItem id='question' label='Question only' onPress={handleClickOption} />\n\t\t\t<OptionItem\n\t\t\t\tid='existing'\n\t\t\t\tlabel='From existing...'\n\t\t\t\tdisabled={!rangeIsCollapsed}\n\t\t\t\tonPress={handleClickOption}\n\t\t\t/>\n\t\t</Popup>\n\t);\n};\n\nexport const EditableTypePopup = memo(BaseEditableTypePopup);\n","import React, {ChangeEvent, FC, KeyboardEvent, memo, useState} from 'react';\n\nimport {Button} from '../../button';\nimport Field from '../../field';\nimport {Popup} from '../../popup';\nimport {StencylPopupCoordinates} from '../../../../../types';\n\ntype EditableLabelPopupProps = {\n\tcoordinates: StencylPopupCoordinates;\n\tisVisible: boolean;\n\tonRequestClose: () => void;\n\tonSubmit: (value: string) => void;\n};\n\nconst BaseEditableLabelPopup: FC<EditableLabelPopupProps> = ({\n\tcoordinates: {x, y},\n\tisVisible,\n\tonRequestClose,\n\tonSubmit,\n}) => {\n\tconst [label, setLabel] = useState('');\n\n\tconst handleChangeLabel = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetLabel(e.target.value ?? '');\n\t};\n\n\tconst handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n\t\tif (e.key?.toLowerCase() === 'enter') {\n\t\t\thandleSubmit();\n\t\t}\n\t};\n\n\tconst handleSubmit = () => {\n\t\tif (!label?.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tonSubmit(label);\n\t\tonRequestClose();\n\t\tsetLabel('');\n\t};\n\n\treturn (\n\t\t<Popup\n\t\t\tposition='right'\n\t\t\talignment='start'\n\t\t\tisVisible={isVisible}\n\t\t\tonRequestClose={onRequestClose}\n\t\t\ttransparent\n\t\t\thideArrow\n\t\t\toverlayCloseOnClick\n\t\t\tcontentClassName='border-gray-50 border-solid border bg-white rounded-lg flex items-center py-8 px-8 space-x-8 text-gray-500'\n\t\t\tdistance={4}\n\t\t\toffsets={{\n\t\t\t\ty: y + 16,\n\t\t\t\tx: x,\n\t\t\t}}\n\t\t>\n\t\t\t<Field className='w-320'>\n\t\t\t\t<input\n\t\t\t\t\tautoFocus\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='Type a question here...'\n\t\t\t\t\tvalue={label}\n\t\t\t\t\tonChange={handleChangeLabel}\n\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t/>\n\t\t\t</Field>\n\t\t\t<Button className='h-36' onPress={handleSubmit} disabled={!label.length}>\n\t\t\t\tDone\n\t\t\t</Button>\n\t\t</Popup>\n\t);\n};\n\nexport const EditableLabelPopup = memo(BaseEditableLabelPopup);\n","import {EditableElement, StencylPopupCoordinates} from '../../../../../types';\nimport React, {ChangeEvent, FC, memo, useCallback, useMemo, useState} from 'react';\n\nimport Icon from '../../icon';\nimport {ReactComponent as ListSearch} from '../../../../../assets/images/icon-list-search.svg';\nimport {Popup} from '../../popup';\nimport classNames from 'classnames';\nimport {getAllEditableElements} from '../../../../../packages/editable/utils';\nimport {useSlateStatic} from 'slate-react';\n\ntype ExistingEditablePopupProps = {\n\tcoordinates: StencylPopupCoordinates;\n\tisVisible: boolean;\n\tonRequestClose: () => void;\n\tonSelect: (value: EditableElement) => void;\n};\n\nconst BaseExistingEditablePopup: FC<ExistingEditablePopupProps> = ({\n\tcoordinates: {x, y},\n\tisVisible,\n\tonRequestClose,\n\tonSelect,\n}) => {\n\tconst editor = useSlateStatic();\n\n\tconst editableElements = getAllEditableElements(editor);\n\n\tconst [keyword, setKeyword] = useState('');\n\n\tconst matchingElements = useMemo(() => {\n\t\treturn editableElements.filter(([node]) =>\n\t\t\tnode.defaultValue.toLowerCase().includes(keyword.toLowerCase()),\n\t\t);\n\t}, [keyword, editableElements]);\n\n\tconst handleSelectOption = useCallback(\n\t\t(option: EditableElement) => {\n\t\t\tonSelect(option);\n\t\t\tsetKeyword('');\n\t\t\tonRequestClose();\n\t\t},\n\t\t[onSelect, onRequestClose],\n\t);\n\n\tconst handleChangeKeyword = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetKeyword(e.target.value ?? '');\n\t};\n\n\treturn (\n\t\t<Popup\n\t\t\tposition='right'\n\t\t\talignment='start'\n\t\t\tisVisible={isVisible}\n\t\t\tonRequestClose={onRequestClose}\n\t\t\ttransparent\n\t\t\thideArrow\n\t\t\toverlayCloseOnClick\n\t\t\tcontentClassName='border-gray-50 border-solid border bg-white rounded-lg w-200 text-gray-500'\n\t\t\tdistance={4}\n\t\t\toffsets={{\n\t\t\t\ty: y + 16,\n\t\t\t\tx: x,\n\t\t\t}}\n\t\t>\n\t\t\t<div className='p-8'>\n\t\t\t\t<div className='flex items-center justify-between px-8 h-36 w-full border border-gray-200 rounded-lg transition:colors transition:shadow duration-250 focus-within:shadow-outline focus-within:border-blue-500'>\n\t\t\t\t\t<input\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tclassName='border-none h-full w-full bg-transparent m-0'\n\t\t\t\t\t\tplaceholder='Search...'\n\t\t\t\t\t\tvalue={keyword}\n\t\t\t\t\t\tonChange={handleChangeKeyword}\n\t\t\t\t\t/>\n\t\t\t\t\t<Icon className='text-gray-500'>\n\t\t\t\t\t\t<ListSearch />\n\t\t\t\t\t</Icon>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName={classNames({\n\t\t\t\t\t'pb-8': matchingElements.length,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t{matchingElements.map(([node]) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tkey={node.id}\n\t\t\t\t\t\tonClick={() => handleSelectOption(node)}\n\t\t\t\t\t\tclassName='px-8 h-28 flex items-center cursor-pointer bg-transparent transition-colors duration-250 hover:bg-gray-100'\n\t\t\t\t\t>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tstyle={{fontSize: '0.82em'}}\n\t\t\t\t\t\t\tclassName='inline-block text-white font-medium px-4 rounded-default mx-1 bg-blue-500'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{node.defaultValue}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</Popup>\n\t);\n};\n\nexport const ExistingEditablePopup = memo(BaseExistingEditablePopup);\n","import {BaseSelection, Editor, Transforms} from 'slate';\nimport {DATE_FORMATS, TIME_FORMATS} from '../../../../../../constants/datetime';\nimport {EditableElement, StencylPopupCoordinates} from '../../../../../../types';\nimport {EditableTypePopup, InsertEditableType} from '../../../popups/editable-type';\nimport React, {Fragment, useRef, useState} from 'react';\nimport {\n\tinsertInlineEditable,\n\tinsertInvisibleEditable,\n} from '../../../../../../packages/editable/commands';\n\nimport {ReactComponent as EditCircle} from '../../../../../../assets/images/icon-edit-circle.svg';\nimport {EditableLabelPopup} from '../../../popups/editable-label';\nimport {ExistingEditablePopup} from '../../../popups/existing-editable';\nimport {IconButton} from '../../../icon-button';\nimport {createEditableElement} from '../../../../../../packages/editable/utils';\nimport {focusEditor} from '../../../../../../packages/common/commands';\nimport {getSelectionCoordinates} from '../../../../../../packages/common/utils';\nimport {useModalUtils} from '../../../../../../hooks';\nimport {useSlateStatic} from 'slate-react';\n\nexport const InsertEditableButton = () => {\n\tconst selectionRef = useRef<BaseSelection>();\n\tconst ref = useRef(null);\n\tconst editor = useSlateStatic();\n\tconst editableTypeModalUtils = useModalUtils();\n\tconst editableLabelModalUtils = useModalUtils();\n\tconst existingEditableModalUtils = useModalUtils();\n\tconst [editableType, setEditableType] = useState<InsertEditableType>();\n\tconst [selectedText, setSelectedText] = useState('');\n\tconst [coordinates, setCoordinates] = useState<StencylPopupCoordinates>({x: 0, y: 0});\n\n\tconst handlePressIcon = () => {\n\t\tconst {selection} = editor;\n\n\t\tif (!selection) {\n\t\t\treturn;\n\t\t}\n\n\t\tselectionRef.current = selection;\n\n\t\tsetCoordinates(getSelectionCoordinates(editor));\n\t\tsetSelectedText(Editor.string(editor, selection));\n\t\teditableTypeModalUtils.open();\n\t};\n\n\tconst handleSelectEditableType = (value: InsertEditableType) => {\n\t\tsetEditableType(value);\n\n\t\tTransforms.select(editor, selectionRef.current!);\n\n\t\tif (value === 'existing') {\n\t\t\texistingEditableModalUtils.open();\n\t\t\treturn;\n\t\t}\n\n\t\teditableLabelModalUtils.open();\n\t};\n\n\tconst handleInsertEditable = (value: string) => {\n\t\tlet editable: EditableElement;\n\n\t\tswitch (editableType) {\n\t\t\tcase 'question':\n\t\t\t\teditable = createEditableElement(editor, {\n\t\t\t\t\tdataType: 'options',\n\t\t\t\t\tdefaultValue: '',\n\t\t\t\t\tlabel: value,\n\t\t\t\t\toptions: [],\n\t\t\t\t\tisInvisible: true,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'options':\n\t\t\tcase 'radio':\n\t\t\t\teditable = createEditableElement(editor, {\n\t\t\t\t\tdataType: editableType,\n\t\t\t\t\tdefaultValue: selectedText,\n\t\t\t\t\tlabel: value,\n\t\t\t\t\toptions: [],\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'date':\n\t\t\tcase 'time':\n\t\t\t\teditable = createEditableElement(editor, {\n\t\t\t\t\tdataType: editableType,\n\t\t\t\t\tdefaultValue: selectedText,\n\t\t\t\t\tlabel: value,\n\t\t\t\t\tdateTimeFormat: editableType === 'date' ? DATE_FORMATS[0] : TIME_FORMATS[0],\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'image':\n\t\t\t\teditable = createEditableElement(editor, {\n\t\t\t\t\tdataType: 'image',\n\t\t\t\t\tdefaultValue: selectedText,\n\t\t\t\t\tlabel: value,\n\t\t\t\t\twidth: 100,\n\t\t\t\t\theight: 100,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\teditable = createEditableElement(editor, {\n\t\t\t\t\tdataType: 'text',\n\t\t\t\t\tdefaultValue: selectedText,\n\t\t\t\t\tlabel: value,\n\t\t\t\t});\n\t\t}\n\n\t\tfocusEditor(editor, selectionRef.current ?? undefined);\n\n\t\teditableType === 'question'\n\t\t\t? insertInvisibleEditable(editor, editable)\n\t\t\t: insertInlineEditable(editor, editable);\n\t};\n\n\tconst handleInsertExistingEditable = (value: EditableElement) => {\n\t\tconst editable = createEditableElement(editor, {\n\t\t\tdataType: value.dataType as any,\n\t\t\tlabel: '',\n\t\t\tdefaultValue: '',\n\t\t\tlinkId: value.id,\n\t\t});\n\n\t\tfocusEditor(editor, selectionRef.current ?? undefined);\n\n\t\tinsertInlineEditable(editor, editable);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<IconButton tip='Insert editable...' onPress={handlePressIcon} ref={ref}>\n\t\t\t\t<EditCircle />\n\t\t\t</IconButton>\n\t\t\t<EditableTypePopup\n\t\t\t\tanchorRef={ref}\n\t\t\t\tisVisible={editableTypeModalUtils.visible}\n\t\t\t\tonRequestClose={editableTypeModalUtils.close}\n\t\t\t\tonSelect={handleSelectEditableType}\n\t\t\t/>\n\t\t\t<EditableLabelPopup\n\t\t\t\tcoordinates={coordinates}\n\t\t\t\tisVisible={editableLabelModalUtils.visible}\n\t\t\t\tonRequestClose={editableLabelModalUtils.close}\n\t\t\t\tonSubmit={handleInsertEditable}\n\t\t\t/>\n\t\t\t<ExistingEditablePopup\n\t\t\t\tcoordinates={coordinates}\n\t\t\t\tisVisible={existingEditableModalUtils.visible}\n\t\t\t\tonRequestClose={existingEditableModalUtils.close}\n\t\t\t\tonSelect={handleInsertExistingEditable}\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n","export type ImageDimensions = {\n\twidth: number;\n\theight: number;\n};\n\nexport function getImageSizeAsync(url: string): Promise<ImageDimensions | null> {\n\treturn new Promise((resolve) => {\n\t\tconst img = document.createElement('img');\n\n\t\timg.onload = () => {\n\t\t\tresolve({width: img.naturalWidth, height: img.naturalHeight});\n\t\t};\n\n\t\timg.onerror = () => {\n\t\t\tresolve(null);\n\t\t};\n\n\t\timg.src = url;\n\t});\n}\n","import {ImageDimensions, getImageSizeAsync} from '../../../../../packages/image/utils';\nimport React, {ChangeEvent, FC, KeyboardEvent, memo, useState} from 'react';\n\nimport {Button} from '../../button';\nimport Field from '../../field';\nimport Icon from '../../icon';\nimport {ImageInsertOptions} from '../../../../../packages/image/commands';\nimport {ReactComponent as Photo} from '../../../../../assets/images/icon-photo.svg';\nimport {Popup} from '../../popup';\nimport {StencylPopupCoordinates} from '../../../../../types';\nimport {isValidUrl} from '../../../../../utils';\nimport {useDebounceEffect} from '../../../../../hooks';\n\ntype InsertPhotoPopupProps = {\n\tcoordinates: StencylPopupCoordinates;\n\tisVisible: boolean;\n\tonRequestClose: () => void;\n\tonSubmit: (value: ImageInsertOptions) => void;\n};\n\nconst BaseInsertPhotoPopup: FC<InsertPhotoPopupProps> = ({\n\tcoordinates: {x, y},\n\tisVisible,\n\tonRequestClose,\n\tonSubmit,\n}) => {\n\tconst [url, setUrl] = useState('');\n\tconst [scale, setScale] = useState('100');\n\tconst [dimensions, setDimensions] = useState<ImageDimensions | null>(null);\n\n\tconst handleChangeScale = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetScale(e.target.value);\n\t};\n\n\tconst handleChangeUrl = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetUrl(e.target.value);\n\t};\n\n\tconst handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n\t\tif (e.key?.toLowerCase() === 'enter') {\n\t\t\thandleSubmit();\n\t\t}\n\t};\n\n\tconst handleSubmit = () => {\n\t\tif (!dimensions || !scale || !url?.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet parsedScale = parseFloat(scale);\n\t\tparsedScale = isNaN(parsedScale) || parsedScale < 1 ? 1 : parsedScale;\n\t\tparsedScale = parsedScale / 100;\n\n\t\tonSubmit({\n\t\t\turl,\n\t\t\twidth: Math.round(dimensions.width * parsedScale),\n\t\t\theight: Math.round(dimensions.height * parsedScale),\n\t\t});\n\t\tonRequestClose();\n\t\tresetFields();\n\t};\n\n\tconst getAndSetImageDimensionsAsync = async () => {\n\t\tsetDimensions(await getImageSizeAsync(url));\n\t};\n\n\tconst resetFields = () => {\n\t\tsetUrl('');\n\t\tsetScale('100');\n\t\tsetDimensions(null);\n\t};\n\n\tuseDebounceEffect(() => {\n\t\tif (isValidUrl(url)) {\n\t\t\tgetAndSetImageDimensionsAsync();\n\t\t}\n\t}, [url]);\n\n\treturn (\n\t\t<Popup\n\t\t\tposition='right'\n\t\t\talignment='start'\n\t\t\tisVisible={isVisible}\n\t\t\tonRequestClose={onRequestClose}\n\t\t\ttransparent\n\t\t\thideArrow\n\t\t\toverlayCloseOnClick\n\t\t\tcontentClassName='bg-white rounded-lg border-gray-50 border-solid border flex items-center py-8 px-8 space-x-8 text-gray-500'\n\t\t\tdistance={4}\n\t\t\toffsets={{\n\t\t\t\ty: y + 16,\n\t\t\t\tx: x,\n\t\t\t}}\n\t\t>\n\t\t\t<Icon className='s-20'>\n\t\t\t\t<Photo />\n\t\t\t</Icon>\n\t\t\t<div className='flex items-center space-x-4'>\n\t\t\t\t<Field className='w-180'>\n\t\t\t\t\t<input\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Paste a link to an image'\n\t\t\t\t\t\tvalue={url}\n\t\t\t\t\t\tonChange={handleChangeUrl}\n\t\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\t/>\n\t\t\t\t</Field>\n\t\t\t\t<div className='flex items-center justify-between px-8 h-36 border border-gray-200 rounded-lg transition:colors transition:shadow duration-250 focus-within:shadow-outline focus-within:border-blue-500'>\n\t\t\t\t\t<input\n\t\t\t\t\t\tvalue={scale}\n\t\t\t\t\t\tonChange={handleChangeScale}\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\tmaxLength={3}\n\t\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\t\tclassName='border-none h-full w-48 bg-transparent m-0'\n\t\t\t\t\t\tplaceholder='100'\n\t\t\t\t\t/>\n\t\t\t\t\t<div>%</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Button disabled={!dimensions} className='h-36' onPress={handleSubmit}>\n\t\t\t\tInsert\n\t\t\t</Button>\n\t\t</Popup>\n\t);\n};\n\nexport const InsertPhotoPopup = memo(BaseInsertPhotoPopup);\n","import {ImageInsertOptions, insertInlineImage} from '../../../../../../packages/image/commands';\nimport React, {Fragment, useRef, useState} from 'react';\n\nimport {BaseSelection} from 'slate';\nimport {IconButton} from '../../../icon-button';\nimport {InsertPhotoPopup} from '../../../popups/insert-photo';\nimport {ReactComponent as Photo} from '../../../../../../assets/images/icon-photo.svg';\nimport {StencylPopupCoordinates} from '../../../../../../types';\nimport {focusEditor} from '../../../../../../packages/common/commands';\nimport {getSelectionCoordinates} from '../../../../../../packages/common/utils';\nimport {useModalUtils} from '../../../../../../hooks';\nimport {useSlateStatic} from 'slate-react';\n\nexport const InsertPhotoButton = () => {\n\tconst selectionRef = useRef<BaseSelection>();\n\tconst ref = useRef(null);\n\tconst editor = useSlateStatic();\n\tconst modalUtils = useModalUtils();\n\tconst [coordinates, setCoordinates] = useState<StencylPopupCoordinates>({x: 0, y: 0});\n\n\tconst handlePressIcon = () => {\n\t\tconst {selection} = editor;\n\n\t\tif (!selection) {\n\t\t\treturn;\n\t\t}\n\n\t\tselectionRef.current = selection;\n\t\tsetCoordinates(getSelectionCoordinates(editor));\n\t\tmodalUtils.open();\n\t};\n\n\tconst handleInsertImage = (options: ImageInsertOptions) => {\n\t\tif (!selectionRef.current) {\n\t\t\treturn;\n\t\t}\n\n\t\tfocusEditor(editor, selectionRef.current);\n\n\t\tinsertInlineImage(editor, options);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<IconButton tip='Insert photo' onPress={handlePressIcon} ref={ref}>\n\t\t\t\t<Photo />\n\t\t\t</IconButton>\n\t\t\t<InsertPhotoPopup\n\t\t\t\tcoordinates={coordinates}\n\t\t\t\tisVisible={modalUtils.visible}\n\t\t\t\tonRequestClose={modalUtils.close}\n\t\t\t\tonSubmit={handleInsertImage}\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n","import {IconButton} from '../../../icon-button';\nimport React from 'react';\nimport {ReactComponent as Table} from '../../../../../../assets/images/icon-table.svg';\nimport {insertTableBlock} from '../../../../../../packages/table/commands';\nimport {useSlateStatic} from 'slate-react';\n\nexport const InsertTableButton = () => {\n\tconst editor = useSlateStatic();\n\n\tconst handlePress = () => {\n\t\tinsertTableBlock(editor);\n\t};\n\n\treturn (\n\t\t<IconButton onPress={handlePress} tip='Insert table'>\n\t\t\t<Table />\n\t\t</IconButton>\n\t);\n};\n","import {IconButton} from '../../../icon-button';\nimport {ReactComponent as Italic} from '../../../../../../assets/images/icon-italic.svg';\nimport React from 'react';\nimport {getShortcutText} from '../../../../../../utils';\nimport {isMarkActive} from '../../../../../../packages/common/utils';\nimport {toggleItalicMark} from '../../../../../../packages/leaf/commands';\nimport {useSlate} from 'slate-react';\n\nexport const ItalicButton = () => {\n\tconst editor = useSlate();\n\tconst isActive = isMarkActive(editor, 'italic');\n\n\tconst handlePress = () => {\n\t\ttoggleItalicMark(editor);\n\t};\n\n\treturn (\n\t\t<IconButton\n\t\t\tonPress={handlePress}\n\t\t\tactive={isActive}\n\t\t\ttip={`Italic ${getShortcutText('Mod', 'I')}`}\n\t\t>\n\t\t\t<Italic />\n\t\t</IconButton>\n\t);\n};\n","import {\n\tinsertNumberedListBlock,\n\tremoveListItemBlock,\n} from '../../../../../../packages/lists/commands';\n\nimport {IconButton} from '../../../icon-button';\nimport {ReactComponent as ListNumbers} from '../../../../../../assets/images/icon-list-numbers.svg';\nimport React from 'react';\nimport {getCurrentListBlock} from '../../../../../../packages/lists/utils';\nimport {useSlate} from 'slate-react';\n\nexport const NumberedListButton = () => {\n\tconst editor = useSlate();\n\tconst listBlock = getCurrentListBlock(editor);\n\tconst isActive = listBlock && listBlock[0].type === 'numbered-list';\n\n\tconst handlePress = () => {\n\t\tisActive ? removeListItemBlock(editor) : insertNumberedListBlock(editor);\n\t};\n\n\treturn (\n\t\t<IconButton onPress={handlePress} active={isActive} tip='Numbered list'>\n\t\t\t<ListNumbers />\n\t\t</IconButton>\n\t);\n};\n","import {ReactComponent as ArrowForwardUp} from '../../../../../../assets/images/icon-arrow-forward-up.svg';\nimport {HistoryEditor} from 'slate-history';\nimport {IconButton} from '../../../icon-button';\nimport React from 'react';\nimport {getShortcutText} from '../../../../../../utils';\nimport {useSlate} from 'slate-react';\n\nexport const RedoButton = () => {\n\tconst editor = useSlate();\n\n\tconst handlePress = () => {\n\t\tHistoryEditor.redo(editor);\n\t};\n\n\treturn (\n\t\t<IconButton\n\t\t\tonPress={handlePress}\n\t\t\tdisabled={!editor.history.redos.length}\n\t\t\ttip={`Redo ${getShortcutText('Mod', 'Shift', 'Z')}`}\n\t\t>\n\t\t\t<ArrowForwardUp />\n\t\t</IconButton>\n\t);\n};\n","import {IconButton} from '../../../icon-button';\nimport React from 'react';\nimport {ReactComponent as Strikethrough} from '../../../../../../assets/images/icon-strikethrough.svg';\nimport {getShortcutText} from '../../../../../../utils';\nimport {isMarkActive} from '../../../../../../packages/common/utils';\nimport {toggleStrikethroughMark} from '../../../../../../packages/leaf/commands';\nimport {useSlate} from 'slate-react';\n\nexport const StrikethroughButton = () => {\n\tconst editor = useSlate();\n\tconst isActive = isMarkActive(editor, 'strikethrough');\n\n\tconst handlePress = () => {\n\t\ttoggleStrikethroughMark(editor);\n\t};\n\n\treturn (\n\t\t<IconButton\n\t\t\tonPress={handlePress}\n\t\t\tactive={isActive}\n\t\t\ttip={`Strikethrough ${getShortcutText('Mod', 'Shift', 'X')}`}\n\t\t>\n\t\t\t<Strikethrough />\n\t\t</IconButton>\n\t);\n};\n","import {AnchorRef, Popup} from '../../popup';\nimport React, {FC, memo} from 'react';\nimport colors, {PRESET_COLORS} from '../../../../../constants/colors';\nimport {getCurrentDisplayTextSize, getMarkValue} from '../../../../../packages/common/utils';\nimport {setColorMark, unsetColorMark} from '../../../../../packages/leaf/commands';\nimport {\n\ttoggleHeadingOne,\n\ttoggleHeadingThree,\n\ttoggleHeadingTwo,\n} from '../../../../../packages/headings/commands';\nimport {useBooleanState, useMouseDown} from '../../../../../hooks';\n\nimport {ReactComponent as ChevronDown} from '../../../../../assets/images/icon-chevron-down.svg';\nimport Icon from '../../icon';\nimport {StencylDisplayTextSize} from '../../../../../types';\nimport classNames from 'classnames';\nimport css from './style.module.css';\nimport {isEqualColor} from '../../../../../utils';\nimport {setBlockAsParagraph} from '../../../../../packages/paragraph/commands';\nimport {useSlate} from 'slate-react';\n\ntype TextStylePopupProps = {\n\tanchorRef: AnchorRef;\n\tisVisible: boolean;\n\tonRequestClose: () => void;\n};\n\ntype ColorItemProps = {\n\tselected?: boolean;\n\tcolor?: string;\n\tonPress?: (color?: string) => void;\n};\n\ntype TextSizeItemProps = {\n\ttextSize?: StencylDisplayTextSize;\n\tlabel: string;\n\tonPress?: (textSize?: StencylDisplayTextSize) => void;\n};\n\nconst ColorItem: FC<ColorItemProps> = ({color, selected, onPress}) => {\n\tconst handleMouseDown = useMouseDown(() => {\n\t\tonPress?.(color);\n\t});\n\n\treturn (\n\t\t<div\n\t\t\tonMouseDown={handleMouseDown}\n\t\t\tstyle={{backgroundColor: color ?? colors.black}}\n\t\t\tclassName={classNames(\n\t\t\t\t'w-20 h-20 rounded-full cursor-pointer duration-250 transition-shadow hover:shadow-outline',\n\t\t\t\t{\n\t\t\t\t\t'shadow-outline': selected,\n\t\t\t\t},\n\t\t\t)}\n\t\t/>\n\t);\n};\n\nconst TextSizeItem: FC<TextSizeItemProps> = ({textSize, label, onPress}) => {\n\tconst handleMouseDown = useMouseDown(() => {\n\t\tonPress?.(textSize);\n\t});\n\n\treturn (\n\t\t<div\n\t\t\tonMouseDown={handleMouseDown}\n\t\t\tclassName='h-36 flex items-center transition-colors duration-250 hover:text-gray-900 cursor-pointer'\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName={classNames({\n\t\t\t\t\t'text-headline': textSize === 'heading-three',\n\t\t\t\t\t'text-heading-3': textSize === 'heading-two',\n\t\t\t\t\t'text-heading-2': textSize === 'heading-one',\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst BaseTextStylePopup: FC<TextStylePopupProps> = ({anchorRef, isVisible, onRequestClose}) => {\n\tconst editor = useSlate();\n\tconst colorMark = getMarkValue(editor, 'color');\n\tconst textSize = getCurrentDisplayTextSize(editor);\n\tconst [selectorOpen, toggleSelectorOpen] = useBooleanState(false);\n\n\tconst handleClickSelector = useMouseDown(() => {\n\t\ttoggleSelectorOpen();\n\t});\n\n\tconst handleClickTextSizeOption = (option?: StencylDisplayTextSize) => {\n\t\tif (!option) {\n\t\t\tsetBlockAsParagraph(editor);\n\t\t}\n\n\t\tif (option === 'heading-one') {\n\t\t\ttoggleHeadingOne(editor);\n\t\t}\n\n\t\tif (option === 'heading-two') {\n\t\t\ttoggleHeadingTwo(editor);\n\t\t}\n\n\t\tif (option === 'heading-three') {\n\t\t\ttoggleHeadingThree(editor);\n\t\t}\n\n\t\ttoggleSelectorOpen();\n\t};\n\n\tconst handleClickColorOption = (color?: string) => {\n\t\tif (!color) {\n\t\t\tunsetColorMark(editor);\n\t\t\treturn;\n\t\t}\n\n\t\tsetColorMark(editor, color);\n\t};\n\n\treturn (\n\t\t<Popup\n\t\t\tposition='down'\n\t\t\talignment='start'\n\t\t\tanchorRef={anchorRef}\n\t\t\tisVisible={isVisible}\n\t\t\tonRequestClose={onRequestClose}\n\t\t\ttransparent\n\t\t\thideArrow\n\t\t\toverlayCloseOnClick\n\t\t\tcontentClassName='bg-white rounded-lg py-16 text-gray-500 divide-y divide-y-gray-100'\n\t\t\tdistance={4}\n\t\t\toffsets={{\n\t\t\t\ty: 16,\n\t\t\t}}\n\t\t>\n\t\t\t<div className='pb-8 px-16'>\n\t\t\t\t<div className='text-blue-500 font-medium'>Style</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames(css.selector, {\n\t\t\t\t\t\t[css.open]: selectorOpen,\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tonMouseDown={handleClickSelector}\n\t\t\t\t\t\tclassName='h-36 flex items-center space-x-6 transition-colors duration-250 hover:text-gray-900 cursor-pointer'\n\t\t\t\t\t>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{!textSize && 'Base Paragraph'}\n\t\t\t\t\t\t\t{textSize === 'heading-one' && 'Heading 1'}\n\t\t\t\t\t\t\t{textSize === 'heading-two' && 'Heading 2'}\n\t\t\t\t\t\t\t{textSize === 'heading-three' && 'Heading 3'}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Icon className='s-18'>\n\t\t\t\t\t\t\t<ChevronDown />\n\t\t\t\t\t\t</Icon>\n\t\t\t\t\t</div>\n\t\t\t\t\t{!!textSize && (\n\t\t\t\t\t\t<TextSizeItem label='Base Paragraph' onPress={handleClickTextSizeOption} />\n\t\t\t\t\t)}\n\t\t\t\t\t{textSize !== 'heading-three' && (\n\t\t\t\t\t\t<TextSizeItem\n\t\t\t\t\t\t\tlabel='Heading 3'\n\t\t\t\t\t\t\ttextSize='heading-three'\n\t\t\t\t\t\t\tonPress={handleClickTextSizeOption}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{textSize !== 'heading-two' && (\n\t\t\t\t\t\t<TextSizeItem\n\t\t\t\t\t\t\tlabel='Heading 2'\n\t\t\t\t\t\t\ttextSize='heading-two'\n\t\t\t\t\t\t\tonPress={handleClickTextSizeOption}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{textSize !== 'heading-one' && (\n\t\t\t\t\t\t<TextSizeItem\n\t\t\t\t\t\t\tlabel='Heading 1'\n\t\t\t\t\t\t\ttextSize='heading-one'\n\t\t\t\t\t\t\tonPress={handleClickTextSizeOption}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='pt-16 px-16'>\n\t\t\t\t<div className='text-blue-500 font-medium mb-8'>Color</div>\n\t\t\t\t<div className='flex items-center space-x-6'>\n\t\t\t\t\t{PRESET_COLORS.map((o) => (\n\t\t\t\t\t\t<ColorItem\n\t\t\t\t\t\t\tcolor={o}\n\t\t\t\t\t\t\tkey={o}\n\t\t\t\t\t\t\tselected={isEqualColor(o, colorMark)}\n\t\t\t\t\t\t\tonPress={handleClickColorOption}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t\t<ColorItem selected={!colorMark} onPress={handleClickColorOption} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Popup>\n\t);\n};\n\nexport const TextStylePopup = memo(BaseTextStylePopup);\n","import {StencylEditor} from '../../types';\nimport {deactivateBlock} from '../common/commands';\n\nexport function setBlockAsParagraph(editor: StencylEditor) {\n\tdeactivateBlock(editor);\n}\n","import {activateBlock, deactivateBlock} from '../common/commands';\n\nimport {StencylEditor} from '../../types';\nimport {isBlockActive} from '../common/utils';\n\nexport function toggleHeadingOne(editor: StencylEditor) {\n\tisBlockActive(editor, 'heading-one')\n\t\t? deactivateBlock(editor)\n\t\t: activateBlock(editor, 'heading-one');\n}\n\nexport function toggleHeadingTwo(editor: StencylEditor) {\n\tisBlockActive(editor, 'heading-two')\n\t\t? deactivateBlock(editor)\n\t\t: activateBlock(editor, 'heading-two');\n}\n\nexport function toggleHeadingThree(editor: StencylEditor) {\n\tisBlockActive(editor, 'heading-three')\n\t\t? deactivateBlock(editor)\n\t\t: activateBlock(editor, 'heading-three');\n}\n\nexport function toggleHeadingFour(editor: StencylEditor) {\n\tisBlockActive(editor, 'heading-four')\n\t\t? deactivateBlock(editor)\n\t\t: activateBlock(editor, 'heading-four');\n}\n\nexport function toggleHeadingFive(editor: StencylEditor) {\n\tisBlockActive(editor, 'heading-five')\n\t\t? deactivateBlock(editor)\n\t\t: activateBlock(editor, 'heading-one');\n}\n\nexport function toggleHeadingSix(editor: StencylEditor) {\n\tisBlockActive(editor, 'heading-six')\n\t\t? deactivateBlock(editor)\n\t\t: activateBlock(editor, 'heading-six');\n}\n","import React, {Fragment, useRef} from 'react';\nimport {getCurrentDisplayTextSize, getMarkValue} from '../../../../../../packages/common/utils';\n\nimport {ReactComponent as H1} from '../../../../../../assets/images/icon-h-1.svg';\nimport {ReactComponent as H2} from '../../../../../../assets/images/icon-h-2.svg';\nimport {ReactComponent as H3} from '../../../../../../assets/images/icon-h-3.svg';\nimport {IconButton} from '../../../icon-button';\nimport {ReactComponent as LetterCase} from '../../../../../../assets/images/icon-letter-case.svg';\nimport {TextStylePopup} from '../../../popups/text-style';\nimport colors from '../../../../../../constants/colors';\nimport {getRgbaColor} from '../../../../../../utils';\nimport {useModalUtils} from '../../../../../../hooks';\nimport {useSlate} from 'slate-react';\n\nexport const TextStyleButton = () => {\n\tconst ref = useRef(null);\n\tconst modalUtils = useModalUtils();\n\tconst editor = useSlate();\n\tconst colorMark = getMarkValue(editor, 'color');\n\tconst textSize = getCurrentDisplayTextSize(editor);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<IconButton\n\t\t\t\tonPress={modalUtils.open}\n\t\t\t\tref={ref}\n\t\t\t\ttip='Text style'\n\t\t\t\tclassName='transition-shadow hover:shadow-outline'\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundColor: getRgbaColor(colorMark ?? colors.black, 0.15),\n\t\t\t\t\tcolor: colorMark ?? colors.black,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{textSize === 'heading-one' && <H1 />}\n\t\t\t\t{textSize === 'heading-two' && <H2 />}\n\t\t\t\t{textSize === 'heading-three' && <H3 />}\n\t\t\t\t{!textSize && <LetterCase />}\n\t\t\t</IconButton>\n\t\t\t<TextStylePopup\n\t\t\t\tanchorRef={ref}\n\t\t\t\tisVisible={modalUtils.visible}\n\t\t\t\tonRequestClose={modalUtils.close}\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n","import {IconButton} from '../../../icon-button';\nimport React from 'react';\nimport {ReactComponent as Underline} from '../../../../../../assets/images/icon-underline.svg';\nimport {getShortcutText} from '../../../../../../utils';\nimport {isMarkActive} from '../../../../../../packages/common/utils';\nimport {toggleUnderlineMark} from '../../../../../../packages/leaf/commands';\nimport {useSlate} from 'slate-react';\n\nexport const UnderlineButton = () => {\n\tconst editor = useSlate();\n\tconst isActive = isMarkActive(editor, 'underline');\n\n\tconst handlePress = () => {\n\t\ttoggleUnderlineMark(editor);\n\t};\n\n\treturn (\n\t\t<IconButton\n\t\t\tonPress={handlePress}\n\t\t\tactive={isActive}\n\t\t\ttip={`Underline ${getShortcutText('Mod', 'U')}`}\n\t\t>\n\t\t\t<Underline />\n\t\t</IconButton>\n\t);\n};\n","import {ReactComponent as ArrowBackUp} from '../../../../../../assets/images/icon-arrow-back-up.svg';\nimport {HistoryEditor} from 'slate-history';\nimport {IconButton} from '../../../icon-button';\nimport React from 'react';\nimport {getShortcutText} from '../../../../../../utils';\nimport {useSlate} from 'slate-react';\n\nexport const UndoButton = () => {\n\tconst editor = useSlate();\n\n\tconst handlePress = () => {\n\t\tHistoryEditor.undo(editor);\n\t};\n\n\treturn (\n\t\t<IconButton\n\t\t\tonPress={handlePress}\n\t\t\tdisabled={!editor.history.undos.length}\n\t\t\ttip={`Undo ${getShortcutText('Mod', 'Z')}`}\n\t\t>\n\t\t\t<ArrowBackUp />\n\t\t</IconButton>\n\t);\n};\n","import React, {memo} from 'react';\n\nimport {AlignCenterButton} from './modules/align-center';\nimport {AlignJustifiedButton} from './modules/align-justified';\nimport {AlignLeftButton} from './modules/align-left';\nimport {AlignRightButton} from './modules/align-right';\nimport {BoldButton} from './modules/bold';\nimport {BulletedListButton} from './modules/bulleted-list';\nimport {ClearFormattingButton} from './modules/clear-formatting';\nimport {DisplayFlagButton} from './modules/display-flag';\nimport IconGroup from '../icon-group';\nimport {IndentDecreaseButton} from './modules/indent-decrease';\nimport {IndentIncreaseButton} from './modules/indent-increase';\nimport {InsertEditableButton} from './modules/insert-editable';\nimport {InsertPhotoButton} from './modules/insert-photo';\nimport {InsertTableButton} from './modules/insert-table';\nimport {ItalicButton} from './modules/italic';\nimport {NumberedListButton} from './modules/numbered-list';\nimport {RedoButton} from './modules/redo';\nimport {StrikethroughButton} from './modules/strikethrough';\nimport {TextStyleButton} from './modules/text-style';\nimport {UnderlineButton} from './modules/underline';\nimport {UndoButton} from './modules/undo';\n\nconst BaseToolbar = () => {\n\treturn (\n\t\t<div className='flex items-center justify-between px-60 py-16 bg-white'>\n\t\t\t<div className='flex items-center divide-x divide-gray-100'>\n\t\t\t\t<IconGroup>\n\t\t\t\t\t<UndoButton />\n\t\t\t\t\t<RedoButton />\n\t\t\t\t</IconGroup>\n\t\t\t\t<IconGroup>\n\t\t\t\t\t<TextStyleButton />\n\t\t\t\t</IconGroup>\n\t\t\t\t<IconGroup>\n\t\t\t\t\t<BoldButton />\n\t\t\t\t\t<ItalicButton />\n\t\t\t\t\t<UnderlineButton />\n\t\t\t\t\t<StrikethroughButton />\n\t\t\t\t</IconGroup>\n\t\t\t\t<IconGroup>\n\t\t\t\t\t<AlignLeftButton />\n\t\t\t\t\t<AlignCenterButton />\n\t\t\t\t\t<AlignRightButton />\n\t\t\t\t\t<AlignJustifiedButton />\n\t\t\t\t</IconGroup>\n\t\t\t\t<IconGroup>\n\t\t\t\t\t<IndentDecreaseButton />\n\t\t\t\t\t<IndentIncreaseButton />\n\t\t\t\t</IconGroup>\n\t\t\t\t<IconGroup>\n\t\t\t\t\t<BulletedListButton />\n\t\t\t\t\t<NumberedListButton />\n\t\t\t\t</IconGroup>\n\t\t\t\t<IconGroup>\n\t\t\t\t\t<InsertTableButton />\n\t\t\t\t\t<InsertPhotoButton />\n\t\t\t\t\t<InsertEditableButton />\n\t\t\t\t\t<DisplayFlagButton />\n\t\t\t\t</IconGroup>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<ClearFormattingButton />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport const Toolbar = memo(BaseToolbar);\n","import {StencylEditor} from '../../types';\n\nexport const withEditable = (editor: StencylEditor) => {\n\tconst {isVoid, isInline} = editor;\n\n\teditor.isInline = (element) => {\n\t\treturn element.type === 'editable' && !element.isInvisible ? true : isInline(element);\n\t};\n\n\teditor.isVoid = (element) => {\n\t\treturn element.type === 'editable' ? true : isVoid(element);\n\t};\n\n\treturn editor;\n};\n","import {Descendant, Element, Text} from 'slate';\nimport {StencylAlignment, StencylEditor, StencylElement, StencylText} from '../../types';\n\nimport constants from '../../constants';\nimport {getEmptyTextNode} from '../common/utils';\nimport htmlNodeTypes from '../../constants/html-node-types';\nimport {jsx} from 'slate-hyperscript';\n\nexport type DeserializedChildren = Descendant | Descendant[] | undefined | null;\n\nexport type DeserializeFn = (element: Node, children: Descendant[]) => DeserializedChildren;\n\nexport function cruftFilterFn(element: HTMLElement) {\n\treturn !(element.nodeName === '#text' && /^[\\n]{1,}$/.test(element.nodeValue ?? ''));\n}\n\nexport function invalidNodesFilterFn(element: HTMLElement) {\n\treturn [htmlNodeTypes.ELEMENT_NODE, htmlNodeTypes.TEXT_NODE].includes(element.nodeType);\n}\n\nexport function deserializeToFragment(children: any) {\n\treturn jsx('fragment', {}, children);\n}\n\nexport function deserializeToElement(attributes: Partial<StencylElement>, children: any) {\n\treturn jsx('element', attributes, children);\n}\n\nexport function deserializeToLeaf(attributes: Partial<StencylText>, child?: any) {\n\treturn jsx('text', attributes, child);\n}\n\nexport function matchHTMLNode(\n\telement: Node,\n\trules: {nodeName?: string; nodeType?: number; nodeValue?: string | null} = {},\n) {\n\treturn Object.keys(rules).every((o) => element[o] === rules[o]);\n}\n\nexport function matchHTMLElementNode(\n\telement: Node,\n\trules: {nodeName?: string; nodeType?: number; nodeValue?: string | null} = {},\n) {\n\treturn matchHTMLNode(element, {nodeType: htmlNodeTypes.ELEMENT_NODE, ...rules});\n}\n\nexport function matchHTMLTextNode(\n\telement: HTMLElement,\n\trules: {nodeName?: string; nodeType?: number; nodeValue?: string | null} = {},\n) {\n\treturn matchHTMLNode(element, {nodeType: htmlNodeTypes.TEXT_NODE, ...rules});\n}\n\nexport function wrapInlineTopLevelNodesInParagraph(editor: StencylEditor, nodes: Descendant[]) {\n\tconst wrappedNodes: Array<Descendant> = [];\n\tconst pendingNodes: Array<Descendant> = [];\n\n\tconst flushPendingNodes = () => {\n\t\tif (pendingNodes.length) {\n\t\t\twrappedNodes.push(\n\t\t\t\tdeserializeToElement(\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'paragraph',\n\t\t\t\t\t},\n\t\t\t\t\tpendingNodes,\n\t\t\t\t),\n\t\t\t);\n\t\t\tpendingNodes.length = 0;\n\t\t}\n\t};\n\n\tfor (const node of nodes) {\n\t\tconst isInline = Text.isText(node) || editor.isInline(node);\n\n\t\tif (isInline) {\n\t\t\tpendingNodes.push(node);\n\t\t} else {\n\t\t\tflushPendingNodes();\n\t\t\twrappedNodes.push(node);\n\t\t}\n\t}\n\n\tflushPendingNodes();\n\n\treturn wrappedNodes;\n}\n\nexport function normalizeFirstNode(nodes: Descendant[]) {\n\tif (!nodes.length) {\n\t\treturn nodes;\n\t}\n\n\tconst firstNode = nodes[0];\n\n\tif (Element.isElement(firstNode) && firstNode.type !== 'paragraph') {\n\t\tnodes = [{type: 'paragraph', children: getEmptyTextNode()}, ...nodes];\n\t}\n\n\treturn nodes;\n}\n\nexport function getNodeStyle<T extends keyof CSSStyleDeclaration>(\n\tnode: Node,\n\tkey: T,\n): CSSStyleDeclaration[T] | undefined {\n\tif (node instanceof HTMLElement) {\n\t\treturn node.style[key];\n\t}\n\n\treturn undefined;\n}\n\nexport function getNodeAttribute(node: Node, key: string): string | undefined {\n\tif (node instanceof HTMLElement) {\n\t\treturn node.getAttribute(key) ?? undefined;\n\t}\n\n\treturn undefined;\n}\n\nexport function getStencylAlignmentAttribute(\n\talignment: string | undefined,\n): StencylAlignment | undefined {\n\tif (!alignment) {\n\t\treturn undefined;\n\t}\n\n\tif (['start', 'left'].includes(alignment)) {\n\t\treturn 'left';\n\t}\n\n\tif (['end', 'right'].includes(alignment)) {\n\t\treturn 'right';\n\t}\n\n\tif (['center'].includes(alignment)) {\n\t\treturn 'center';\n\t}\n\n\tif (['justify'].includes(alignment)) {\n\t\treturn 'justify';\n\t}\n\n\treturn undefined;\n}\n\nexport function getNodeIndentation(node: Node): number | undefined {\n\tif (node instanceof HTMLElement) {\n\t\tconst marginLeft = getNodeStyle(node, 'marginLeft');\n\n\t\tif (marginLeft?.length) {\n\t\t\tconst parsed = parseFloat(marginLeft);\n\n\t\t\tif (parsed) {\n\t\t\t\treturn Math.round((parsed * 100) / constants.paperSizes.a4.width);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nexport function getNodeTextContent(node: Node): string {\n\tconst text = node.textContent ?? '';\n\n\treturn text === '\\n' ? text : text.replace(/[\\n]/gi, ' ');\n}\n","import {\n\tDeserializeFn,\n\tdeserializeToFragment,\n\tdeserializeToLeaf,\n\tmatchHTMLElementNode,\n} from './utils';\n\nimport htmlNodeNames from '../../constants/html-node-names';\nimport htmlNodeTypes from '../../constants/html-node-types';\n\nexport const deserializeBody: DeserializeFn = (element, children) => {\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.BLOCKQUOTE})) {\n\t\treturn deserializeToFragment(children);\n\t}\n\n\treturn undefined;\n};\n\nexport const deserializeLineBreak: DeserializeFn = (element, children) => {\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.BR})) {\n\t\treturn deserializeToLeaf({text: '\\n'}, children);\n\t}\n\n\treturn undefined;\n};\n\nexport const deserializeMarks: DeserializeFn = (element, children) => {\n\tif (\n\t\t![\n\t\t\thtmlNodeNames.SPAN,\n\t\t\thtmlNodeNames.STRONG,\n\t\t\thtmlNodeNames.I,\n\t\t\thtmlNodeNames.B,\n\t\t\thtmlNodeNames.U,\n\t\t\thtmlNodeNames.S,\n\t\t\thtmlNodeNames.CODE,\n\t\t\thtmlNodeNames.FONT,\n\t\t].includes(element.nodeName) &&\n\t\telement.nodeType !== htmlNodeTypes.TEXT_NODE\n\t) {\n\t\treturn undefined;\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.SPAN})) {\n\t\treturn children;\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.FONT})) {\n\t\treturn children;\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.STRONG})) {\n\t\treturn children.map((child) => ({...child, bold: true}));\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.B})) {\n\t\treturn children.map((child) => ({...child, bold: true}));\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.I})) {\n\t\treturn children.map((child) => ({...child, italic: true}));\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.U})) {\n\t\treturn children.map((child) => ({...child, underline: true}));\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.S})) {\n\t\treturn children.map((child) => ({...child, strikethrough: true}));\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.CODE})) {\n\t\treturn children.map((child) => ({...child, code: true}));\n\t}\n\n\treturn undefined;\n};\n","import {\n\tDeserializeFn,\n\tcruftFilterFn,\n\tdeserializeToFragment,\n\tdeserializeToLeaf,\n\tgetNodeTextContent,\n\tinvalidNodesFilterFn,\n\tmatchHTMLElementNode,\n\tnormalizeFirstNode,\n\twrapInlineTopLevelNodesInParagraph,\n} from './utils';\nimport {deserializeBody, deserializeLineBreak, deserializeMarks} from './rules';\n\nimport {Descendant} from 'slate';\nimport {StencylEditor} from '../../types';\nimport {deserializeBlockquote} from '../blockquote/deserialize';\nimport {deserializeCodeblock} from '../codeblock/deserialize';\nimport {deserializeHeadings} from '../headings/deserialize';\nimport {deserializeImage} from '../image/deserialize';\nimport {deserializeLink} from '../link/deserialize';\nimport {deserializeLists} from '../lists/deserialize';\nimport {deserializeParagraph} from '../paragraph/deserialize';\nimport {deserializeTable} from '../table/deserialize';\nimport {getEmptyTextNode} from '../common/utils';\nimport htmlNodeNames from '../../constants/html-node-names';\nimport htmlNodeTypes from '../../constants/html-node-types';\nimport {notNil} from '../../utils';\n\nexport const withHTMLDeserializer = (editor: StencylEditor) => {\n\tconst {insertData} = editor;\n\n\teditor.insertData = (data) => {\n\t\tconst html = data.getData('text/html');\n\n\t\tif (html) {\n\t\t\tconst fragment = deserializeHTML(html, editor);\n\t\t\teditor.insertFragment(fragment);\n\t\t\treturn;\n\t\t}\n\n\t\tinsertData(data);\n\t};\n\n\treturn editor;\n};\n\nconst VOID_NODES = [htmlNodeNames.IMG];\n\nconst rules: Array<DeserializeFn> = [\n\tdeserializeBody,\n\tdeserializeLineBreak,\n\tdeserializeBlockquote,\n\tdeserializeCodeblock,\n\tdeserializeHeadings,\n\tdeserializeImage,\n\tdeserializeLink,\n\tdeserializeLists,\n\tdeserializeParagraph,\n\tdeserializeTable,\n\tdeserializeMarks,\n];\n\nfunction deserializeHTML(html: string, editor: StencylEditor) {\n\tconst parsed = new DOMParser().parseFromString(html, 'text/html');\n\tconst children = deserializeHTMLElements(Array.from(parsed.body.childNodes));\n\treturn deserializeToFragment(\n\t\tnormalizeFirstNode(wrapInlineTopLevelNodesInParagraph(editor, children)),\n\t);\n}\n\nfunction deserializeHTMLElements(elements: Array<Node>) {\n\tlet nodes: Descendant[] = [];\n\n\telements\n\t\t.filter(cruftFilterFn)\n\t\t.filter(invalidNodesFilterFn)\n\t\t.forEach((o) => {\n\t\t\tconst result = deserializeHTMLElement(o);\n\n\t\t\tif (Array.isArray(result)) {\n\t\t\t\tnodes = nodes.concat(result);\n\t\t\t} else {\n\t\t\t\tif (notNil(result)) {\n\t\t\t\t\tnodes.push(result);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\treturn nodes;\n}\n\nfunction deserializeHTMLElement(element: Node) {\n\tlet children = deserializeHTMLElements(normalizeChildNodes(element.childNodes, element));\n\n\tif (!children?.length && !VOID_NODES.includes(element.nodeName)) {\n\t\treturn deserializeToLeaf({text: getNodeTextContent(element)});\n\t}\n\n\tchildren = children.length ? children : getEmptyTextNode();\n\n\tfor (const rule of rules) {\n\t\tconst result = rule(element, children);\n\n\t\tif (typeof result === 'undefined') {\n\t\t\tcontinue;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tif (children?.length) {\n\t\treturn children;\n\t}\n\n\treturn null;\n}\n\nfunction normalizeChildNodes(childNodeList: NodeListOf<ChildNode>, parent: Node): Array<Node> {\n\tconst childNodes = Array.from(childNodeList);\n\n\tif (!matchHTMLElementNode(parent, {nodeName: htmlNodeNames.LI})) {\n\t\treturn childNodes;\n\t}\n\n\tconst validNodes: Array<Node> = [];\n\tconst pendingNodes: Array<Node> = [];\n\tconst validNodeNames = [\n\t\thtmlNodeNames.TABLE,\n\t\thtmlNodeNames.OL,\n\t\thtmlNodeNames.UL,\n\t\thtmlNodeNames.LIC,\n\t];\n\n\tfor (const node of childNodes) {\n\t\tif (node.nodeType === htmlNodeTypes.ELEMENT_NODE && validNodeNames.includes(node.nodeName)) {\n\t\t\tvalidNodes.push(node);\n\t\t} else {\n\t\t\tpendingNodes.push(node);\n\t\t}\n\t}\n\n\tif (pendingNodes.length) {\n\t\tconst container = document.createElement(htmlNodeNames.LIC);\n\t\tpendingNodes.forEach((o) => container.appendChild(o));\n\t\treturn [container, ...validNodes];\n\t}\n\n\treturn validNodes;\n}\n","import {\n\tDeserializeFn,\n\tdeserializeToElement,\n\tgetNodeIndentation,\n\tgetNodeStyle,\n\tgetStencylAlignmentAttribute,\n\tmatchHTMLElementNode,\n} from '../deserialize/utils';\n\nimport htmlNodeNames from '../../constants/html-node-names';\n\nexport const deserializeBlockquote: DeserializeFn = (element, children) => {\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.BLOCKQUOTE})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'block-quote',\n\t\t\t\talignment: getStencylAlignmentAttribute(getNodeStyle(element, 'textAlign')),\n\t\t\t\tindentation: getNodeIndentation(element),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\treturn undefined;\n};\n","import {\n\tDeserializeFn,\n\tdeserializeToElement,\n\tgetNodeIndentation,\n\tgetNodeStyle,\n\tgetStencylAlignmentAttribute,\n\tmatchHTMLElementNode,\n} from '../deserialize/utils';\n\nimport htmlNodeNames from '../../constants/html-node-names';\n\nexport const deserializeCodeblock: DeserializeFn = (element, children) => {\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.PRE})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'code-block',\n\t\t\t\talignment: getStencylAlignmentAttribute(getNodeStyle(element, 'textAlign')),\n\t\t\t\tindentation: getNodeIndentation(element),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\treturn undefined;\n};\n","import {\n\tDeserializeFn,\n\tdeserializeToElement,\n\tgetNodeIndentation,\n\tgetNodeStyle,\n\tgetStencylAlignmentAttribute,\n\tmatchHTMLElementNode,\n} from '../deserialize/utils';\n\nimport htmlNodeNames from '../../constants/html-node-names';\n\nexport const deserializeHeadings: DeserializeFn = (element, children) => {\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.H1})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'heading-one',\n\t\t\t\talignment: getStencylAlignmentAttribute(getNodeStyle(element, 'textAlign')),\n\t\t\t\tindentation: getNodeIndentation(element),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.H2})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'heading-two',\n\t\t\t\talignment: getStencylAlignmentAttribute(getNodeStyle(element, 'textAlign')),\n\t\t\t\tindentation: getNodeIndentation(element),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.H3})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'heading-three',\n\t\t\t\talignment: getStencylAlignmentAttribute(getNodeStyle(element, 'textAlign')),\n\t\t\t\tindentation: getNodeIndentation(element),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.H4})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'heading-four',\n\t\t\t\talignment: getStencylAlignmentAttribute(getNodeStyle(element, 'textAlign')),\n\t\t\t\tindentation: getNodeIndentation(element),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.H5})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'heading-five',\n\t\t\t\talignment: getStencylAlignmentAttribute(getNodeStyle(element, 'textAlign')),\n\t\t\t\tindentation: getNodeIndentation(element),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.H6})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'heading-six',\n\t\t\t\talignment: getStencylAlignmentAttribute(getNodeStyle(element, 'textAlign')),\n\t\t\t\tindentation: getNodeIndentation(element),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\treturn undefined;\n};\n","import {\n\tDeserializeFn,\n\tdeserializeToElement,\n\tgetNodeAttribute,\n\tgetNodeStyle,\n\tmatchHTMLElementNode,\n} from '../deserialize/utils';\n\nimport htmlNodeNames from '../../constants/html-node-names';\nimport {runIfDefined} from '../../utils';\n\nexport const deserializeImage: DeserializeFn = (element, children) => {\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.IMG})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'image',\n\t\t\t\turl: getNodeAttribute(element, 'src'),\n\t\t\t\twidth: runIfDefined(\n\t\t\t\t\tgetNodeAttribute(element, 'width') ?? getNodeStyle(element, 'width'),\n\t\t\t\t\t(o) => parseFloat(o),\n\t\t\t\t),\n\t\t\t\theight: runIfDefined(\n\t\t\t\t\tgetNodeAttribute(element, 'height') ?? getNodeStyle(element, 'height'),\n\t\t\t\t\t(o) => parseFloat(o),\n\t\t\t\t),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\treturn undefined;\n};\n","import {\n\tDeserializeFn,\n\tdeserializeToElement,\n\tgetNodeAttribute,\n\tmatchHTMLElementNode,\n} from '../deserialize/utils';\n\nimport htmlNodeNames from '../../constants/html-node-names';\n\nexport const deserializeLink: DeserializeFn = (element, children) => {\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.A})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'link',\n\t\t\t\turl: getNodeAttribute(element, 'href'),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\treturn undefined;\n};\n","import {DeserializeFn, deserializeToElement, matchHTMLElementNode} from '../deserialize/utils';\n\nimport htmlNodeNames from '../../constants/html-node-names';\n\nexport const deserializeLists: DeserializeFn = (element, children) => {\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.LI})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'list-item',\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.LIC})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'list-item-container',\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.UL})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'bulleted-list',\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.OL})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'numbered-list',\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\treturn undefined;\n};\n","import {\n\tDeserializeFn,\n\tdeserializeToElement,\n\tgetNodeIndentation,\n\tgetNodeStyle,\n\tgetStencylAlignmentAttribute,\n\tmatchHTMLElementNode,\n} from '../deserialize/utils';\n\nimport htmlNodeNames from '../../constants/html-node-names';\n\nexport const deserializeParagraph: DeserializeFn = (element, children) => {\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.P})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'paragraph',\n\t\t\t\talignment: getStencylAlignmentAttribute(getNodeStyle(element, 'textAlign')),\n\t\t\t\tindentation: getNodeIndentation(element),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.DIV})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'paragraph',\n\t\t\t\talignment: getStencylAlignmentAttribute(getNodeStyle(element, 'textAlign')),\n\t\t\t\tindentation: getNodeIndentation(element),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\treturn undefined;\n};\n","import {\n\tDeserializeFn,\n\tdeserializeToElement,\n\tgetNodeAttribute,\n\tgetNodeStyle,\n\tmatchHTMLElementNode,\n} from '../deserialize/utils';\n\nimport htmlNodeNames from '../../constants/html-node-names';\nimport {runIfDefined} from '../../utils';\n\nexport const deserializeTable: DeserializeFn = (element, children) => {\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.TD})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'table-cell',\n\t\t\t\tcolspan: runIfDefined(getNodeAttribute(element, 'colspan'), (o) => parseInt(o)),\n\t\t\t\trowspan: runIfDefined(getNodeAttribute(element, 'rowspan'), (o) => parseInt(o)),\n\t\t\t\twidth: runIfDefined(getNodeStyle(element, 'width'), (o) => parseFloat(o)),\n\t\t\t\theight: runIfDefined(getNodeStyle(element, 'height'), (o) => parseFloat(o)),\n\t\t\t\tborderColor: getNodeStyle(element, 'borderColor'),\n\t\t\t\tborderWidth: runIfDefined(getNodeStyle(element, 'borderWidth'), (o) => {\n\t\t\t\t\tconst parsed = parseFloat(o);\n\t\t\t\t\treturn !parsed || isNaN(parsed) ? 1 : parsed;\n\t\t\t\t}),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.TH})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'table-row',\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.TR})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'table-row',\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.TABLE})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'table',\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\treturn undefined;\n};\n","import {StencylEditor} from '../../types';\n\nexport const withImage = (editor: StencylEditor) => {\n\tconst {isVoid, isInline} = editor;\n\n\teditor.isInline = (element) => {\n\t\treturn element.type === 'image' ? true : isInline(element);\n\t};\n\n\teditor.isVoid = (element) => {\n\t\treturn element.type === 'image' ? true : isVoid(element);\n\t};\n\n\treturn editor;\n};\n","import {Editor, Element, Range, Transforms} from 'slate';\n\nimport {getEmptyTextNode} from '../common/utils';\nimport {isValidUrl} from '../../utils';\n\nexport function insertInlineLink(editor: Editor, url: string) {\n\tconst {selection} = editor;\n\n\tif (!selection || !isValidUrl(url)) {\n\t\treturn;\n\t}\n\n\tremoveInlineLink(editor);\n\n\tif (Range.isCollapsed(selection)) {\n\t\tTransforms.insertNodes(editor, {\n\t\t\ttype: 'link',\n\t\t\turl,\n\t\t\tchildren: [{text: url}],\n\t\t});\n\t\treturn;\n\t}\n\n\tTransforms.wrapNodes(\n\t\teditor,\n\t\t{\n\t\t\ttype: 'link',\n\t\t\turl,\n\t\t\tchildren: getEmptyTextNode(),\n\t\t},\n\t\t{split: true},\n\t);\n\tTransforms.collapse(editor, {edge: 'end'});\n}\n\nexport function removeInlineLink(editor: Editor) {\n\tTransforms.unwrapNodes(editor, {\n\t\tmatch: (node) => Element.isElement(node) && node.type === 'link',\n\t});\n}\n","import {StencylEditor} from '../../types';\nimport {insertInlineLink} from './commands';\nimport {isValidUrl} from '../../utils';\n\nexport const withLink = (editor: StencylEditor) => {\n\tconst {isInline, insertText} = editor;\n\n\teditor.isInline = (element) => {\n\t\treturn element.type === 'link' ? true : isInline(element);\n\t};\n\n\teditor.insertText = (text) => {\n\t\tisValidUrl(text) ? insertInlineLink(editor, text) : insertText(text);\n\t};\n\n\treturn editor;\n};\n","import {Editor, Element, Location, NodeEntry, Range, Text, Transforms} from 'slate';\nimport {StencylEditor, StencylElementTypes} from '../../types';\nimport {\n\tgetCurrentBlock,\n\tgetNextPath,\n\tgetNodeAt,\n\tgetParentNode,\n\tgetSelectionLeaf,\n} from '../common/utils';\n\nimport {decreaseListNesting} from './commands';\nimport {getListEntries} from './utils';\n\nexport const withLists = (editor: StencylEditor) => {\n\tconst {normalizeNode, insertBreak, deleteBackward} = editor;\n\n\teditor.normalizeNode = (entry) => {\n\t\tconst [node] = entry;\n\n\t\tif (Element.isElement(node) && node.type === 'list-item') {\n\t\t\tconst fixedOrphanedListItems = fixOrphanedListItems(editor, entry);\n\t\t\tif (fixedOrphanedListItems) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tElement.isElement(node) &&\n\t\t\t(node.type === 'bulleted-list' || node.type === 'numbered-list')\n\t\t) {\n\t\t\t// const [firstListItem] = Editor.nodes(editor, {\n\t\t\t// \tat: path,\n\t\t\t// \tmatch: (o, p) =>\n\t\t\t// \t\tElement.isElement(o) && o.type === 'list-item' && p.length - path.length === 1,\n\t\t\t// });\n\t\t\t// if (!firstListItem) {\n\t\t\t// \tTransforms.removeNodes(editor, {at: path, hanging: true});\n\t\t\t// \treturn;\n\t\t\t// }\n\t\t\tconst fixedUnwrappedListItemChildren = fixUnwrappedListItemChildren(editor, entry);\n\n\t\t\tif (fixedUnwrappedListItemChildren) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst fixedEmptyList = fixEmptyList(editor, entry);\n\n\t\t\tif (fixedEmptyList) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tnormalizeNode(entry);\n\t};\n\n\teditor.insertBreak = () => {\n\t\tconst lowestBlockEntry = getCurrentBlock(editor, 'lowest');\n\n\t\tif (lowestBlockEntry) {\n\t\t\tconst [node] = lowestBlockEntry;\n\n\t\t\tif (Element.isElement(node) && node.type === 'list-item-container') {\n\t\t\t\tconst leafNodeEntry = getSelectionLeaf(editor);\n\n\t\t\t\tif (leafNodeEntry) {\n\t\t\t\t\tconst [leafNode] = leafNodeEntry;\n\n\t\t\t\t\tif (leafNode.text.length) {\n\t\t\t\t\t\tinsertNewListItem(editor);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdecreaseListNesting(editor);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinsertBreak();\n\t};\n\n\teditor.deleteBackward = (unit) => {\n\t\tconst {selection} = editor;\n\n\t\tif (selection && Range.isCollapsed(selection)) {\n\t\t\tconst [listEntry] = Editor.nodes(editor, {\n\t\t\t\tmatch: (node, path) =>\n\t\t\t\t\t!Editor.isEditor(node) &&\n\t\t\t\t\tElement.isElement(node) &&\n\t\t\t\t\t['numbered-list', 'bulleted-list'].includes(node.type) &&\n\t\t\t\t\tpath.length === 1 &&\n\t\t\t\t\tpath[0] === 0,\n\t\t\t});\n\n\t\t\tif (listEntry) {\n\t\t\t\tconst [, listPath] = listEntry;\n\t\t\t\tconst text = Editor.string(editor, listPath);\n\n\t\t\t\tif (!text.length) {\n\t\t\t\t\tTransforms.removeNodes(editor, {\n\t\t\t\t\t\tat: listPath,\n\t\t\t\t\t\thanging: true,\n\t\t\t\t\t});\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdeleteBackward(unit);\n\t};\n\n\treturn editor;\n};\n\nfunction fixOrphanedListItems(editor: StencylEditor, entry: NodeEntry): boolean {\n\tconst parent = getParentNode(editor, entry);\n\n\tif (parent) {\n\t\tconst [parentNode, parentPath] = parent;\n\n\t\tif (\n\t\t\t!Element.isElement(parentNode) ||\n\t\t\t(parentNode.type !== 'bulleted-list' && parentNode.type !== 'numbered-list')\n\t\t) {\n\t\t\tTransforms.wrapNodes(\n\t\t\t\teditor,\n\t\t\t\t{\n\t\t\t\t\ttype: 'bulleted-list',\n\t\t\t\t\tchildren: [],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tat: parentPath,\n\t\t\t\t\tmatch: (o) => Element.isElement(o) && o.type === 'list-item',\n\t\t\t\t},\n\t\t\t);\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction fixUnwrappedListItemChildren(editor: StencylEditor, entry: NodeEntry): boolean {\n\tconst [node, path] = entry;\n\tconst validChildren: Array<StencylElementTypes> = [\n\t\t'numbered-list',\n\t\t'bulleted-list',\n\t\t'list-item-container',\n\t\t'table',\n\t];\n\n\tif (\n\t\t!Element.isElement(node) ||\n\t\t(node.type !== 'bulleted-list' && node.type !== 'numbered-list')\n\t) {\n\t\treturn false;\n\t}\n\n\tlet opsCount = 0;\n\n\tEditor.withoutNormalizing(editor, () => {\n\t\tfor (let i = 0; i < node.children.length; i++) {\n\t\t\tconst listItem = node.children[i];\n\n\t\t\tif (Element.isElement(listItem) && listItem.type === 'list-item') {\n\t\t\t\tfor (let j = 0; j < listItem.children.length; j++) {\n\t\t\t\t\tconst child = listItem.children[j];\n\t\t\t\t\tif (\n\t\t\t\t\t\tText.isText(child) ||\n\t\t\t\t\t\t(Element.isElement(child) && !validChildren.includes(child.type))\n\t\t\t\t\t) {\n\t\t\t\t\t\tTransforms.wrapNodes(\n\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'list-item-container',\n\t\t\t\t\t\t\t\tchildren: [],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{at: [...path, i, j]},\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\topsCount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn !!opsCount;\n}\n\nfunction fixEmptyList(editor: StencylEditor, entry: NodeEntry): boolean {\n\tconst [node, path] = entry;\n\n\tif (Element.isElement(node) && node.children.length === 1 && Text.isText(node.children[0])) {\n\t\tTransforms.removeNodes(editor, {\n\t\t\tat: path,\n\t\t\thanging: true,\n\t\t});\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nfunction insertNewListItem(editor: StencylEditor) {\n\tlet at: Location;\n\n\tif (!editor.selection) {\n\t\treturn;\n\t}\n\n\tat = editor.selection;\n\n\tif (Range.isRange(at)) {\n\t\tat = Editor.unhangRange(editor, at);\n\t}\n\n\tif (Range.isCollapsed(at)) {\n\t\tat = at.anchor;\n\t} else {\n\t\tconst [, end] = Range.edges(at);\n\t\tconst pointRef = Editor.pointRef(editor, end);\n\t\tTransforms.delete(editor, {at});\n\t\tat = pointRef.unref()!;\n\t}\n\n\tconst {listItemEntry} = getListEntries(editor);\n\n\tconst leafEntry = getSelectionLeaf(editor);\n\n\tif (leafEntry) {\n\t\tconst [, listItemPath] = listItemEntry;\n\n\t\tTransforms.splitNodes(editor, {\n\t\t\tat,\n\t\t\talways: true,\n\t\t});\n\n\t\tEditor.withoutNormalizing(editor, () => {\n\t\t\tlet focus = listItemPath;\n\t\t\tlet focusNext = listItemPath;\n\n\t\t\tif (editor.selection) {\n\t\t\t\tconst currentPath = editor.selection.focus.path;\n\t\t\t\tfocus = currentPath.slice(0, -1);\n\t\t\t\tfocusNext = getNextPath(currentPath);\n\t\t\t}\n\t\t\tTransforms.wrapNodes(editor, {\n\t\t\t\ttype: 'list-item',\n\t\t\t\tchildren: [],\n\t\t\t});\n\n\t\t\tconst nextNodeEntry = getNodeAt(editor, getNextPath(focus));\n\n\t\t\tif (nextNodeEntry?.length) {\n\t\t\t\tconst [nextNode, nextPath] = nextNodeEntry;\n\n\t\t\t\tif (\n\t\t\t\t\tElement.isElement(nextNode) &&\n\t\t\t\t\t(nextNode.type === 'bulleted-list' || nextNode.type === 'numbered-list')\n\t\t\t\t) {\n\t\t\t\t\tTransforms.moveNodes(editor, {\n\t\t\t\t\t\tat: nextPath,\n\t\t\t\t\t\tto: focusNext,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tTransforms.moveNodes(editor, {\n\t\t\t\tmatch: (node) => Element.isElement(node) && node.type === 'list-item',\n\t\t\t\tto: getNextPath(listItemPath),\n\t\t\t});\n\t\t});\n\t}\n}\n","import {Editor, Element, Point, Range} from 'slate';\n\nimport {StencylEditor} from '../../types';\n\nexport const withTable = (editor: StencylEditor) => {\n\tconst {deleteBackward, deleteForward} = editor;\n\n\teditor.deleteBackward = (unit) => {\n\t\tconst {selection} = editor;\n\n\t\tif (selection && Range.isCollapsed(selection)) {\n\t\t\tconst [tableCell] = Editor.nodes(editor, {\n\t\t\t\tmatch: (n) => !Editor.isEditor(n) && Element.isElement(n) && n.type === 'table-cell',\n\t\t\t});\n\n\t\t\tif (tableCell) {\n\t\t\t\tconst [, tableCellPath] = tableCell;\n\t\t\t\tconst start = Editor.start(editor, tableCellPath);\n\n\t\t\t\tif (Point.equals(selection.anchor, start)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdeleteBackward(unit);\n\t};\n\n\teditor.deleteForward = (unit) => {\n\t\tconst {selection} = editor;\n\n\t\tif (selection && Range.isCollapsed(selection)) {\n\t\t\tconst [tableCell] = Editor.nodes(editor, {\n\t\t\t\tmatch: (n) => !Editor.isEditor(n) && Element.isElement(n) && n.type === 'table-cell',\n\t\t\t});\n\n\t\t\tif (tableCell) {\n\t\t\t\tconst [, tableCellPath] = tableCell;\n\t\t\t\tconst end = Editor.end(editor, tableCellPath);\n\n\t\t\t\tif (Point.equals(selection.anchor, end)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdeleteForward(unit);\n\t};\n\n\treturn editor;\n};\n","import {Element, Path, Transforms} from 'slate';\nimport {getEmptyTextNode, getLastNode} from './utils';\n\nimport {StencylEditor} from '../../types';\n\nexport const withTrailingBlock = (editor: StencylEditor) => {\n\tconst {normalizeNode} = editor;\n\n\teditor.normalizeNode = ([currentNode, currentPath]) => {\n\t\tif (!currentPath.length) {\n\t\t\tconst lastChild = getLastNode(editor, 0);\n\n\t\t\tconst lastChildNode = lastChild?.[0];\n\n\t\t\tif (\n\t\t\t\t!lastChildNode ||\n\t\t\t\t(Element.isElement(lastChildNode) && lastChildNode.type !== 'paragraph')\n\t\t\t) {\n\t\t\t\tconst at = lastChild ? Path.next(lastChild[1]) : [0];\n\n\t\t\t\tTransforms.insertNodes(\n\t\t\t\t\teditor,\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'paragraph',\n\t\t\t\t\t\tchildren: getEmptyTextNode(),\n\t\t\t\t\t},\n\t\t\t\t\t{at},\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\treturn normalizeNode([currentNode, currentPath]);\n\t};\n\n\treturn editor;\n};\n","import {Descendant, createEditor} from 'slate';\nimport React, {\n\tReactNode,\n\tRef,\n\tforwardRef,\n\tuseImperativeHandle,\n\tuseLayoutEffect,\n\tuseMemo,\n\tuseRef,\n\tuseState,\n} from 'react';\nimport {Slate, withReact} from 'slate-react';\n\nimport {Canvas} from './modules/canvas';\nimport {Sidebar} from './modules/sidebar';\nimport {Toolbar} from './modules/toolbar';\nimport classNames from 'classnames';\nimport css from './style.module.css';\nimport {getEmptyTextNode} from '../../packages/common/utils';\nimport {pipeline} from '../../utils';\nimport {withEditable} from '../../packages/editable/plugin';\nimport {withHTMLDeserializer} from '../../packages/deserialize';\nimport {withHistory} from 'slate-history';\nimport {withImage} from '../../packages/image/plugin';\nimport {withLink} from '../../packages/link/plugin';\nimport {withLists} from '../../packages/lists/plugin';\nimport {withTable} from '../../packages/table/plugin';\nimport {withTrailingBlock} from '../../packages/common/plugin';\n\ntype EditorProps = {\n\tchildren?: ReactNode;\n\tinitialData?: Array<Descendant>;\n};\n\nexport type EditorRef = {\n\tgetNodes: () => Descendant[];\n};\n\nconst BaseEditor = ({children, initialData}: EditorProps, ref: Ref<EditorRef>) => {\n\tconst bodyRef = useRef<HTMLDivElement>(null);\n\tconst editor = useMemo(\n\t\t() =>\n\t\t\tpipeline([\n\t\t\t\tcreateEditor,\n\t\t\t\twithHistory,\n\t\t\t\twithReact,\n\t\t\t\twithLink,\n\t\t\t\twithImage,\n\t\t\t\twithEditable,\n\t\t\t\twithLists,\n\t\t\t\twithTable,\n\t\t\t\twithTrailingBlock,\n\t\t\t\twithHTMLDeserializer,\n\t\t\t])(),\n\t\t[],\n\t);\n\tconst [editorState, setEditorState] = useState<Descendant[]>(\n\t\tinitialData ?? [\n\t\t\t{\n\t\t\t\ttype: 'paragraph',\n\t\t\t\tchildren: getEmptyTextNode(),\n\t\t\t},\n\t\t],\n\t);\n\tconst [sidebarTop, setSidebarTop] = useState<string>();\n\n\tuseLayoutEffect(() => {\n\t\tsetSidebarTop(`calc(20px + ${bodyRef.current?.getBoundingClientRect().top ?? 0}px)`);\n\t}, []);\n\n\tuseImperativeHandle(ref, () => ({\n\t\tgetNodes: () => editor.children,\n\t}));\n\n\treturn (\n\t\t<div className='bg-gray-200 min-h-screen'>\n\t\t\t<Slate editor={editor} value={editorState} onChange={setEditorState}>\n\t\t\t\t<div className='sticky top-0 w-full z-1 shadow-1'>\n\t\t\t\t\t{children}\n\t\t\t\t\t<Toolbar />\n\t\t\t\t</div>\n\t\t\t\t<div ref={bodyRef} className={classNames(css.body, 'flex justify-center')}>\n\t\t\t\t\t<div className='flex-1' />\n\t\t\t\t\t<Canvas />\n\t\t\t\t\t<div className='flex-1 px-20'>\n\t\t\t\t\t\t<div className={classNames(css.sidebar, 'sticky')} style={{top: sidebarTop}}>\n\t\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Slate>\n\t\t\t<div id='stencyl-portal' />\n\t\t</div>\n\t);\n};\n\nexport type Editor = EditorRef;\n\nexport const Editor = forwardRef(BaseEditor);\n","import {\n\tEditableElement,\n\tStencylDataset,\n\tStencylDisplayCondition,\n\tStencylElement,\n\tStencylElementTypes,\n} from '../../../types';\nimport {formatDate, lastItem, toAlphabetNumeral, toRomanNumeral} from '../../../utils';\n\nimport {Descendant} from 'slate';\nimport {Font} from '@react-pdf/renderer';\n\nexport function getValueFromDataset(dataset: StencylDataset, element: EditableElement) {\n\tconst data = dataset[element.id];\n\n\tif (!data) {\n\t\treturn null;\n\t}\n\n\tif (element.dataType === 'date' || element.dataType === 'time') {\n\t\treturn formatDate(data, element.dateTimeFormat) ?? '';\n\t}\n\n\tif (element.dataType === 'options' || element.dataType === 'radio') {\n\t\treturn element.options.find((o) => o.id === data)?.label ?? '';\n\t}\n\n\treturn data;\n}\n\nexport function isStencylElement(value: any): value is StencylElement {\n\treturn !!value?.type;\n}\n\nexport function shouldRenderByCondition(\n\tdataset: StencylDataset,\n\tcondition?: StencylDisplayCondition | Array<StencylDisplayCondition>,\n) {\n\tconst conditions = Array.isArray(condition) ? condition : condition ? [condition] : [];\n\n\tif (!conditions.length) {\n\t\treturn true;\n\t}\n\n\treturn !conditions.some((o) => dataset[o.parent] !== o.value);\n}\n\nexport function getMatchingEditableElement(\n\tnodes: Array<Descendant>,\n\tlinkId: string,\n): EditableElement | undefined {\n\tconst match = nodes.find(\n\t\t(o) => isStencylElement(o) && o.type === 'editable' && o.id === linkId,\n\t) as EditableElement | undefined;\n\n\treturn (\n\t\tmatch ??\n\t\tgetMatchingEditableElement(\n\t\t\tnodes\n\t\t\t\t.filter(isStencylElement)\n\t\t\t\t.map((o) => o.children)\n\t\t\t\t.flat(),\n\t\t\tlinkId,\n\t\t)\n\t);\n}\n\nexport function* getEditableElements(\n\tnodes: Array<Descendant>,\n): Generator<EditableElement, void, EditableElement> {\n\tconst matches = nodes.filter(\n\t\t(o) => isStencylElement(o) && o.type === 'editable' && !o.linkId,\n\t) as Array<EditableElement>;\n\n\tfor (const match of matches) {\n\t\tyield match;\n\t}\n\n\tconst children = nodes\n\t\t.filter(isStencylElement)\n\t\t.map((o) => o.children)\n\t\t.flat();\n\n\tif (children.length) {\n\t\tyield* getEditableElements(children);\n\t}\n}\n\nexport function getLevelByElementType(element: Descendant, level?: number) {\n\tif (\n\t\tisStencylElement(element) &&\n\t\t(element.type === 'bulleted-list' || element.type === 'numbered-list')\n\t) {\n\t\treturn (level ?? -1) + 1;\n\t}\n\n\treturn level;\n}\n\nexport const BULLETS = ['•', '◦', '▪'];\n\nfunction getOrderedListSymbol(level: number, index: number) {\n\tswitch (level) {\n\t\tcase 0:\n\t\t\treturn `${index + 1}.`;\n\t\tcase 1:\n\t\t\treturn `${toRomanNumeral(index + 1).toLowerCase()}.`;\n\t\tdefault:\n\t\t\treturn `${toAlphabetNumeral(index + 1)}.`;\n\t}\n}\n\nexport function getListItemSymbol(\n\tpath: Array<number>,\n\tparentType?: StencylElementTypes,\n\tlevel?: number,\n) {\n\tif (!parentType || (parentType !== 'bulleted-list' && parentType !== 'numbered-list')) {\n\t\treturn '';\n\t}\n\n\tlevel = level ?? 0;\n\tconst index = lastItem(path);\n\n\tif (parentType === 'bulleted-list') {\n\t\treturn BULLETS[level] ?? lastItem(BULLETS);\n\t}\n\n\treturn getOrderedListSymbol(level, index);\n}\n\nexport const registerPdfFonts = Font.register;\n","import {StencylDataset} from '../../../types';\nimport {createHookState} from '../../../packages/hookstate';\n\nexport const previewDatasetState = createHookState<StencylDataset>({});\n","import {HookState} from './types';\n\nexport function createHookState<T>(initialValue: T): HookState<T> {\n\tconst SUBSCRIBERS: Array<(state: T) => void> = [];\n\tlet STATE: T = initialValue;\n\n\tfunction get() {\n\t\treturn STATE;\n\t}\n\n\tfunction set(value: T | ((state: T) => T)) {\n\t\tSTATE = value instanceof Function ? value(STATE) : value;\n\n\t\tfor (const subscriber of SUBSCRIBERS) {\n\t\t\tsubscriber(STATE);\n\t\t}\n\t}\n\n\tfunction subscribe(callback: (state: T) => void) {\n\t\tSUBSCRIBERS.push(callback);\n\n\t\treturn () => {\n\t\t\tunsubscribe(callback);\n\t\t};\n\t}\n\n\tfunction unsubscribe(callback: (state: T) => void) {\n\t\tconst index = SUBSCRIBERS.indexOf(callback);\n\n\t\tif (!~index) {\n\t\t\treturn;\n\t\t}\n\n\t\tSUBSCRIBERS.splice(index, 1);\n\t}\n\n\tfunction unsubscribeAll() {\n\t\tSUBSCRIBERS.length = 0;\n\t}\n\n\treturn {\n\t\tget,\n\t\tset,\n\t\tsubscribe,\n\t\tunsubscribe,\n\t\tunsubscribeAll,\n\t};\n}\n","import {useEffect, useMemo, useState} from 'react';\n\nimport {HookState} from './types';\n\nexport function useHookState<S>(hookState: HookState<S>) {\n\tconst [state, setState] = useState(hookState.get());\n\n\tuseEffect(() => {\n\t\tconst unsubscribe = hookState.subscribe(setState);\n\n\t\treturn () => {\n\t\t\tunsubscribe();\n\t\t};\n\t}, []);\n\n\treturn useMemo(() => [state, hookState.set] as const, [state]);\n}\n\nexport function useHookStateStatic<S>(hookState: HookState<S>) {\n\treturn [hookState.get(), hookState.set] as const;\n}\n","import React, {FC} from 'react';\n\nimport {RenderLeafProps} from 'slate-react';\nimport {previewDatasetState} from '../../../state';\nimport {shouldRenderByCondition} from '../../../utils';\nimport {useHookState} from '../../../../../packages/hookstate/hooks';\n\nexport const Leaf: FC<RenderLeafProps> = ({attributes, children, leaf}) => {\n\tconst [dataset] = useHookState(previewDatasetState);\n\tconst shouldRender = shouldRenderByCondition(dataset, leaf.condition);\n\n\tif (!shouldRender) {\n\t\treturn null;\n\t}\n\n\tif (leaf.bold) {\n\t\tchildren = <strong>{children}</strong>;\n\t}\n\n\tif (leaf.code) {\n\t\tchildren = <code>{children}</code>;\n\t}\n\n\tif (leaf.italic) {\n\t\tchildren = <em>{children}</em>;\n\t}\n\n\tif (leaf.underline) {\n\t\tchildren = <u>{children}</u>;\n\t}\n\n\tif (leaf.strikethrough) {\n\t\tchildren = <del>{children}</del>;\n\t}\n\n\treturn (\n\t\t<span {...attributes} style={{color: leaf.color}}>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import {generateUUID, isObjectEqual} from '../../utils';\n\nimport {Canvas} from '../preview/pdf/modules/canvas';\nimport {Descendant} from 'slate';\nimport React from 'react';\nimport {StencylDataset} from '../..';\nimport {pdf} from '@react-pdf/renderer';\nimport {previewDatasetState} from '../preview/state';\nimport {saveAs} from 'file-saver';\n\nlet CACHED_DATASET: any;\nlet CACHED_BLOB: Blob;\n\ntype PDFGenerationOptions = {\n\tdataset: StencylDataset;\n\tnodes: Descendant[];\n\tauthor?: string;\n\tenableCache?: boolean;\n\tfontFamily?: string;\n\ttitle?: string;\n};\n\nfunction getRenderedDocument(options: PDFGenerationOptions) {\n\treturn (\n\t\t<Canvas\n\t\t\tauthor={options.author}\n\t\t\ttitle={options.title}\n\t\t\tfontFamily={options.fontFamily}\n\t\t\tnodes={options.nodes}\n\t\t/>\n\t);\n}\n\nexport async function generatePDFAsync(options: PDFGenerationOptions) {\n\tconst {dataset} = options;\n\tconst useCache = isObjectEqual(dataset, CACHED_DATASET);\n\n\tif (!useCache) {\n\t\tconst renderedDocument = getRenderedDocument(options);\n\t\tpreviewDatasetState.set(dataset);\n\n\t\tif (options.enableCache) {\n\t\t\tCACHED_DATASET = dataset;\n\t\t}\n\n\t\tCACHED_BLOB = await pdf(renderedDocument).toBlob();\n\t}\n\n\tif (CACHED_BLOB) {\n\t\tsaveAs(CACHED_BLOB, `${options.title ?? generateUUID()}.pdf`);\n\t}\n}\n","import React, {FC} from 'react';\nimport {getValueFromDataset, shouldRenderByCondition} from '../../../utils';\n\nimport {Leaf} from '../leaf';\nimport {RenderElementProps} from 'slate-react';\nimport classNames from 'classnames';\nimport {getPlaceholderImage} from '../../../../../utils';\nimport {previewDatasetState} from '../../../state';\nimport {useHookState} from '../../../../../packages/hookstate/hooks';\n\nexport const Editable: FC<RenderElementProps> = ({element, children, attributes}) => {\n\tconst [dataset] = useHookState(previewDatasetState);\n\n\tif (\n\t\telement.type !== 'editable' ||\n\t\telement.isInvisible ||\n\t\t!shouldRenderByCondition(dataset, element.marks.condition)\n\t) {\n\t\treturn null;\n\t}\n\n\tconst value = getValueFromDataset(dataset, element);\n\n\tif (value) {\n\t\treturn element.dataType === 'image' ? (\n\t\t\t<span {...attributes}>\n\t\t\t\t{children}\n\t\t\t\t<img\n\t\t\t\t\tclassName={classNames('inline-block max-w-full rounded-default align-bottom')}\n\t\t\t\t\tsrc={value}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: element.width,\n\t\t\t\t\t\theight: element.height,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</span>\n\t\t) : (\n\t\t\t<Leaf\n\t\t\t\ttext={{text: value}}\n\t\t\t\tattributes={{'data-slate-leaf': true}}\n\t\t\t\tleaf={{\n\t\t\t\t\ttext: value,\n\t\t\t\t\t...element.marks,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{value}\n\t\t\t</Leaf>\n\t\t);\n\t}\n\n\tif (element.dataType === 'image') {\n\t\treturn (\n\t\t\t<span {...attributes}>\n\t\t\t\t{children}\n\t\t\t\t<img\n\t\t\t\t\tclassName={classNames('inline-block max-w-full rounded-default align-bottom')}\n\t\t\t\t\tsrc={getPlaceholderImage(element.width, element.height)}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: element.width,\n\t\t\t\t\t\theight: element.height,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</span>\n\t\t);\n\t}\n\n\treturn (\n\t\t<span\n\t\t\t{...attributes}\n\t\t\tclassName={classNames(\n\t\t\t\t'inline-block text-white font-medium px-4 rounded-default mx-1 bg-blue-500',\n\t\t\t)}\n\t\t\tstyle={{fontSize: '0.82em'}}\n\t\t>\n\t\t\t{element.defaultValue}\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import React, {FC} from 'react';\n\nimport {RenderElementProps} from 'slate-react';\nimport classNames from 'classnames';\n\nexport const Image: FC<RenderElementProps> = ({element, attributes, children}) => {\n\tif (element.type === 'image') {\n\t\treturn (\n\t\t\t<span {...attributes}>\n\t\t\t\t{children}\n\t\t\t\t<img\n\t\t\t\t\tclassName={classNames('inline-block max-w-full rounded-default align-bottom')}\n\t\t\t\t\tsrc={element.url}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: element.width,\n\t\t\t\t\t\theight: element.height,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</span>\n\t\t);\n\t}\n\n\treturn null;\n};\n","import {List, ListItem, ListItemContainer} from '../../../../../packages/lists';\nimport React, {FC} from 'react';\nimport {Table, TableCell, TableRow} from '../../../../../packages/table';\n\nimport {Blockquote} from '../../../../../packages/blockquote';\nimport {Codeblock} from '../../../../../packages/codeblock';\nimport {Editable} from '../editable';\nimport {Headings} from '../../../../../packages/headings';\nimport {Image} from '../image';\nimport {Link} from '../../../../../packages/link';\nimport {Paragraph} from '../../../../../packages/paragraph';\nimport {RenderElementProps} from 'slate-react';\n\nexport const DomPreviewElement: FC<RenderElementProps> = (props) => {\n\tswitch (props.element.type) {\n\t\tcase 'block-quote':\n\t\t\treturn <Blockquote {...props} />;\n\t\tcase 'bulleted-list':\n\t\tcase 'numbered-list':\n\t\t\treturn <List {...props} />;\n\t\tcase 'code-block':\n\t\t\treturn <Codeblock {...props} />;\n\t\tcase 'heading-one':\n\t\tcase 'heading-two':\n\t\tcase 'heading-three':\n\t\tcase 'heading-four':\n\t\tcase 'heading-five':\n\t\tcase 'heading-six':\n\t\t\treturn <Headings {...props} />;\n\t\tcase 'image':\n\t\t\treturn <Image {...props} />;\n\t\tcase 'link':\n\t\t\treturn <Link {...props} />;\n\t\tcase 'list-item':\n\t\t\treturn <ListItem {...props} />;\n\t\tcase 'list-item-container':\n\t\t\treturn <ListItemContainer {...props} />;\n\t\tcase 'paragraph':\n\t\t\treturn <Paragraph {...props} />;\n\t\tcase 'table':\n\t\t\treturn <Table {...props} />;\n\t\tcase 'table-cell':\n\t\t\treturn <TableCell {...props} />;\n\t\tcase 'table-row':\n\t\t\treturn <TableRow {...props} />;\n\t\tcase 'editable':\n\t\t\treturn <Editable {...props} />;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n","import React, {FC} from 'react';\nimport {getMatchingEditableElement, isStencylElement} from '../../../utils';\n\nimport {Descendant} from 'slate';\nimport {DomPreviewElement} from '../element';\nimport {Leaf} from '../leaf';\n\ntype SliceProps = {\n\tnode: Descendant;\n\tnodes: Descendant[];\n};\n\nexport const Slice: FC<SliceProps> = ({node, nodes}) => {\n\tif (!isStencylElement(node)) {\n\t\treturn (\n\t\t\t<Leaf text={{text: node.text}} leaf={node} attributes={{'data-slate-leaf': true}}>\n\t\t\t\t{node.text}\n\t\t\t</Leaf>\n\t\t);\n\t}\n\n\tconst element =\n\t\tnode.type === 'editable' && node.linkId ? getMatchingEditableElement(nodes, node.linkId) : node;\n\n\tif (!element) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<DomPreviewElement\n\t\t\telement={element}\n\t\t\tattributes={{\n\t\t\t\t'data-slate-node': 'element',\n\t\t\t\tref: null,\n\t\t\t}}\n\t\t>\n\t\t\t{(element as any).children.map((o, i) => (\n\t\t\t\t<Slice key={i} node={o} nodes={nodes} />\n\t\t\t))}\n\t\t</DomPreviewElement>\n\t);\n};\n","import React, {FC, memo} from 'react';\n\nimport {Descendant} from 'slate';\nimport {Slice} from '../slice';\nimport classNames from 'classnames';\nimport constants from '../../../../../constants';\nimport css from './style.module.css';\n\ntype CanvasProps = {\n\tclassName?: string;\n\tnodes: Array<Descendant>;\n};\n\nconst canvasWidthStyle = {\n\twidth: constants.paperSizes.a4.width,\n\tminHeight: constants.paperSizes.a4.height,\n};\n\nconst BaseCanvas: FC<CanvasProps> = ({className, nodes}) => {\n\treturn (\n\t\t<div className={classNames(css.container, className)} style={canvasWidthStyle}>\n\t\t\t{nodes.map((node, i) => (\n\t\t\t\t<Slice key={i} node={node} nodes={nodes} />\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport const Canvas = memo(BaseCanvas);\n","import {StyleSheet} from '@react-pdf/renderer';\nimport {THEME_COLORS} from '../../../../constants/colors';\n\nexport const styles = StyleSheet.create({\n\tpage: {\n\t\tpaddingTop: 35,\n\t\tpaddingHorizontal: 35,\n\t\tpaddingBottom: 65,\n\t\tfontSize: 12,\n\t},\n\tblockquote: {\n\t\tmarginLeft: 40,\n\t},\n\tlist: {\n\t\tpaddingLeft: 24,\n\t},\n\tlistItem: {},\n\tlistItemSymbol: {\n\t\tposition: 'absolute',\n\t\tleft: -12,\n\t},\n\tpre: {\n\t\tbackgroundColor: THEME_COLORS.gray[100],\n\t\tborderRadius: 5,\n\t\tpadding: 12,\n\t},\n\tcode: {\n\t\tfontFamily: 'monospace',\n\t},\n\th1: {\n\t\tfontSize: 42,\n\t\tlineHeight: 57 / 42,\n\t},\n\th2: {\n\t\tfontSize: 32,\n\t\tlineHeight: 42 / 32,\n\t},\n\th3: {\n\t\tfontSize: 20,\n\t\tlineHeight: 25 / 20,\n\t},\n\th4: {\n\t\tfontSize: 18,\n\t\tlineHeight: 23 / 18,\n\t},\n\th5: {\n\t\tfontSize: 16,\n\t\tlineHeight: 20 / 16,\n\t},\n\th6: {\n\t\tfontSize: 14,\n\t\tlineHeight: 18 / 14,\n\t},\n\timage: {\n\t\tmaxWidth: '100%',\n\t\tborderRadius: 5,\n\t\talignSelf: 'baseline',\n\t},\n\tlink: {\n\t\ttextDecoration: 'underline',\n\t},\n\ttableRow: {\n\t\tflexDirection: 'row',\n\t\talignItems: 'stretch',\n\t},\n\ttableCell: {\n\t\tborderStyle: 'solid',\n\t\tpadding: 2,\n\t},\n\tleaf: {\n\t\tlineHeight: 1.25,\n\t},\n});\n","import React, {FC, useRef} from 'react';\n\nimport {PdfRenderLeafProps} from '../../types';\nimport {Style} from '@react-pdf/types';\nimport {Text} from '@react-pdf/renderer';\nimport {previewDatasetState} from '../../../state';\nimport {shouldRenderByCondition} from '../../../utils';\nimport {styles} from '../../styles';\nimport {useHookStateStatic} from '../../../../../packages/hookstate/hooks';\n\nexport const Leaf: FC<PdfRenderLeafProps> = ({children, leaf}) => {\n\tconst [dataset] = useHookStateStatic(previewDatasetState);\n\tconst shouldRender = shouldRenderByCondition(dataset, leaf.condition);\n\tconst style = useRef({} as Style).current;\n\n\tif (!shouldRender) {\n\t\treturn null;\n\t}\n\n\tif (leaf.bold) {\n\t\tstyle.fontWeight = 'bold';\n\t}\n\n\tif (leaf.code) {\n\t\tstyle.fontFamily = 'monospace';\n\t}\n\n\tif (leaf.italic) {\n\t\tstyle.fontStyle = 'italic';\n\t}\n\n\tif (leaf.underline) {\n\t\tstyle.textDecoration = 'underline';\n\t}\n\n\tif (leaf.strikethrough) {\n\t\tstyle.textDecoration = 'line-through';\n\t}\n\n\treturn <Text style={[styles.leaf, style, {color: leaf.color}]}>{children}</Text>;\n};\n","import React, {FC, useMemo} from 'react';\nimport {Text, View} from '@react-pdf/renderer';\n\nimport {PdfRenderElementProps} from '../../types';\nimport {Style} from '@react-pdf/types';\nimport {getListItemSymbol} from '../../../utils';\nimport {styles} from '../../styles';\n\nexport const List: FC<PdfRenderElementProps> = ({element, children}) => {\n\tconst style = useMemo(() => {\n\t\tconst properties: Style = {};\n\n\t\tif (element.type === 'numbered-list' || element.type === 'bulleted-list') {\n\t\t\tif (element.indentation) {\n\t\t\t\tproperties.marginLeft = `${element.indentation}%`;\n\t\t\t}\n\t\t}\n\n\t\treturn properties;\n\t}, [element]);\n\n\tif (element.type === 'bulleted-list') {\n\t\treturn <View style={[styles.list, style]}>{children}</View>;\n\t}\n\n\tif (element.type === 'numbered-list') {\n\t\treturn <View style={[styles.list, style]}>{children}</View>;\n\t}\n\n\treturn null;\n};\n\nexport const ListItem: FC<PdfRenderElementProps> = ({\n\telement,\n\tchildren,\n\tlevel,\n\tpath,\n\tparentType,\n}) => {\n\tif (element.type === 'list-item') {\n\t\treturn (\n\t\t\t<View style={styles.listItem}>\n\t\t\t\t<Text style={styles.listItemSymbol}>{getListItemSymbol(path, parentType, level)}</Text>\n\t\t\t\t{children}\n\t\t\t</View>\n\t\t);\n\t}\n\n\treturn null;\n};\n\nexport const ListItemContainer: FC<PdfRenderElementProps> = ({element, children}) => {\n\tif (element.type === 'list-item-container') {\n\t\treturn <View>{children}</View>;\n\t}\n\n\treturn null;\n};\n","import React, {FC} from 'react';\n\nimport {PdfRenderElementProps} from '../../types';\nimport {View} from '@react-pdf/renderer';\nimport colors from '../../../../../constants/colors';\nimport {lastItem} from '../../../../../utils';\nimport {styles} from '../../styles';\n\nexport const TableCell: FC<PdfRenderElementProps> = ({element, children, path}) => {\n\tif (element.type === 'table-cell') {\n\t\treturn (\n\t\t\t<View\n\t\t\t\tstyle={[\n\t\t\t\t\tstyles.tableCell,\n\t\t\t\t\t{\n\t\t\t\t\t\theight: element.height,\n\t\t\t\t\t\tminWidth: element.width,\n\t\t\t\t\t},\n\t\t\t\t\telement.borderColor !== colors.transparent\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tborderWidth: element.borderWidth ?? 1,\n\t\t\t\t\t\t\t\tborderTopWidth: lastItem(path, 1) ? 0 : undefined,\n\t\t\t\t\t\t\t\tborderLeftWidth: lastItem(path) ? 0 : undefined,\n\t\t\t\t\t\t\t\tborderColor: element.borderColor ?? colors.black,\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: {},\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</View>\n\t\t);\n\t}\n\n\treturn null;\n};\n\nexport const TableRow: FC<PdfRenderElementProps> = ({element, children}) => {\n\tif (element.type === 'table-row') {\n\t\treturn <View style={styles.tableRow}>{children}</View>;\n\t}\n\n\treturn null;\n};\n\nexport const Table: FC<PdfRenderElementProps> = ({element, children}) => {\n\tif (element.type === 'table') {\n\t\treturn <View>{children}</View>;\n\t}\n\n\treturn null;\n};\n","import React, {FC, useMemo} from 'react';\n\nimport {PdfRenderElementProps} from '../../types';\nimport {Style} from '@react-pdf/types';\nimport {View} from '@react-pdf/renderer';\nimport {styles} from '../../styles';\n\nexport const Blockquote: FC<PdfRenderElementProps> = ({element, children}) => {\n\tconst style = useMemo(() => {\n\t\tconst properties: Style = {};\n\n\t\tif (element.type === 'block-quote') {\n\t\t\tif (element.indentation) {\n\t\t\t\tproperties.marginLeft = `${element.indentation}%`;\n\t\t\t}\n\n\t\t\tif (element.alignment) {\n\t\t\t\tproperties.textAlign = element.alignment;\n\t\t\t}\n\t\t}\n\n\t\treturn properties;\n\t}, [element]);\n\n\treturn <View style={[styles.blockquote, style]}>{children}</View>;\n};\n","import React, {FC, useMemo} from 'react';\n\nimport {PdfRenderElementProps} from '../../types';\nimport {Style} from '@react-pdf/types';\nimport {View} from '@react-pdf/renderer';\nimport {styles} from '../../styles';\n\nexport const Codeblock: FC<PdfRenderElementProps> = ({element, children}) => {\n\tconst style = useMemo(() => {\n\t\tconst properties: Style = {};\n\n\t\tif (element.type === 'code-block') {\n\t\t\tif (element.indentation) {\n\t\t\t\tproperties.marginLeft = `${element.indentation}%`;\n\t\t\t}\n\n\t\t\tif (element.alignment) {\n\t\t\t\tproperties.textAlign = element.alignment;\n\t\t\t}\n\t\t}\n\n\t\treturn properties;\n\t}, [element]);\n\n\treturn (\n\t\t<View style={[styles.pre, style]}>\n\t\t\t<View style={styles.code}>{children}</View>\n\t\t</View>\n\t);\n};\n","import React, {FC} from 'react';\nimport {getValueFromDataset, shouldRenderByCondition} from '../../../utils';\n\nimport {Leaf} from '../leaf';\nimport {Image as PdfImage} from '@react-pdf/renderer';\nimport {PdfRenderElementProps} from '../../types';\nimport {getPlaceholderImage} from '../../../../../utils';\nimport {previewDatasetState} from '../../../state';\nimport {styles} from '../../styles';\nimport {useHookState} from '../../../../../packages/hookstate/hooks';\n\nexport const Editable: FC<PdfRenderElementProps> = ({element}) => {\n\tconst [dataset] = useHookState(previewDatasetState);\n\n\tif (\n\t\telement.type !== 'editable' ||\n\t\telement.isInvisible ||\n\t\t!shouldRenderByCondition(dataset, element.marks.condition)\n\t) {\n\t\treturn null;\n\t}\n\n\tconst value = getValueFromDataset(dataset, element);\n\n\tif (element.dataType === 'image') {\n\t\treturn (\n\t\t\t<PdfImage\n\t\t\t\tsrc={value ?? getPlaceholderImage(element.width, element.height)}\n\t\t\t\tstyle={[\n\t\t\t\t\tstyles.image,\n\t\t\t\t\t{\n\t\t\t\t\t\twidth: element.width,\n\t\t\t\t\t\theight: element.height,\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Leaf\n\t\t\ttext={{text: value ?? element.defaultValue}}\n\t\t\tattributes={{'data-slate-leaf': true}}\n\t\t\tleaf={{\n\t\t\t\ttext: value ?? element.defaultValue,\n\t\t\t\t...element.marks,\n\t\t\t}}\n\t\t>\n\t\t\t{value}\n\t\t</Leaf>\n\t);\n};\n","import React, {FC, useMemo} from 'react';\n\nimport {PdfRenderElementProps} from '../../types';\nimport {Style} from '@react-pdf/types';\nimport {Text} from '@react-pdf/renderer';\nimport {styles} from '../../styles';\n\nexport const Headings: FC<PdfRenderElementProps> = ({element, children}) => {\n\tconst style = useMemo(() => {\n\t\tconst properties: Style = {};\n\n\t\tif (\n\t\t\telement.type === 'heading-one' ||\n\t\t\telement.type === 'heading-two' ||\n\t\t\telement.type === 'heading-three' ||\n\t\t\telement.type === 'heading-four' ||\n\t\t\telement.type === 'heading-five' ||\n\t\t\telement.type === 'heading-six'\n\t\t) {\n\t\t\tif (element.indentation) {\n\t\t\t\tproperties.marginLeft = `${element.indentation}%`;\n\t\t\t}\n\n\t\t\tif (element.alignment) {\n\t\t\t\tproperties.textAlign = element.alignment;\n\t\t\t}\n\t\t}\n\n\t\treturn properties;\n\t}, [element]);\n\n\tswitch (element.type) {\n\t\tcase 'heading-one':\n\t\t\treturn <Text style={[styles.h1, style]}>{children}</Text>;\n\t\tcase 'heading-two':\n\t\t\treturn <Text style={[styles.h2, style]}>{children}</Text>;\n\t\tcase 'heading-three':\n\t\t\treturn <Text style={[styles.h3, style]}>{children}</Text>;\n\t\tcase 'heading-four':\n\t\t\treturn <Text style={[styles.h4, style]}>{children}</Text>;\n\t\tcase 'heading-five':\n\t\t\treturn <Text style={[styles.h5, style]}>{children}</Text>;\n\t\tcase 'heading-six':\n\t\t\treturn <Text style={[styles.h6, style]}>{children}</Text>;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n","import React, {FC} from 'react';\n\nimport {Image as PdfImage} from '@react-pdf/renderer';\nimport {PdfRenderElementProps} from '../../types';\nimport {styles} from '../../styles';\n\nexport const Image: FC<PdfRenderElementProps> = ({element}) => {\n\tif (element.type === 'image') {\n\t\treturn (\n\t\t\t<PdfImage\n\t\t\t\tsrc={element.url}\n\t\t\t\tstyle={[\n\t\t\t\t\tstyles.image,\n\t\t\t\t\t{\n\t\t\t\t\t\twidth: element.width,\n\t\t\t\t\t\theight: element.height,\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn null;\n};\n","import React, {FC} from 'react';\n\nimport {Link as PdfLink} from '@react-pdf/renderer';\nimport {PdfRenderElementProps} from '../../types';\nimport {styles} from '../../styles';\n\nexport const Link: FC<PdfRenderElementProps> = ({element, children}) => {\n\treturn (\n\t\t<PdfLink style={styles.link} src={element.type === 'link' ? element.url : ''}>\n\t\t\t{children}\n\t\t</PdfLink>\n\t);\n};\n","import React, {FC, useMemo} from 'react';\n\nimport {PdfRenderElementProps} from '../../types';\nimport {Style} from '@react-pdf/types';\nimport {Text} from '@react-pdf/renderer';\n\nexport const Paragraph: FC<PdfRenderElementProps> = ({element, children}) => {\n\tconst style = useMemo(() => {\n\t\tconst properties: Style = {};\n\n\t\tif (element.type === 'paragraph') {\n\t\t\tif (element.indentation) {\n\t\t\t\tproperties.marginLeft = `${element.indentation}%`;\n\t\t\t}\n\n\t\t\tif (element.alignment) {\n\t\t\t\tproperties.textAlign = element.alignment;\n\t\t\t}\n\t\t}\n\n\t\treturn properties;\n\t}, [element]);\n\n\treturn <Text style={style}>{children}</Text>;\n};\n","import {List, ListItem, ListItemContainer} from '../lists';\nimport React, {FC} from 'react';\nimport {Table, TableCell, TableRow} from '../table';\n\nimport {Blockquote} from '../blockquote';\nimport {Codeblock} from '../codeblock';\nimport {Editable} from '../editable';\nimport {Headings} from '../headings';\nimport {Image} from '../image';\nimport {Link} from '../link';\nimport {Paragraph} from '../paragraph';\nimport {PdfRenderElementProps} from '../../types';\n\nexport const PdfPreviewElement: FC<PdfRenderElementProps> = (props) => {\n\tswitch (props.element.type) {\n\t\tcase 'block-quote':\n\t\t\treturn <Blockquote {...props} />;\n\t\tcase 'bulleted-list':\n\t\tcase 'numbered-list':\n\t\t\treturn <List {...props} />;\n\t\tcase 'code-block':\n\t\t\treturn <Codeblock {...props} />;\n\t\tcase 'heading-one':\n\t\tcase 'heading-two':\n\t\tcase 'heading-three':\n\t\tcase 'heading-four':\n\t\tcase 'heading-five':\n\t\tcase 'heading-six':\n\t\t\treturn <Headings {...props} />;\n\t\tcase 'image':\n\t\t\treturn <Image {...props} />;\n\t\tcase 'link':\n\t\t\treturn <Link {...props} />;\n\t\tcase 'list-item':\n\t\t\treturn <ListItem {...props} />;\n\t\tcase 'list-item-container':\n\t\t\treturn <ListItemContainer {...props} />;\n\t\tcase 'paragraph':\n\t\t\treturn <Paragraph {...props} />;\n\t\tcase 'table':\n\t\t\treturn <Table {...props} />;\n\t\tcase 'table-cell':\n\t\t\treturn <TableCell {...props} />;\n\t\tcase 'table-row':\n\t\t\treturn <TableRow {...props} />;\n\t\tcase 'editable':\n\t\t\treturn <Editable {...props} />;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n","import React, {FC} from 'react';\nimport {getLevelByElementType, getMatchingEditableElement, isStencylElement} from '../../../utils';\n\nimport {Descendant} from 'slate';\nimport {Leaf} from '../leaf';\nimport {PdfPreviewElement} from '../element';\nimport {StencylElementTypes} from '../../../../..';\n\ntype SliceProps = {\n\tlevel?: number;\n\tpath: number[];\n\tparentType?: StencylElementTypes;\n\tnode: Descendant;\n\tnodes: Descendant[];\n};\n\nexport const Slice: FC<SliceProps> = ({level, path, node, nodes, parentType}) => {\n\tif (!isStencylElement(node)) {\n\t\treturn (\n\t\t\t<Leaf text={{text: node.text}} leaf={node} attributes={{'data-slate-leaf': true}}>\n\t\t\t\t{node.text}\n\t\t\t</Leaf>\n\t\t);\n\t}\n\n\tconst element =\n\t\tnode.type === 'editable' && node.linkId ? getMatchingEditableElement(nodes, node.linkId) : node;\n\n\tif (!element) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PdfPreviewElement\n\t\t\telement={element}\n\t\t\tattributes={{\n\t\t\t\t'data-slate-node': 'element',\n\t\t\t\tref: null,\n\t\t\t}}\n\t\t\tlevel={level}\n\t\t\tpath={path}\n\t\t\tparentType={parentType}\n\t\t>\n\t\t\t{(element as any).children.map((o, i) => (\n\t\t\t\t<Slice\n\t\t\t\t\tkey={i}\n\t\t\t\t\tlevel={getLevelByElementType(o, level)}\n\t\t\t\t\tnode={o}\n\t\t\t\t\tnodes={nodes}\n\t\t\t\t\tpath={[...path, i]}\n\t\t\t\t\tparentType={element.type}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</PdfPreviewElement>\n\t);\n};\n","import {Document, Page} from '@react-pdf/renderer';\nimport React, {FC, memo} from 'react';\n\nimport {Descendant} from 'slate';\nimport {Slice} from '../slice';\nimport {getLevelByElementType} from '../../../utils';\nimport {styles} from '../../styles';\n\ntype CanvasProps = {\n\tauthor?: string;\n\ttitle?: string;\n\tfontFamily?: string;\n\tnodes: Array<Descendant>;\n};\n\nconst BaseCanvas: FC<CanvasProps> = ({author, title, fontFamily, nodes}) => {\n\treturn (\n\t\t<Document author={author} title={title} creator={author} producer={author}>\n\t\t\t<Page size='A4' style={[styles.page, {fontFamily}]}>\n\t\t\t\t{nodes.map((node, i) => (\n\t\t\t\t\t<Slice key={i} level={getLevelByElementType(node)} node={node} nodes={nodes} path={[i]} />\n\t\t\t\t))}\n\t\t\t</Page>\n\t\t</Document>\n\t);\n};\n\nexport const Canvas = memo(BaseCanvas);\n","import 'stencyl/dist/index.css';\n\nimport {Editor, PdfPreview, generatePDFAsync} from 'stencyl';\nimport React, {useRef} from 'react';\n\nexport const EditorApp = () => {\n\tconst ref = useRef<Editor>(null);\n\tconst handleClick = () => {\n\t\tgeneratePDFAsync({\n\t\t\tnodes: ref.current?.getNodes() ?? [],\n\t\t\tdataset: {},\n\t\t\tauthor: 'Christian Drey',\n\t\t\ttitle: 'Sample Stencyl Document',\n\t\t});\n\t};\n\treturn (\n\t\t<Editor ref={ref}>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundColor: '#dbdfe2',\n\t\t\t\t\tpadding: '12px 24px',\n\t\t\t\t\ttextAlign: 'right',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<button\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tpadding: '8px 8px',\n\t\t\t\t\t\tbackgroundColor: '#326FF3',\n\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\tborderRadius: 5,\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={handleClick}\n\t\t\t\t>\n\t\t\t\t\tGet PDF\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</Editor>\n\t);\n};\n\nexport const PreviewApp = () => {\n\treturn (\n\t\t<PdfPreview\n\t\t\tnodes={[\n\t\t\t\t{type: 'paragraph', children: [{text: 'hELLO WORLD'}]},\n\t\t\t\t{type: 'paragraph', children: [{text: ''}]},\n\t\t\t\t{\n\t\t\t\t\ttype: 'table',\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'table-row',\n\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'table-cell',\n\t\t\t\t\t\t\t\t\tchildren: [{type: 'paragraph', children: [{text: 'aaa'}]}],\n\t\t\t\t\t\t\t\t\twidth: 48,\n\t\t\t\t\t\t\t\t\theight: 48,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'table-cell',\n\t\t\t\t\t\t\t\t\tchildren: [{type: 'paragraph', children: [{text: 'bbb'}]}],\n\t\t\t\t\t\t\t\t\twidth: 48,\n\t\t\t\t\t\t\t\t\theight: 48,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'table-row',\n\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'table-cell',\n\t\t\t\t\t\t\t\t\tchildren: [{type: 'paragraph', children: [{text: 'ccc'}]}],\n\t\t\t\t\t\t\t\t\twidth: 48,\n\t\t\t\t\t\t\t\t\theight: 48,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'table-cell',\n\t\t\t\t\t\t\t\t\tchildren: [{type: 'paragraph', children: [{text: 'ddd'}]}],\n\t\t\t\t\t\t\t\t\twidth: 48,\n\t\t\t\t\t\t\t\t\theight: 48,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{type: 'paragraph', children: [{text: ''}]},\n\t\t\t\t{type: 'paragraph', children: [{text: ''}]},\n\t\t\t\t{type: 'paragraph', children: [{text: 'Borderless'}]},\n\t\t\t\t{\n\t\t\t\t\ttype: 'table',\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'table-row',\n\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'table-cell',\n\t\t\t\t\t\t\t\t\tchildren: [{type: 'paragraph', children: [{text: 'border'}]}],\n\t\t\t\t\t\t\t\t\twidth: 48,\n\t\t\t\t\t\t\t\t\theight: 48,\n\t\t\t\t\t\t\t\t\tborderColor: 'rgba(0,0,0,0)',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'table-cell',\n\t\t\t\t\t\t\t\t\tchildren: [{type: 'paragraph', children: [{text: 'less'}]}],\n\t\t\t\t\t\t\t\t\twidth: 48,\n\t\t\t\t\t\t\t\t\theight: 48,\n\t\t\t\t\t\t\t\t\tborderColor: 'rgba(0,0,0,0)',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'table-row',\n\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'table-cell',\n\t\t\t\t\t\t\t\t\tchildren: [{type: 'paragraph', children: [{text: 'doc'}]}],\n\t\t\t\t\t\t\t\t\twidth: 48,\n\t\t\t\t\t\t\t\t\theight: 48,\n\t\t\t\t\t\t\t\t\tborderColor: 'rgba(0,0,0,0)',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'table-cell',\n\t\t\t\t\t\t\t\t\tchildren: [{type: 'paragraph', children: [{text: 'ument'}]}],\n\t\t\t\t\t\t\t\t\twidth: 48,\n\t\t\t\t\t\t\t\t\theight: 48,\n\t\t\t\t\t\t\t\t\tborderColor: 'rgba(0,0,0,0)',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{type: 'paragraph', children: [{text: ''}]},\n\t\t\t\t{\n\t\t\t\t\ttype: 'bulleted-list',\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t{type: 'list-item-container', children: [{text: 'Uni ner'}]},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'bulleted-list',\n\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\t\t\t\t\tchildren: [{type: 'list-item-container', children: [{text: 'dkkfk'}]}],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t{type: 'list-item-container', children: [{text: 'kfkf'}]},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'bulleted-list',\n\t\t\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{type: 'list-item-container', children: [{text: 'kfkfkf'}]},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{type: 'list-item-container', children: [{text: 'kfkfkf'}]},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'bulleted-list',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{type: 'list-item-container', children: [{text: 'kkfkf'}]},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{type: 'paragraph', children: [{text: ''}]},\n\t\t\t\t{type: 'paragraph', children: [{text: ''}]},\n\t\t\t\t{\n\t\t\t\t\ttype: 'numbered-list',\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t{type: 'list-item-container', children: [{text: 'jdjd'}]},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'numbered-list',\n\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\t\t\t\t\tchildren: [{type: 'list-item-container', children: [{text: 'kfkfk'}]}],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t{type: 'list-item-container', children: [{text: 'kfkfk'}]},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'numbered-list',\n\t\t\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{type: 'list-item-container', children: [{text: 'kfkfkf'}]},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{type: 'list-item-container', children: [{text: 'jfjfj'}]},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'numbered-list',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{type: 'list-item-container', children: [{text: 'kfkfkf'}]},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\tchildren: [{type: 'list-item-container', children: [{text: 'kkkd'}]}],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\tchildren: [{type: 'list-item-container', children: [{text: 'dkdkd'}]}],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{type: 'paragraph', children: [{text: ''}]},\n\t\t\t\t{type: 'paragraph', children: [{text: ''}]},\n\t\t\t\t{type: 'paragraph', children: [{text: 'Indenterd text'}], indentation: 9},\n\t\t\t\t{type: 'paragraph', indentation: 9, children: [{text: ''}]},\n\t\t\t\t{\n\t\t\t\t\ttype: 'paragraph',\n\t\t\t\t\tindentation: 3,\n\t\t\t\t\tchildren: [{text: 'Right aigned txt'}],\n\t\t\t\t\talignment: 'right',\n\t\t\t\t},\n\t\t\t\t{type: 'paragraph', indentation: 3, alignment: 'center', children: [{text: 'Centere'}]},\n\t\t\t\t{type: 'paragraph', indentation: 3, alignment: 'justify', children: [{text: 'Justified'}]},\n\t\t\t\t{type: 'paragraph', indentation: 3, children: [{text: 'kdkdk'}]},\n\t\t\t\t{type: 'paragraph', indentation: 3, children: [{text: ''}]},\n\t\t\t\t{type: 'paragraph', indentation: 3, children: [{text: ''}]},\n\t\t\t\t{\n\t\t\t\t\ttype: 'paragraph',\n\t\t\t\t\tindentation: 3,\n\t\t\t\t\tchildren: [{text: 'cO'}, {text: 'LORED T', color: '#00D084'}, {text: 'ET'}],\n\t\t\t\t},\n\t\t\t]}\n\t\t\tdataset={{\n\t\t\t\t'd69f0fc0-abf2-4659-9412-60b4949298f1':\n\t\t\t\t\t'https://static.remove.bg/sample-gallery/graphics/bird-thumbnail.jpg',\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport default EditorApp;\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}