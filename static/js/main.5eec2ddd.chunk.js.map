{"version":3,"sources":["../../src/packages/lists/index.tsx","../../src/packages/table/index.tsx","../../src/packages/blockquote/index.tsx","../../src/packages/codeblock/index.tsx","../../src/packages/common/utils.ts","../../src/utils/index.ts","../../src/packages/editable/utils.ts","../../src/packages/editable/index.tsx","../../src/packages/headings/index.tsx","../../src/packages/image/index.tsx","../../src/packages/link/index.tsx","../../src/packages/paragraph/index.tsx","../../src/modules/editor/modules/element/index.tsx","../../src/packages/leaf/index.tsx","../../src/constants/colors.ts","../../src/constants/html-node-names.ts","../../src/constants/html-node-types.ts","../../src/constants/index.ts","../../src/constants/paper-sizes.ts","../../src/packages/common/commands.ts","../../src/packages/leaf/commands.ts","../../src/packages/lists/utils.ts","../../src/packages/lists/commands.ts","../../src/packages/keybindings/index.ts","../../src/packages/leaf/keybinding.ts","../../src/packages/lists/keybinding.ts","../../src/modules/editor/modules/canvas/index.tsx","../../src/constants/datetime.ts","../../src/modules/editor/modules/field/index.tsx","../../src/hooks/index.ts","../../src/modules/editor/modules/icon/index.tsx","../../src/modules/editor/modules/options/index.tsx","../../src/modules/editor/modules/switch/index.tsx","../../src/packages/editable/commands.ts","../../src/modules/editor/modules/sidebar/edit-editable/index.tsx","../../src/packages/image/commands.ts","../../src/modules/editor/modules/sidebar/edit-image/index.tsx","../../src/packages/table/utils.ts","../../src/packages/table/commands.ts","../../src/modules/editor/modules/sidebar/table-tools/index.tsx","../../src/modules/editor/modules/sidebar/index.tsx","../../src/modules/editor/modules/icon-button/index.tsx","../../src/modules/editor/modules/toolbar/modules/align-center/index.tsx","../../src/modules/editor/modules/toolbar/modules/align-justified/index.tsx","../../src/modules/editor/modules/toolbar/modules/align-left/index.tsx","../../src/modules/editor/modules/toolbar/modules/align-right/index.tsx","../../src/modules/editor/modules/toolbar/modules/bold/index.tsx","../../src/modules/editor/modules/toolbar/modules/bulleted-list/index.tsx","../../src/modules/editor/modules/toolbar/modules/clear-formatting/index.tsx","../../src/modules/editor/modules/button/index.tsx","../../src/modules/editor/modules/popup/content/index.tsx","../../src/modules/editor/modules/popup/index.tsx","../../src/modules/editor/modules/popups/display-flag/index.tsx","../../src/modules/editor/modules/toolbar/modules/display-flag/index.tsx","../../src/modules/editor/modules/icon-group/index.tsx","../../src/modules/editor/modules/toolbar/modules/indent-decrease/index.tsx","../../src/modules/editor/modules/toolbar/modules/indent-increase/index.tsx","../../src/modules/editor/modules/popups/editable-type/index.tsx","../../src/modules/editor/modules/popups/editable-label/index.tsx","../../src/modules/editor/modules/popups/existing-editable/index.tsx","../../src/modules/editor/modules/toolbar/modules/insert-editable/index.tsx","../../src/modules/editor/modules/popups/insert-photo/index.tsx","../../src/packages/image/utils.ts","../../src/modules/editor/modules/toolbar/modules/insert-photo/index.tsx","../../src/modules/editor/modules/toolbar/modules/insert-table/index.tsx","../../src/modules/editor/modules/toolbar/modules/italic/index.tsx","../../src/modules/editor/modules/toolbar/modules/numbered-list/index.tsx","../../src/modules/editor/modules/toolbar/modules/redo/index.tsx","../../src/modules/editor/modules/toolbar/modules/strikethrough/index.tsx","../../src/modules/editor/modules/popups/text-style/index.tsx","../../src/packages/paragraph/commands.ts","../../src/packages/headings/commands.ts","../../src/modules/editor/modules/toolbar/modules/text-style/index.tsx","../../src/modules/editor/modules/toolbar/modules/underline/index.tsx","../../src/modules/editor/modules/toolbar/modules/undo/index.tsx","../../src/modules/editor/modules/toolbar/index.tsx","../../src/packages/editable/plugin.ts","../../src/packages/deserialize/utils.ts","../../src/packages/deserialize/rules.ts","../../src/packages/deserialize/index.ts","../../src/packages/blockquote/deserialize.ts","../../src/packages/codeblock/deserialize.ts","../../src/packages/headings/deserialize.ts","../../src/packages/image/deserialize.ts","../../src/packages/link/deserialize.ts","../../src/packages/lists/deserialize.ts","../../src/packages/paragraph/deserialize.ts","../../src/packages/table/deserialize.ts","../../src/packages/image/plugin.ts","../../src/packages/link/commands.ts","../../src/packages/link/plugin.ts","../../src/packages/lists/plugin.ts","../../src/packages/table/plugin.ts","../../src/packages/common/plugin.ts","../../src/modules/editor/index.tsx","../../src/modules/preview/utils/index.ts","../../src/modules/preview/state/index.ts","../../src/packages/hookstate/index.ts","../../src/packages/hookstate/hooks.ts","../../src/modules/preview/dom/modules/leaf/index.tsx","../../src/modules/download/pdf.tsx","../../src/modules/preview/dom/modules/editable/index.tsx","../../src/modules/preview/dom/modules/image/index.tsx","../../src/modules/preview/dom/modules/element/index.tsx","../../src/modules/preview/dom/modules/slice/index.tsx","../../src/modules/preview/dom/modules/canvas/index.tsx","../../src/modules/preview/pdf/styles/index.ts","../../src/modules/preview/pdf/modules/leaf/index.tsx","../../src/modules/preview/pdf/modules/lists/index.tsx","../../src/modules/preview/pdf/modules/table/index.tsx","../../src/modules/preview/pdf/modules/blockquote/index.tsx","../../src/modules/preview/pdf/modules/codeblock/index.tsx","../../src/modules/preview/pdf/modules/editable/index.tsx","../../src/modules/preview/pdf/modules/headings/index.tsx","../../src/modules/preview/pdf/modules/image/index.tsx","../../src/modules/preview/pdf/modules/link/index.tsx","../../src/modules/preview/pdf/modules/paragraph/index.tsx","../../src/modules/preview/pdf/modules/element/index.tsx","../../src/modules/preview/pdf/modules/slice/index.tsx","../../src/modules/preview/pdf/modules/canvas/index.tsx","App.tsx","index.tsx"],"names":["List","element","children","attributes","style","useMemo","properties","ListItem","React","ListItemContainer","TableCell","height","colSpan","rowSpan","borderColor","borderWidth","minWidth","width","TableRow","Table","className","Blockquote","Codeblock","getLastChild","node","level","Editor","Element","getLastChildEntry","entry","path","Text","getCurrentBlock","editor","mode","selection","depth","match","getSelectionLeaf","getCurrentDisplayTextSize","includes","getCurrentBlockAlignment","isAlignableElement","isBlockActive","type","matches","getMatchingNodes","Array","isMarkActive","mark","marks","editorMarks","isEditableElement","getMarkValue","query","forEachMatchingNode","callback","value","validElementTypes","getNextPath","steps","getNodeAt","at","options","error","getSelectionCoordinates","x","y","domSelection","window","domRange","rect","IS_MAC","test","notNil","getPlaceholderImage","toTitleCase","text","firstValidCharPosition","generateUUID","uuidv4","clamp","min","max","Math","formatDate","dateTime","token","format","Date","runIfDefined","fn","isValidUrl","isUrl","lastItem","list","array","size","fill","map","unsetProperty","source","key","clone","getShortcutText","keys","isEnterKey","e","EDITABLE_ELEMENTS_CACHE","EDITABLE_ELEMENTS_CACHED","createEditableElement","id","editable","getAllEditableElements","editableElements","cacheEditableElements","invalidateEditableElementsCache","Editable","selected","useSelected","focused","useFocused","parent","o","getEditableElementAttributes","classNames","src","contentEditable","fontSize","condition","Headings","Image","url","Link","href","undefined","Paragraph","EditorElement","props","Leaf","leaf","color","colors","transparent","black","PRESET_COLORS","THEME_COLORS","htmlNodeNames","A","B","BLOCKQUOTE","BODY","BR","CODE","DIV","FONT","H1","H2","H3","H4","H5","H6","I","IMG","LI","LIC","OL","P","PRE","S","SPAN","STRONG","TABLE","TD","TH","TR","U","UL","htmlNodeTypes","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","constants","a4","WRAPPED_BLOCKS","BLOCKS_WITH_ALIGNMENT","BLOCKS_WITH_INDENTATION","preBlockOps","Transforms","split","activateBlock","deactivateBlock","activateMark","voids","hanging","deactivateMark","setBlockAlignment","alignment","changeBlockIndentation","indentation","eventualIndentation","focusEditor","ReactEditor","toggleBoldMark","toggleItalicMark","toggleUnderlineMark","toggleStrikethroughMark","getListEntries","listItemEntry","listEntry","getCurrentListBlock","removeListItemBlock","listPath","listItemPath","ancestorListItemEntry","to","Path","increaseListNesting","previousListItemPath","previousListItemEntry","lastNodeEntry","lastNode","lastNodePath","destinationEntry","decreaseListNesting","listNode","ancestorListItemNode","ancestorListItemPath","lastPath","nextItem","range","anchor","edge","focus","KEYBINDINGS","generators","bindings","generator","mergeKeyBindings","tab","runKeyBindings","hotkey","toHotkey","keybinding","canvasWidthStyle","minHeight","Canvas","memo","useSlateStatic","renderElement","useCallback","renderLeaf","handleKeyDown","css","spellCheck","placeholder","onKeyDown","DATE_FORMATS","TIME_FORMATS","Field","label","cloneElement","child","useMouseDown","useModalUtils","initialOpen","animationDuration","useState","visible","setVisible","handleOpen","handleClose","timeInMs","Promise","setTimeout","resolve","handleToggle","open","close","toggle","useEditingBlock","useSlate","setEntry","useEffect","block","Range","getConfigurableBlockInSelection","Icon","handlePress","onPress","onMouseDown","OptionItem","option","onClickDelete","Options","onCreateOption","onDeleteOption","editingOption","setEditingOption","handleSubmitEditingOption","onChange","Switch","onChangeValue","checked","offColor","onColor","checkedIcon","uncheckedIcon","handleDiameter","activeBoxShadow","insertInlineEditable","updateInlineEditable","editableEntry","getCurrentEditableElement","editableNode","editablePath","defaultValue","tip","linkId","multiline","dateTimeFormat","EditEditable","now","useRef","setAttributes","persistChanges","patch","current","handleBlurInput","handleChangeDateTimeFormat","handleDeleteOption","eventualValue","index","onBlur","parsedValue","parseInt","eventualWidth","isNaN","eventualHeight","hidden","resizeInlineImage","currentImage","getCurrentInlineImage","EditImage","ratio","setWidth","setHeight","title","disabled","getTableEntries","tableEntry","tableRowEntry","tableCellEntry","createTableCell","createTableRow","columns","insertTableBlock","rows","blockNode","blockPath","destination","select","firstPoint","TableTools","hasBorders","setHasBorders","tableRowNode","tableRowPath","colCount","insertTableRowAbove","tableNode","tablePath","tableCellPath","rowCount","colPos","cellToCreate","insertTableColumnLeft","removeTableRow","hideTableBorders","showTableBorders","insertTableRowBelow","insertTableColumnRight","removeTableColumn","removeTableBlock","Sidebar","editingBlock","IconButton","forwardRef","active","role","ref","AlignCenterButton","AlignJustifiedButton","AlignLeftButton","AlignRightButton","BoldButton","isActive","BulletedListButton","listBlock","insertBulletedListBlock","ClearFormattingButton","clearMarks","Button","onClick","classnames","Content","onLayoutUpdate","position","hideArrow","dimensions","setDimensions","useLayoutEffect","document","computedDimensions","JSON","composedClassName","top","left","getViewportWidth","getViewportHeight","getPositioningWithoutAnchor","viewportWidth","viewportHeight","getValidPositioning","anchorRef","distance","offsets","contentPosition","anchorElement","anchorWidth","anchorHeight","anchorX","anchorY","getPositioningWithAnchor","xOffset","yOffset","rightEdge","bottomEdge","Popup","contentClassName","isVisible","overlayCloseOnClick","onRequestClose","portalRef","popupContentPosition","setPopupContentPosition","handleClickOverlay","handleKeyUp","createPortal","DisplayFlagPopup","coordinates","onSubmit","matchedElements","setParent","equals","setEquals","DisplayFlagButton","selectionRef","modalUtils","setCoordinates","unsetConditionMark","setConditionMark","IconGroup","IndentDecreaseButton","IndentIncreaseButton","EditableTypePopup","onSelect","rangeIsCollapsed","handleClickOption","EditableLabelPopup","setLabel","handleSubmit","autoFocus","length","ExistingEditablePopup","keyword","setKeyword","matchingElements","handleSelectOption","InsertEditableButton","editableTypeModalUtils","editableLabelModalUtils","existingEditableModalUtils","editableType","setEditableType","selectedText","setSelectedText","dataType","isInvisible","insertInvisibleEditable","InsertPhotoPopup","deps","delay","setUrl","scale","setScale","parsedScale","parseFloat","resetFields","getAndSetImageDimensionsAsync","img","naturalHeight","getImageSizeAsync","useDebounceEffect","useDebouncedEffectLib","maxLength","InsertPhotoButton","insertInlineImage","InsertTableButton","ItalicButton","NumberedListButton","insertNumberedListBlock","RedoButton","HistoryEditor","StrikethroughButton","ColorItem","handleMouseDown","backgroundColor","TextSizeItem","textSize","TextStylePopup","colorMark","initialState","state","setState","useBooleanState","selectorOpen","toggleSelectorOpen","handleClickSelector","handleClickTextSizeOption","setBlockAsParagraph","toggleHeadingOne","toggleHeadingTwo","toggleHeadingThree","handleClickColorOption","setColorMark","unsetColorMark","right","TextStyleButton","hex","alpha","hexAlpha","UnderlineButton","UndoButton","Toolbar","withEditable","isVoid","isInline","cruftFilterFn","invalidNodesFilterFn","deserializeToFragment","jsx","deserializeToElement","deserializeToLeaf","matchHTMLElementNode","rules","Object","matchHTMLNode","nodeType","getNodeStyle","getNodeAttribute","getStencylAlignmentAttribute","getNodeIndentation","marginLeft","parsed","getNodeTextContent","withHTMLDeserializer","insertData","html","data","fragment","DOMParser","parseFromString","deserializeHTMLElements","nodes","firstNode","normalizeFirstNode","wrappedNodes","pendingNodes","flushPendingNodes","wrapInlineTopLevelNodesInParagraph","deserializeHTML","VOID_NODES","nodeName","colspan","rowspan","bold","italic","underline","strikethrough","code","elements","result","childNodeList","childNodes","validNodes","validNodeNames","container","normalizeChildNodes","rule","deserializeHTMLElement","withImage","insertInlineLink","removeInlineLink","withLink","insertText","withLists","normalizeNode","insertBreak","deleteBackward","nodeEntry","getParentNode","parentNode","parentPath","fixOrphanedListItems","validChildren","opsCount","i","listItem","j","fixUnwrappedListItemChildren","fixEmptyList","lowestBlockEntry","leafNodeEntry","leafNode","end","pointRef","always","focusNext","currentPath","nextNodeEntry","nextNode","nextPath","insertNewListItem","withTable","deleteForward","tableCell","n","start","Point","withTrailingBlock","currentNode","lastChild","getLastNode","lastChildNode","initialData","bodyRef","fns","res","editorState","setEditorState","sidebarTop","setSidebarTop","useImperativeHandle","getNodes","getValueFromDataset","dataset","isStencylElement","shouldRenderByCondition","conditions","getMatchingEditableElement","getLevelByElementType","BULLETS","getOrderedListSymbol","toRomanNumeral","romanize","alphanumerize","toAlphabetNumeral","Font","previewDatasetState","initialValue","SUBSCRIBERS","STATE","get","set","subscriber","subscribe","unsubscribe","unsubscribeAll","createHookState","useHookState","hookState","DomPreviewElement","Slice","styles","page","paddingTop","paddingHorizontal","paddingBottom","blockquote","paddingLeft","listItemSymbol","pre","borderRadius","padding","fontFamily","h1","lineHeight","h2","h3","h4","h5","h6","image","maxWidth","alignSelf","link","textDecoration","tableRow","flexDirection","alignItems","borderStyle","shouldRender","parentType","getListItemSymbol","borderTopWidth","borderLeftWidth","PdfPreviewElement","author","creator","producer","generatePDFAsync","CACHED_BLOB","saveAs","useCache","renderedDocument","getRenderedDocument","CACHED_DATASET","pdf","EditorApp","textAlign","ReactDOM","render","App","getElementById"],"mappings":"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","file":"static/js/main.5eec2ddd.chunk.js","sourcesContent":["import React, {CSSProperties, FC, useMemo} from 'react';\n\nimport {RenderElementProps} from 'slate-react';\n\nexport const List: FC<RenderElementProps> = ({element, children, attributes}) => {\n\tconst style = useMemo(() => {\n\t\tconst properties: CSSProperties = {};\n\n\t\tif (element.type === 'numbered-list' || element.type === 'bulleted-list') {\n\t\t\tif (element.indentation) {\n\t\t\t\tproperties.marginLeft = `${element.indentation}%`;\n\t\t\t}\n\t\t}\n\n\t\treturn properties;\n\t}, [element]);\n\n\tif (element.type === 'bulleted-list') {\n\t\treturn (\n\t\t\t<ul {...attributes} style={style}>\n\t\t\t\t{children}\n\t\t\t</ul>\n\t\t);\n\t}\n\n\tif (element.type === 'numbered-list') {\n\t\treturn (\n\t\t\t<ol {...attributes} style={style}>\n\t\t\t\t{children}\n\t\t\t</ol>\n\t\t);\n\t}\n\n\treturn null;\n};\n\nexport const ListItem: FC<RenderElementProps> = ({element, attributes, children}) => {\n\tif (element.type === 'list-item') {\n\t\treturn <li {...attributes}>{children}</li>;\n\t}\n\n\treturn null;\n};\n\nexport const ListItemContainer: FC<RenderElementProps> = ({element, attributes, children}) => {\n\tif (element.type === 'list-item-container') {\n\t\treturn <div {...attributes}>{children}</div>;\n\t}\n\n\treturn null;\n};\n","import React, {FC} from 'react';\n\nimport {RenderElementProps} from 'slate-react';\n\nexport const TableCell: FC<RenderElementProps> = ({element, attributes, children}) => {\n\tif (element.type === 'table-cell') {\n\t\treturn (\n\t\t\t<td\n\t\t\t\t{...attributes}\n\t\t\t\theight={element.height}\n\t\t\t\tcolSpan={element.colspan ?? 1}\n\t\t\t\trowSpan={element.rowspan ?? 1}\n\t\t\t\tstyle={{\n\t\t\t\t\tborderColor: element.borderColor ?? 'black',\n\t\t\t\t\tborderWidth: element.borderWidth ?? 1,\n\t\t\t\t\tminWidth: element.width,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</td>\n\t\t);\n\t}\n\n\treturn null;\n};\n\nexport const TableRow: FC<RenderElementProps> = ({element, attributes, children}) => {\n\tif (element.type === 'table-row') {\n\t\treturn <tr {...attributes}>{children}</tr>;\n\t}\n\n\treturn null;\n};\n\nexport const Table: FC<RenderElementProps> = ({element, attributes, children}) => {\n\tif (element.type === 'table') {\n\t\treturn (\n\t\t\t<table className='border-collapse'>\n\t\t\t\t<tbody {...attributes}>{children}</tbody>\n\t\t\t</table>\n\t\t);\n\t}\n\n\treturn null;\n};\n","import React, {CSSProperties, FC, useMemo} from 'react';\n\nimport {RenderElementProps} from 'slate-react';\n\nexport const Blockquote: FC<RenderElementProps> = ({element, children, attributes}) => {\n\tconst style = useMemo(() => {\n\t\tconst properties: CSSProperties = {};\n\n\t\tif (element.type === 'block-quote') {\n\t\t\tif (element.indentation) {\n\t\t\t\tproperties.marginLeft = `${element.indentation}%`;\n\t\t\t}\n\n\t\t\tif (element.alignment) {\n\t\t\t\tproperties.textAlign = element.alignment;\n\t\t\t}\n\t\t}\n\n\t\treturn properties;\n\t}, [element]);\n\n\treturn (\n\t\t<blockquote className='ml-40' style={style} {...attributes}>\n\t\t\t{children}\n\t\t</blockquote>\n\t);\n};\n","import React, {CSSProperties, FC, useMemo} from 'react';\n\nimport {RenderElementProps} from 'slate-react';\n\nexport const Codeblock: FC<RenderElementProps> = ({element, children, attributes}) => {\n\tconst style = useMemo(() => {\n\t\tconst properties: CSSProperties = {};\n\n\t\tif (element.type === 'code-block') {\n\t\t\tif (element.indentation) {\n\t\t\t\tproperties.marginLeft = `${element.indentation}%`;\n\t\t\t}\n\n\t\t\tif (element.alignment) {\n\t\t\t\tproperties.textAlign = element.alignment;\n\t\t\t}\n\t\t}\n\n\t\treturn properties;\n\t}, [element]);\n\n\treturn (\n\t\t<pre style={style} className='bg-gray-100 rounded-default p-12'>\n\t\t\t<code {...attributes}>{children}</code>\n\t\t</pre>\n\t);\n};\n","import {\n\tAlignableElement,\n\tEditableElement,\n\tHeadingOneElement,\n\tHeadingThreeElement,\n\tHeadingTwoElement,\n\tImageElement,\n\tIndentableElement,\n\tStencylAlignment,\n\tStencylDisplayTextSize,\n\tStencylEditor,\n\tStencylElementTypes,\n\tStencylMarks,\n\tStencylPopupCoordinates,\n\tTableElement,\n} from '../../types';\nimport {\n\tDescendant,\n\tEditor,\n\tElement,\n\tLocation,\n\tNode,\n\tNodeEntry,\n\tNodeMatch,\n\tPath,\n\tRange,\n\tText,\n\tTransforms,\n} from 'slate';\n\nexport const EMPTY_TEXT_NODE = [{text: ''}];\n\nexport const getEmptyTextNode = () => [{text: ''}];\n\nexport function getLastChild(node: Descendant, level: number = 1): Descendant {\n\tif (!(level + 1) || !(Editor.isEditor(node) || Element.isElement(node))) {\n\t\treturn node;\n\t}\n\n\tconst {children} = node;\n\n\tconst lastNode = children[children.length - 1];\n\n\treturn getLastChild(lastNode, level - 1);\n}\n\nexport function getLastChildEntry(entry: NodeEntry): NodeEntry<Node> | null {\n\tconst [node, path] = entry;\n\n\tif (Text.isText(node) || !node.children.length) {\n\t\treturn null;\n\t}\n\n\tconst {children} = node;\n\tconst lastNode = children[children.length - 1];\n\n\treturn [lastNode, [...path, node.children.length - 1]];\n}\n\nexport function getLastNode(\n\teditor: StencylEditor,\n\tlevel: number,\n): NodeEntry<Descendant> | undefined {\n\tconst {children} = editor;\n\tconst lastNode = children[children.length - 1];\n\n\tif (!lastNode) {\n\t\treturn undefined;\n\t}\n\n\tconst [, lastPath] = Editor.last(editor, []);\n\n\treturn [getLastChild(lastNode, level - 1), lastPath.slice(0, level + 1)];\n}\n\nexport function getParentNode(editor: StencylEditor, nodeEntry: NodeEntry) {\n\tconst [node, path] = nodeEntry;\n\n\tif (Editor.isEditor(node) || !path?.length) {\n\t\treturn null;\n\t}\n\n\treturn Editor.node(editor, path.slice(0, path.length - 1));\n\n\t/**\n\t * Other Alternative methods\n\t * 1. Editor.above(editor, {at: path});\n\t * 2. Editor.parent(editor, path, {depth: path.length})\n\t */\n}\n\nexport function getCurrentBlock(editor: StencylEditor, mode: 'highest' | 'lowest' = 'highest') {\n\tconst {selection} = editor;\n\n\tif (!selection) {\n\t\treturn null;\n\t}\n\n\tif (mode === 'highest') {\n\t\treturn Editor.node(editor, selection, {depth: 1});\n\t}\n\n\tconst [match] = Editor.nodes(editor, {\n\t\tmatch: (node) => Element.isElement(node) && !editor.isInline(node),\n\t\tmode: 'lowest',\n\t});\n\n\treturn match;\n}\n\nexport function getSelectionBlocks(editor: StencylEditor) {\n\tconst matches = getMatchingNodes(\n\t\teditor,\n\t\t(node) => Element.isElement(node) && !editor.isInline(node),\n\t);\n\n\treturn Array.from(matches);\n}\n\nexport function getSelectionMarks(editor: StencylEditor) {\n\tconst editorMarks = Editor.marks(editor) ?? {};\n\tconst record: Partial<Record<keyof StencylMarks, Array<StencylMarks[keyof StencylMarks]>>> = {};\n\n\tfor (const mark in editorMarks) {\n\t\tif (Object.prototype.hasOwnProperty.call(editorMarks, mark)) {\n\t\t\tconst value = editorMarks[mark];\n\t\t\trecord[mark] = [value];\n\t\t}\n\t}\n\n\tconst matches = Editor.nodes<EditableElement>(editor, {\n\t\tmatch: (node) => isEditableElement(editor, node),\n\t\tvoids: true,\n\t});\n\n\tfor (const [node] of matches) {\n\t\tconst marks = node.marks;\n\n\t\tfor (const mark in marks) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(marks, mark)) {\n\t\t\t\tconst value = marks[mark];\n\n\t\t\t\tif (record[mark]) {\n\t\t\t\t\trecord[mark].push(value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst mergedMarks: StencylMarks = {};\n\n\tfor (const key in record) {\n\t\tif (Object.prototype.hasOwnProperty.call(record, key)) {\n\t\t\tconst value = record[key];\n\t\t\tconst markActive = value.length && value.every((o: any) => !!o);\n\n\t\t\tif (markActive) {\n\t\t\t\tif (key === 'condition' || key === 'color') {\n\t\t\t\t\tmergedMarks[key] = value[0];\n\t\t\t\t} else {\n\t\t\t\t\tmergedMarks[key] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn mergedMarks;\n}\n\nexport function getSelectionLeaf(editor: StencylEditor) {\n\tif (!editor.selection) {\n\t\treturn null;\n\t}\n\n\treturn Editor.leaf(editor, editor.selection);\n}\n\nexport function getCurrentDisplayTextSize(\n\teditor: StencylEditor,\n): StencylDisplayTextSize | undefined {\n\tconst [match] = Editor.nodes<HeadingOneElement | HeadingTwoElement | HeadingThreeElement>(\n\t\teditor,\n\t\t{\n\t\t\tmatch: (node) =>\n\t\t\t\t!Editor.isEditor(node) &&\n\t\t\t\tElement.isElement(node) &&\n\t\t\t\t['heading-one', 'heading-two', 'heading-three'].includes(node.type),\n\t\t\tmode: 'lowest',\n\t\t},\n\t);\n\n\tif (!match) {\n\t\treturn undefined;\n\t}\n\n\tconst [node] = match;\n\n\treturn node.type;\n}\n\nexport function getCurrentBlockAlignment(editor: StencylEditor): StencylAlignment {\n\tconst [match] = Editor.nodes(editor, {\n\t\tmatch: isAlignableElement,\n\t\tmode: 'lowest',\n\t});\n\n\tif (match) {\n\t\tconst [node] = match;\n\n\t\tif (isAlignableElement(node)) {\n\t\t\treturn node.alignment ?? 'left';\n\t\t}\n\t}\n\n\treturn 'left';\n}\n\nexport function isBlockActive(\n\teditor: StencylEditor,\n\ttype: StencylElementTypes,\n\tmode?: 'highest' | 'lowest',\n) {\n\tconst matches = getMatchingNodes(\n\t\teditor,\n\t\t(node) => Element.isElement(node) && !editor.isInline(node) && node.type === type,\n\t\tmode,\n\t);\n\n\treturn !!Array.from(matches).length;\n}\n\nexport function isMarkActive(\n\teditor: StencylEditor,\n\tmark: keyof StencylMarks,\n\tmarks?: StencylMarks,\n) {\n\t// marks = marks ?? getSelectionMarks(editor);\n\t// return !!marks[mark];\n\tconst editorMarks = marks ?? Editor.marks(editor) ?? {};\n\n\tconst matches = Editor.nodes(editor, {\n\t\tmatch: (node) => isEditableElement(editor, node) && !!node.marks[mark],\n\t});\n\n\treturn !!editorMarks[mark] || !!Array.from(matches).length;\n}\n\nexport function getMarkValue<T extends keyof StencylMarks>(\n\teditor: StencylEditor,\n\tmark: T,\n): StencylMarks[T] | undefined {\n\tconst editorMarks = Editor.marks(editor) ?? {};\n\n\tconst [match] = Editor.nodes<EditableElement>(editor, {\n\t\tmatch: (node) => isEditableElement(editor, node) && !!node.marks[mark],\n\t});\n\n\treturn editorMarks[mark] ?? match?.[0].marks[mark];\n}\n\nexport function getMatchingNodes<T extends Node>(\n\teditor: StencylEditor,\n\tquery: NodeMatch<T>,\n\tmode?: 'all' | 'highest' | 'lowest',\n) {\n\treturn Editor.nodes(editor, {\n\t\tmatch: query,\n\t\tmode,\n\t});\n}\n\nexport function forEachMatchingNode<T extends Node>(\n\teditor: StencylEditor,\n\tquery: NodeMatch<T>,\n\tcallback: (match: NodeEntry<T>) => void,\n) {\n\tconst matches = getMatchingNodes(editor, query);\n\n\tfor (const match of matches) {\n\t\tcallback(match);\n\t}\n}\n\nexport function isEditableElement(editor: StencylEditor, value: any): value is EditableElement {\n\treturn editor.isVoid(value) && Element.isElement(value) && value.type === 'editable';\n}\n\nexport function isAlignableElement(value: any): value is AlignableElement {\n\tconst validElementTypes: Array<StencylElementTypes> = [\n\t\t'block-quote',\n\t\t'code-block',\n\t\t'heading-one',\n\t\t'heading-two',\n\t\t'heading-three',\n\t\t'heading-four',\n\t\t'heading-five',\n\t\t'heading-six',\n\t\t'paragraph',\n\t];\n\n\treturn Element.isElement(value) && validElementTypes.includes(value.type);\n}\n\nexport function isIndentableElement(value: any): value is IndentableElement {\n\tconst validElementTypes: Array<StencylElementTypes> = [\n\t\t'block-quote',\n\t\t'bulleted-list',\n\t\t'code-block',\n\t\t'heading-one',\n\t\t'heading-two',\n\t\t'heading-three',\n\t\t'heading-four',\n\t\t'heading-five',\n\t\t'heading-six',\n\t\t'numbered-list',\n\t\t'paragraph',\n\t];\n\n\treturn Element.isElement(value) && validElementTypes.includes(value.type);\n}\n\nexport function insertFragment(\n\teditor: StencylEditor,\n\tfragment: Node[],\n\toptions: {\n\t\tat?: Location;\n\t\thanging?: boolean;\n\t\tvoids?: boolean;\n\t} = {},\n) {\n\tEditor.withoutNormalizing(editor, () => {\n\t\tconst {hanging = false, voids = false} = options;\n\t\tlet {at = editor.selection} = options;\n\n\t\tif (!fragment.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!at) {\n\t\t\treturn;\n\t\t} else if (Range.isRange(at)) {\n\t\t\tif (!hanging) {\n\t\t\t\tat = Editor.unhangRange(editor, at);\n\t\t\t}\n\n\t\t\tif (Range.isCollapsed(at)) {\n\t\t\t\tat = at.anchor;\n\t\t\t} else {\n\t\t\t\tconst [, end] = Range.edges(at);\n\n\t\t\t\tif (!voids && Editor.void(editor, {at: end})) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst pointRef = Editor.pointRef(editor, end);\n\t\t\t\tTransforms.delete(editor, {at});\n\t\t\t\tat = pointRef.unref()!;\n\t\t\t}\n\t\t} else if (Path.isPath(at)) {\n\t\t\tat = Editor.start(editor, at);\n\t\t}\n\n\t\tif (!voids && Editor.void(editor, {at})) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If the insert point is at the edge of an inline node, move it outside\n\t\t// instead since it will need to be split otherwise.\n\t\tconst inlineElementMatch = Editor.above(editor, {\n\t\t\tat,\n\t\t\tmatch: (n) => Editor.isInline(editor, n),\n\t\t\tmode: 'highest',\n\t\t\tvoids,\n\t\t});\n\n\t\tif (inlineElementMatch) {\n\t\t\tconst [, inlinePath] = inlineElementMatch;\n\n\t\t\tif (Editor.isEnd(editor, at, inlinePath)) {\n\t\t\t\tconst after = Editor.after(editor, inlinePath)!;\n\t\t\t\tat = after;\n\t\t\t} else if (Editor.isStart(editor, at, inlinePath)) {\n\t\t\t\tconst before = Editor.before(editor, inlinePath)!;\n\t\t\t\tat = before;\n\t\t\t}\n\t\t}\n\n\t\tconst blockMatch = Editor.above(editor, {\n\t\t\tmatch: (n) => Editor.isBlock(editor, n),\n\t\t\tat,\n\t\t\tvoids,\n\t\t})!;\n\t\tconst [, blockPath] = blockMatch;\n\t\tconst isBlockStart = Editor.isStart(editor, at, blockPath);\n\t\tconst isBlockEnd = Editor.isEnd(editor, at, blockPath);\n\t\tconst mergeStart = !isBlockStart || (isBlockStart && isBlockEnd);\n\t\tconst mergeEnd = !isBlockEnd;\n\t\tconst [, firstPath] = Node.first({children: fragment} as any, []);\n\t\tconst [, lastPath] = Node.last({children: fragment} as any, []);\n\n\t\tconst matches: NodeEntry[] = [];\n\t\tconst matcher = ([n, p]: NodeEntry) => {\n\t\t\tif (\n\t\t\t\tmergeStart &&\n\t\t\t\tPath.isAncestor(p, firstPath) &&\n\t\t\t\tElement.isElement(n) &&\n\t\t\t\t!editor.isVoid(n) &&\n\t\t\t\t!editor.isInline(n)\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tmergeEnd &&\n\t\t\t\tPath.isAncestor(p, lastPath) &&\n\t\t\t\tElement.isElement(n) &&\n\t\t\t\t!editor.isVoid(n) &&\n\t\t\t\t!editor.isInline(n)\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\tfor (const entry of Node.nodes({children: fragment} as any, {pass: matcher})) {\n\t\t\tif (entry[1].length > 0 && matcher(entry)) {\n\t\t\t\tmatches.push(entry);\n\t\t\t}\n\t\t}\n\n\t\tconst starts: Array<Node> = [];\n\t\tconst middles: Array<Node> = [];\n\t\tconst ends: Array<Node> = [];\n\t\tlet starting = true;\n\t\tlet hasBlocks = false;\n\n\t\tfor (const [node] of matches) {\n\t\t\tif (Element.isElement(node) && !editor.isInline(node)) {\n\t\t\t\tstarting = false;\n\t\t\t\thasBlocks = true;\n\t\t\t\tmiddles.push(node);\n\t\t\t} else if (starting) {\n\t\t\t\tstarts.push(node);\n\t\t\t} else {\n\t\t\t\tends.push(node);\n\t\t\t}\n\t\t}\n\n\t\tconst [inlineMatch] = Editor.nodes(editor, {\n\t\t\tat,\n\t\t\tmatch: (n) => Text.isText(n) || Editor.isInline(editor, n),\n\t\t\tmode: 'highest',\n\t\t\tvoids,\n\t\t})!;\n\n\t\tconst [, inlinePath] = inlineMatch;\n\t\tconst isInlineStart = Editor.isStart(editor, at, inlinePath);\n\t\tconst isInlineEnd = Editor.isEnd(editor, at, inlinePath);\n\n\t\tconst middleRef = Editor.pathRef(editor, isBlockEnd ? Path.next(blockPath) : blockPath);\n\n\t\tconst endRef = Editor.pathRef(editor, isInlineEnd ? Path.next(inlinePath) : inlinePath);\n\n\t\tTransforms.splitNodes(editor, {\n\t\t\tat,\n\t\t\tmatch: (n) =>\n\t\t\t\thasBlocks ? Editor.isBlock(editor, n) : Text.isText(n) || Editor.isInline(editor, n),\n\t\t\tmode: hasBlocks ? 'lowest' : 'highest',\n\t\t\tvoids,\n\t\t});\n\n\t\tconst startRef = Editor.pathRef(\n\t\t\teditor,\n\t\t\t!isInlineStart || (isInlineStart && isInlineEnd) ? Path.next(inlinePath) : inlinePath,\n\t\t);\n\n\t\tTransforms.insertNodes(editor, starts, {\n\t\t\tat: startRef.current!,\n\t\t\tmatch: (n) => Text.isText(n) || Editor.isInline(editor, n),\n\t\t\tmode: 'highest',\n\t\t\tvoids,\n\t\t});\n\n\t\tTransforms.insertNodes(editor, middles, {\n\t\t\tat: middleRef.current!,\n\t\t\tmatch: (n) => Editor.isBlock(editor, n),\n\t\t\tmode: 'lowest',\n\t\t\tvoids,\n\t\t});\n\n\t\tTransforms.insertNodes(editor, ends, {\n\t\t\tat: endRef.current!,\n\t\t\tmatch: (n) => Text.isText(n) || Editor.isInline(editor, n),\n\t\t\tmode: 'highest',\n\t\t\tvoids,\n\t\t});\n\n\t\tif (!options.at) {\n\t\t\tlet path: Path;\n\n\t\t\tif (ends.length > 0) {\n\t\t\t\tpath = Path.previous(endRef.current!);\n\t\t\t} else if (middles.length > 0) {\n\t\t\t\tpath = Path.previous(middleRef.current!);\n\t\t\t} else {\n\t\t\t\tpath = Path.previous(startRef.current!);\n\t\t\t}\n\n\t\t\tconst end = Editor.end(editor, path);\n\t\t\tTransforms.select(editor, end);\n\t\t}\n\n\t\tstartRef.unref();\n\t\tmiddleRef.unref();\n\t\tendRef.unref();\n\t});\n}\n\nexport function getNextPath(path: Path, steps = 1): Path {\n\treturn [...path.slice(0, -1), path.slice(-1)[0] + steps];\n}\n\nexport function getPreviousPath(path: Path, steps = 1): Path {\n\treturn getNextPath(path, Math.abs(steps) * -1);\n}\n\nexport function getNodeAt(\n\teditor: StencylEditor,\n\tat: Location,\n\toptions: {\n\t\tmatch?: NodeMatch<Node>;\n\t\tmode?: 'highest' | 'lowest' | 'all';\n\t} = {},\n): NodeEntry<Node> | null {\n\tconst {match, mode} = options;\n\ttry {\n\t\tif (match) {\n\t\t\tconst [matched] = Editor.nodes(editor, {\n\t\t\t\tat,\n\t\t\t\tmatch,\n\t\t\t\tmode,\n\t\t\t});\n\t\t\treturn matched;\n\t\t} else {\n\t\t\treturn Editor.node(editor, at);\n\t\t}\n\t} catch (error) {\n\t\treturn null;\n\t}\n}\n\nexport function moveCaretTo(editor: StencylEditor, path: Path, offset: number = 0) {\n\tTransforms.setSelection(editor, {\n\t\tanchor: {\n\t\t\tpath,\n\t\t\toffset,\n\t\t},\n\t\tfocus: {\n\t\t\tpath,\n\t\t\toffset,\n\t\t},\n\t});\n}\n\nexport function getSelectionCoordinates(editor: StencylEditor): StencylPopupCoordinates {\n\tconst {selection} = editor;\n\tlet x = 0;\n\tlet y = 0;\n\n\tif (selection) {\n\t\tconst domSelection = window.getSelection();\n\t\tconst domRange = domSelection?.getRangeAt(0);\n\t\tconst rect = domRange?.getBoundingClientRect();\n\n\t\tx = rect?.x ?? 0;\n\t\ty = rect?.y ?? 0;\n\t}\n\n\treturn {\n\t\tx,\n\t\ty,\n\t};\n}\n\nexport function getConfigurableBlockInSelection(editor: StencylEditor) {\n\tif (editor.selection && !Range.isCollapsed(editor.selection)) {\n\t\treturn undefined;\n\t}\n\n\tconst [match] = Editor.nodes<TableElement | ImageElement | EditableElement>(editor, {\n\t\tmatch: (node) =>\n\t\t\tElement.isElement(node) &&\n\t\t\t(node.type === 'table' ||\n\t\t\t\tnode.type === 'image' ||\n\t\t\t\t(node.type === 'editable' && !node.linkId)),\n\t\tmode: 'lowest',\n\t\tvoids: true,\n\t});\n\n\treturn match;\n}\n","import {KeyboardEvent} from 'react';\nimport alphanumerize from 'alphanumerize';\nimport format from 'date-fns/format';\nimport hexAlpha from 'hex-alpha';\nimport isUrl from 'is-url';\nimport romanize from 'romanize';\nimport {v4 as uuidv4} from 'uuid';\n\nexport const IS_MAC =\n\ttypeof window !== 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nexport function sleep(timeInMs: number = 0) {\n\treturn new Promise((resolve) => setTimeout(resolve, timeInMs));\n}\n\nexport function notNil<T>(value?: T | null): value is T {\n\treturn typeof value !== 'undefined' && value !== null;\n}\n\nexport function nil<T>(value?: T | null): value is undefined | null {\n\treturn !notNil(value);\n}\n\nexport function getPlaceholderImage(width: number, height?: number) {\n\treturn `https://dummyimage.com/${width}x${height || width}/326FF3/FFFFFF`;\n}\n\nexport function toTitleCase(text: string) {\n\tif (!text?.length) {\n\t\treturn text;\n\t}\n\tconst firstValidCharPosition = text.search(/[a-zA-Z0-9]/);\n\n\tif (!~firstValidCharPosition) {\n\t\treturn text;\n\t}\n\n\treturn `${text.slice(0, firstValidCharPosition)}${text[\n\t\tfirstValidCharPosition\n\t].toUpperCase()}${text.slice(firstValidCharPosition + 1)}`;\n}\n\nexport function generateUUID() {\n\treturn uuidv4();\n}\n\nexport function clamp(value: number, min: number, max: number) {\n\treturn Math.min(Math.max(value, min), max);\n}\n\nexport function formatDate(\n\tdateTime: Date | string | number,\n\ttoken = 'yyyy-MM-dd',\n): string | undefined {\n\tif (nil(dateTime)) return undefined;\n\n\ttry {\n\t\treturn format(new Date(dateTime), token);\n\t} catch (error) {\n\t\treturn undefined;\n\t}\n}\n\nexport function runIfDefined<T, R>(value?: T | null, fn?: (o: T) => R): R | undefined {\n\tif (notNil(value)) {\n\t\treturn fn?.(value) ?? undefined;\n\t}\n\n\treturn undefined;\n}\n\nexport function isValidUrl(text?: string | null) {\n\tif (!text?.length) {\n\t\treturn false;\n\t}\n\n\treturn isUrl(text);\n}\n\nexport function lastItem<T>(list: Array<T>, steps = 0): T {\n\treturn list[list.length - 1 - steps];\n}\n\nexport function array(size = 3): Array<number> {\n\treturn new Array(size).fill(null).map((_o, i) => i);\n}\n\nexport function pipeline<T extends (...args: any[]) => any>(fns: Array<T>) {\n\treturn (...args: unknown[]) => {\n\t\tlet res: ReturnType<T> | undefined;\n\n\t\tfor (let i = 0; i < fns.length; i++) {\n\t\t\tconst fn = fns[i];\n\t\t\tres = i ? fn(res) : fn(...args);\n\t\t}\n\n\t\treturn res as ReturnType<T>;\n\t};\n}\n\nexport function unsetProperty<T>(source: T, key: keyof T): T {\n\tconst clone = {...source};\n\tdelete clone[key];\n\treturn clone;\n}\n\nexport function getRgbaColor(hex: string = '#000', alpha = 1) {\n\thex = hex.startsWith('#') ? hex : `#${hex}`;\n\treturn hexAlpha(hex, alpha);\n}\n\nexport function getShortcutText(...keys: string[]) {\n\tkeys = keys.filter((o) => !!o).map((o) => toTitleCase(o).replace('Mod', IS_MAC ? '⌘' : 'Ctrl'));\n\treturn `(${keys.join(\n\t\t!IS_MAC || keys.length > 2 || !(keys[0] === '⌘' && /[A-Z]/.test(keys[1])) ? '+' : '',\n\t)})`;\n}\n\nexport function isEqualColor(left?: string, right?: string) {\n\tif (!left || !right) {\n\t\treturn false;\n\t}\n\n\tleft = left.startsWith('#') ? left : `#${left}`;\n\tright = right.startsWith('#') ? right : `#${right}`;\n\treturn left.toLowerCase() === right.toLowerCase();\n}\n\nexport function isEnterKey(e: KeyboardEvent) {\n\treturn e.key?.toLowerCase() === 'enter';\n}\n\nexport function toRomanNumeral(value: number): string {\n\treturn romanize(value ?? 1);\n}\n\nexport function toAlphabetNumeral(value: number): string {\n\treturn alphanumerize(value ?? 1);\n}\n\nexport function isObjectEqual<T extends object>(left?: T, right?: T) {\n\tif (left === right) {\n\t\treturn true;\n\t}\n\n\tif (!left || !right || Object.keys(left).length !== Object.keys(right).length) {\n\t\treturn false;\n\t}\n\n\treturn !Object.keys(left).some((key) => left[key] !== right[key]);\n}\n","import {\n\tBaseEditableElement,\n\tEditableDateElement,\n\tEditableElement,\n\tEditableImageElement,\n\tEditableOptionsElement,\n\tEditableRadioElement,\n\tEditableTextElement,\n\tEditableTimeElement,\n\tStencylEditor,\n\tStencylElement,\n} from '../../types';\nimport {Editor, Element, NodeEntry} from 'slate';\nimport {getEmptyTextNode, isEditableElement} from '../common/utils';\n\nimport {generateUUID} from '../../utils';\n\ntype EditableElementOptions = Omit<\n\tBaseEditableElement,\n\t'type' | 'id' | 'children' | 'editable' | 'marks'\n> &\n\t(\n\t\t| EditableTextElement\n\t\t| EditableOptionsElement\n\t\t| EditableRadioElement\n\t\t| EditableTimeElement\n\t\t| EditableDateElement\n\t\t| EditableImageElement\n\t);\n\nlet EDITABLE_ELEMENTS_CACHE: Array<NodeEntry<EditableElement>> = [];\nlet EDITABLE_ELEMENTS_CACHED: boolean = false;\n\nexport function createEditableElement(editor: StencylEditor, attributes: EditableElementOptions) {\n\treturn {\n\t\t...attributes,\n\t\ttype: 'editable',\n\t\tid: generateUUID(),\n\t\tchildren: getEmptyTextNode(),\n\t\teditable: true,\n\t\tmarks: Editor.marks(editor) ?? {},\n\t} as EditableElement;\n}\n\nexport function getCurrentEditableElement(editor: StencylEditor) {\n\tconst [editableEntry] = Editor.nodes(editor, {\n\t\tmatch: (node) =>\n\t\t\tElement.isElement(node) && Editor.isVoid(editor, node) && node.type === 'editable',\n\t\tmode: 'lowest',\n\t\tvoids: true,\n\t});\n\n\tif (!editableEntry) {\n\t\treturn null;\n\t}\n\n\treturn editableEntry;\n}\n\nexport function getAllEditableElements(editor: StencylEditor) {\n\tif (EDITABLE_ELEMENTS_CACHED) {\n\t\treturn EDITABLE_ELEMENTS_CACHE;\n\t}\n\n\tconst matches = Editor.nodes<EditableElement>(editor, {\n\t\tat: [],\n\t\tmatch: (node) => isEditableElement(editor, node) && !node.linkId && !node.isInvisible,\n\t\tmode: 'all',\n\t});\n\n\tconst editableElements = Array.from(matches);\n\n\tcacheEditableElements(editableElements);\n\n\treturn editableElements;\n}\n\nfunction cacheEditableElements(editableElements: Array<NodeEntry<EditableElement>>) {\n\tEDITABLE_ELEMENTS_CACHE = editableElements;\n\tEDITABLE_ELEMENTS_CACHED = true;\n}\n\nexport function invalidateEditableElementsCache() {\n\tEDITABLE_ELEMENTS_CACHED = false;\n}\n\nexport function getEditableElementAttributes(element: StencylElement) {\n\tif (element.type !== 'editable' || !element.linkId) {\n\t\treturn element;\n\t}\n\n\tconst editableElements = EDITABLE_ELEMENTS_CACHE.map((o) => o[0] as EditableElement);\n\tconst parent = editableElements.find((o) => o.id === element.linkId);\n\n\tif (!parent) {\n\t\treturn element;\n\t}\n\n\treturn {...parent, id: element.id, marks: element.marks};\n}\n","import React, {FC} from 'react';\nimport {RenderElementProps, useFocused, useSelected} from 'slate-react';\n\nimport classNames from 'classnames';\nimport {getEditableElementAttributes} from './utils';\nimport {getPlaceholderImage} from '../../utils';\n\nexport const Editable: FC<RenderElementProps> = ({element, children, attributes}) => {\n\tconst selected = useSelected();\n\tconst focused = useFocused();\n\tconst editable = getEditableElementAttributes(element);\n\n\tif (editable.type === 'editable') {\n\t\tif (editable.dataType === 'image') {\n\t\t\treturn (\n\t\t\t\t<span {...attributes}>\n\t\t\t\t\t{children}\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName={classNames('inline-block max-w-full rounded-default align-bottom', {\n\t\t\t\t\t\t\t'shadow-outline': selected && focused,\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tsrc={getPlaceholderImage(editable.width, editable.height)}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: editable.width,\n\t\t\t\t\t\t\theight: editable.height,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\n\t\tif (editable.isInvisible) {\n\t\t\treturn (\n\t\t\t\t<div {...attributes}>\n\t\t\t\t\t<div contentEditable={false}>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName={classNames('inline-block font-medium px-4 rounded-default bg-gray-300', {\n\t\t\t\t\t\t\t\t'shadow-outline': selected && focused,\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tstyle={{fontSize: '0.82em'}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{editable.label}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t{children}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<span\n\t\t\t\t{...attributes}\n\t\t\t\tcontentEditable={false}\n\t\t\t\tclassName={classNames('inline-block text-white font-medium px-4 rounded-default mx-1', {\n\t\t\t\t\t'shadow-outline': selected && focused,\n\t\t\t\t\t'bg-blue-500': !editable.marks.condition,\n\t\t\t\t\t'bg-green-500': editable.marks.condition,\n\t\t\t\t})}\n\t\t\t\tstyle={{fontSize: '0.82em'}}\n\t\t\t>\n\t\t\t\t{editable.defaultValue}\n\t\t\t\t{children}\n\t\t\t</span>\n\t\t);\n\t}\n\n\treturn null;\n};\n","import React, {CSSProperties, FC, useMemo} from 'react';\n\nimport {RenderElementProps} from 'slate-react';\n\nexport const Headings: FC<RenderElementProps> = ({element, children, attributes}) => {\n\tconst style = useMemo(() => {\n\t\tconst properties: CSSProperties = {};\n\n\t\tif (\n\t\t\telement.type === 'heading-one' ||\n\t\t\telement.type === 'heading-two' ||\n\t\t\telement.type === 'heading-three' ||\n\t\t\telement.type === 'heading-four' ||\n\t\t\telement.type === 'heading-five' ||\n\t\t\telement.type === 'heading-six'\n\t\t) {\n\t\t\tif (element.indentation) {\n\t\t\t\tproperties.marginLeft = `${element.indentation}%`;\n\t\t\t}\n\n\t\t\tif (element.alignment) {\n\t\t\t\tproperties.textAlign = element.alignment;\n\t\t\t}\n\t\t}\n\n\t\treturn properties;\n\t}, [element]);\n\n\tswitch (element.type) {\n\t\tcase 'heading-one':\n\t\t\treturn (\n\t\t\t\t<h1 className='text-semi-title' style={style} {...attributes}>\n\t\t\t\t\t{children}\n\t\t\t\t</h1>\n\t\t\t);\n\t\tcase 'heading-two':\n\t\t\treturn (\n\t\t\t\t<h2 className='text-heading-1' style={style} {...attributes}>\n\t\t\t\t\t{children}\n\t\t\t\t</h2>\n\t\t\t);\n\t\tcase 'heading-three':\n\t\t\treturn (\n\t\t\t\t<h3 className='text-heading-2' style={style} {...attributes}>\n\t\t\t\t\t{children}\n\t\t\t\t</h3>\n\t\t\t);\n\t\tcase 'heading-four':\n\t\t\treturn (\n\t\t\t\t<h4 className='text-heading-3' style={style} {...attributes}>\n\t\t\t\t\t{children}\n\t\t\t\t</h4>\n\t\t\t);\n\t\tcase 'heading-five':\n\t\t\treturn (\n\t\t\t\t<h5 className='text-headline' style={style} {...attributes}>\n\t\t\t\t\t{children}\n\t\t\t\t</h5>\n\t\t\t);\n\t\tcase 'heading-six':\n\t\t\treturn (\n\t\t\t\t<h6 className='text-body' style={style} {...attributes}>\n\t\t\t\t\t{children}\n\t\t\t\t</h6>\n\t\t\t);\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n","import React, {FC} from 'react';\nimport {RenderElementProps, useFocused, useSelected} from 'slate-react';\n\nimport classNames from 'classnames';\n\nexport const Image: FC<RenderElementProps> = ({element, attributes, children}) => {\n\tconst selected = useSelected();\n\tconst focused = useFocused();\n\n\tif (element.type === 'image') {\n\t\treturn (\n\t\t\t<span {...attributes}>\n\t\t\t\t{children}\n\t\t\t\t<img\n\t\t\t\t\tclassName={classNames('inline-block max-w-full rounded-default align-bottom', {\n\t\t\t\t\t\t'shadow-outline': selected && focused,\n\t\t\t\t\t})}\n\t\t\t\t\tsrc={element.url}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: element.width,\n\t\t\t\t\t\theight: element.height,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</span>\n\t\t);\n\t}\n\n\treturn null;\n};\n","import React, {FC} from 'react';\n\nimport {RenderElementProps} from 'slate-react';\n\nexport const Link: FC<RenderElementProps> = ({element, children, attributes}) => {\n\treturn (\n\t\t<a\n\t\t\tclassName='underline'\n\t\t\thref={element.type === 'link' ? element.url : undefined}\n\t\t\t{...attributes}\n\t\t>\n\t\t\t{children}\n\t\t</a>\n\t);\n};\n","import React, {CSSProperties, FC, useMemo} from 'react';\n\nimport {RenderElementProps} from 'slate-react';\n\nexport const Paragraph: FC<RenderElementProps> = ({element, children, attributes}) => {\n\tconst style = useMemo(() => {\n\t\tconst properties: CSSProperties = {};\n\n\t\tif (element.type === 'paragraph') {\n\t\t\tif (element.indentation) {\n\t\t\t\tproperties.marginLeft = `${element.indentation}%`;\n\t\t\t}\n\n\t\t\tif (element.alignment) {\n\t\t\t\tproperties.textAlign = element.alignment;\n\t\t\t}\n\t\t}\n\n\t\treturn properties;\n\t}, [element]);\n\n\treturn (\n\t\t<p style={style} {...attributes}>\n\t\t\t{children}\n\t\t</p>\n\t);\n};\n","import {List, ListItem, ListItemContainer} from '../../../../packages/lists';\nimport React, {FC} from 'react';\nimport {Table, TableCell, TableRow} from '../../../../packages/table';\n\nimport {Blockquote} from '../../../../packages/blockquote';\nimport {Codeblock} from '../../../../packages/codeblock';\nimport {Editable} from '../../../../packages/editable';\nimport {Headings} from '../../../../packages/headings';\nimport {Image} from '../../../../packages/image';\nimport {Link} from '../../../../packages/link';\nimport {Paragraph} from '../../../../packages/paragraph';\nimport {RenderElementProps} from 'slate-react';\n\nexport const EditorElement: FC<RenderElementProps> = (props) => {\n\tswitch (props.element.type) {\n\t\tcase 'block-quote':\n\t\t\treturn <Blockquote {...props} />;\n\t\tcase 'bulleted-list':\n\t\tcase 'numbered-list':\n\t\t\treturn <List {...props} />;\n\t\tcase 'code-block':\n\t\t\treturn <Codeblock {...props} />;\n\t\tcase 'heading-one':\n\t\tcase 'heading-two':\n\t\tcase 'heading-three':\n\t\tcase 'heading-four':\n\t\tcase 'heading-five':\n\t\tcase 'heading-six':\n\t\t\treturn <Headings {...props} />;\n\t\tcase 'image':\n\t\t\treturn <Image {...props} />;\n\t\tcase 'link':\n\t\t\treturn <Link {...props} />;\n\t\tcase 'list-item':\n\t\t\treturn <ListItem {...props} />;\n\t\tcase 'list-item-container':\n\t\t\treturn <ListItemContainer {...props} />;\n\t\tcase 'paragraph':\n\t\t\treturn <Paragraph {...props} />;\n\t\tcase 'table':\n\t\t\treturn <Table {...props} />;\n\t\tcase 'table-cell':\n\t\t\treturn <TableCell {...props} />;\n\t\tcase 'table-row':\n\t\t\treturn <TableRow {...props} />;\n\t\tcase 'editable':\n\t\t\treturn <Editable {...props} />;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n","import React, {FC} from 'react';\n\nimport {RenderLeafProps} from 'slate-react';\n\nexport const Leaf: FC<RenderLeafProps> = ({attributes, children, leaf}) => {\n\tif (leaf.bold) {\n\t\tchildren = <strong>{children}</strong>;\n\t}\n\n\tif (leaf.code) {\n\t\tchildren = <code>{children}</code>;\n\t}\n\n\tif (leaf.italic) {\n\t\tchildren = <em>{children}</em>;\n\t}\n\n\tif (leaf.underline) {\n\t\tchildren = <u>{children}</u>;\n\t}\n\n\tif (leaf.strikethrough) {\n\t\tchildren = <del>{children}</del>;\n\t}\n\n\treturn (\n\t\t<span\n\t\t\t{...attributes}\n\t\t\tstyle={{color: leaf.color}}\n\t\t\tclassName={leaf.condition ? 'bg-green-highlight' : undefined}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import themeColors from '../theme/data/colors.json';\n\nconst colors = {\n\ttransparent: 'rgba(0,0,0,0)',\n\tblack: '#000',\n};\n\nexport const PRESET_COLORS = [\n\t'#FF6900',\n\t'#FCB900',\n\t'#7BDCB5',\n\t'#00D084',\n\t'#8ED1FC',\n\t'#326FF3',\n\t'#ABB8C3',\n\t'#EB144C',\n\t'#F78DA7',\n\t'#9900EF',\n];\n\nexport const THEME_COLORS = themeColors;\n\nexport default colors;\n","const htmlNodeNames = {\n\tA: 'A',\n\tB: 'B',\n\tBLOCKQUOTE: 'BLOCKQUOTE',\n\tBODY: 'BODY',\n\tBR: 'BR',\n\tCODE: 'CODE',\n\tDIV: 'DIV',\n\tFONT: 'FONT',\n\tH1: 'H1',\n\tH2: 'H2',\n\tH3: 'H3',\n\tH4: 'H4',\n\tH5: 'H5',\n\tH6: 'H6',\n\tI: 'I',\n\tIMG: 'IMG',\n\tLI: 'LI',\n\tLIC: 'LIC',\n\tOL: 'OL',\n\tP: 'P',\n\tPRE: 'PRE',\n\tS: 'S',\n\tSPAN: 'SPAN',\n\tSTRONG: 'STRONG',\n\tTABLE: 'TABLE',\n\tTD: 'TD',\n\tTH: 'TH',\n\tTR: 'TR',\n\tU: 'U',\n\tUL: 'UL',\n};\n\nexport default htmlNodeNames;\n","const htmlNodeTypes = {\n\tELEMENT_NODE: 1,\n\tATTRIBUTE_NODE: 2,\n\tTEXT_NODE: 3,\n\tCDATA_SECTION_NODE: 4,\n\tPROCESSING_INSTRUCTION_NODE: 7,\n\tCOMMENT_NODE: 8,\n\tDOCUMENT_NODE: 9,\n\tDOCUMENT_TYPE_NODE: 10,\n\tDOCUMENT_FRAGMENT_NODE: 11,\n};\n\nexport default htmlNodeTypes;\n","import colors from './colors';\nimport htmlNodeNames from './html-node-names';\nimport htmlNodeTypes from './html-node-types';\nimport paperSizes from './paper-sizes';\n\nconst constants = {\n\tcolors,\n\tpaperSizes,\n\thtmlNodeNames,\n\thtmlNodeTypes,\n};\n\nexport default constants;\n","const paperSizes = {\n\ta4: {\n\t\twidth: 595,\n\t\theight: 842,\n\t},\n};\n\nexport default paperSizes;\n","import {\n\tEditableElement,\n\tParagraphElement,\n\tStencylAlignment,\n\tStencylEditor,\n\tStencylElementTypes,\n\tStencylMarks,\n} from '../../types';\nimport {Editor, Element, Location, Transforms} from 'slate';\nimport {clamp, unsetProperty} from '../../utils';\nimport {forEachMatchingNode, isEditableElement} from './utils';\n\nimport {ReactEditor} from 'slate-react';\n\nexport const WRAPPED_BLOCKS: Array<StencylElementTypes> = [\n\t'numbered-list',\n\t'bulleted-list',\n\t'table',\n];\n\nexport const BLOCKS_WITH_ALIGNMENT: Array<StencylElementTypes> = [\n\t'block-quote',\n\t'code-block',\n\t'heading-one',\n\t'heading-two',\n\t'heading-three',\n\t'heading-four',\n\t'heading-five',\n\t'heading-six',\n\t'paragraph',\n];\n\nexport const BLOCKS_WITH_INDENTATION: Array<StencylElementTypes> = [\n\t...BLOCKS_WITH_ALIGNMENT,\n\t'bulleted-list',\n\t'numbered-list',\n];\n\nexport const INDENTATION_FACTOR = 3;\n\nexport function preBlockOps(editor: StencylEditor) {\n\tTransforms.unwrapNodes(editor, {\n\t\tmatch: (node) => Element.isElement(node) && WRAPPED_BLOCKS.includes(node.type),\n\t\tsplit: true,\n\t});\n}\n\nexport function activateBlock(editor: StencylEditor, type: StencylElementTypes) {\n\tpreBlockOps(editor);\n\n\tTransforms.setNodes(editor, {\n\t\ttype,\n\t});\n}\n\nexport function deactivateBlock(editor: StencylEditor) {\n\tpreBlockOps(editor);\n\n\tTransforms.setNodes(editor, {\n\t\ttype: 'paragraph',\n\t});\n}\n\nexport function activateMark<K extends keyof StencylMarks>(\n\teditor: StencylEditor,\n\tmark: K,\n\tvalue: StencylMarks[K] = true as any,\n) {\n\tEditor.addMark(editor, mark, value);\n\n\tconst editables = Editor.nodes<EditableElement>(editor, {\n\t\tmatch: (node) => isEditableElement(editor, node),\n\t\tvoids: true,\n\t});\n\n\tfor (const [node, path] of editables) {\n\t\tTransforms.setNodes(\n\t\t\teditor,\n\t\t\t{\n\t\t\t\tmarks: {\n\t\t\t\t\t...node.marks,\n\t\t\t\t\t[mark]: value,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tat: path,\n\t\t\t\thanging: true,\n\t\t\t\tvoids: true,\n\t\t\t},\n\t\t);\n\t}\n}\n\nexport function deactivateMark(editor: StencylEditor, mark: keyof StencylMarks) {\n\tEditor.removeMark(editor, mark);\n\n\tconst matches = Editor.nodes<EditableElement>(editor, {\n\t\tmatch: (node) => isEditableElement(editor, node),\n\t\tvoids: true,\n\t});\n\n\tfor (const [node, path] of matches) {\n\t\tTransforms.setNodes(\n\t\t\teditor,\n\t\t\t{\n\t\t\t\tmarks: unsetProperty(node.marks, mark),\n\t\t\t},\n\t\t\t{\n\t\t\t\tat: path,\n\t\t\t\thanging: true,\n\t\t\t\tvoids: true,\n\t\t\t},\n\t\t);\n\t}\n}\n\nexport function clearMarks(editor: StencylEditor) {\n\tconst marks: Array<keyof StencylMarks> = [\n\t\t'bold',\n\t\t'code',\n\t\t'color',\n\t\t'italic',\n\t\t'underline',\n\t\t'strikethrough',\n\t\t'condition',\n\t];\n\n\tmarks.forEach((o) => editor.removeMark(o));\n\n\tconst matches = Editor.nodes<EditableElement>(editor, {\n\t\tmatch: (node) => isEditableElement(editor, node),\n\t\tvoids: true,\n\t});\n\n\tfor (const [, path] of matches) {\n\t\tTransforms.setNodes(\n\t\t\teditor,\n\t\t\t{\n\t\t\t\tmarks: {},\n\t\t\t},\n\t\t\t{\n\t\t\t\tat: path,\n\t\t\t\thanging: true,\n\t\t\t\tvoids: true,\n\t\t\t},\n\t\t);\n\t}\n}\n\nexport function setBlockAlignment(editor: StencylEditor, alignment?: StencylAlignment) {\n\tforEachMatchingNode(\n\t\teditor,\n\t\t(node) =>\n\t\t\tElement.isElement(node) &&\n\t\t\t!editor.isInline(node) &&\n\t\t\tBLOCKS_WITH_ALIGNMENT.includes(node.type),\n\t\t(match) => {\n\t\t\tconst [node, path] = match;\n\n\t\t\tif (!Element.isElement(node) || !BLOCKS_WITH_ALIGNMENT.includes(node.type)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tTransforms.setNodes(\n\t\t\t\teditor,\n\t\t\t\t{\n\t\t\t\t\talignment: alignment === 'left' ? undefined : alignment,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tat: path,\n\t\t\t\t},\n\t\t\t);\n\t\t},\n\t);\n}\n\nexport function changeBlockIndentation(editor: StencylEditor, mode: 'increment' | 'decrement') {\n\tforEachMatchingNode(\n\t\teditor,\n\t\t(node) =>\n\t\t\tElement.isElement(node) &&\n\t\t\t!editor.isInline(node) &&\n\t\t\tBLOCKS_WITH_INDENTATION.includes(node.type),\n\t\t(match) => {\n\t\t\tconst [node, path] = match;\n\t\t\tconst indentation = (node as ParagraphElement).indentation ?? 0;\n\t\t\tconst eventualIndentation = clamp(\n\t\t\t\tmode === 'increment' ? indentation + INDENTATION_FACTOR : indentation - INDENTATION_FACTOR,\n\t\t\t\t0,\n\t\t\t\t99,\n\t\t\t);\n\n\t\t\tTransforms.setNodes(\n\t\t\t\teditor,\n\t\t\t\t{\n\t\t\t\t\tindentation: eventualIndentation || undefined,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tat: path,\n\t\t\t\t},\n\t\t\t);\n\t\t},\n\t);\n}\n\nexport function focusEditor(editor: StencylEditor, at?: Location) {\n\tReactEditor.focus(editor);\n\n\tif (at) {\n\t\tTransforms.select(editor, at);\n\t}\n}\n","import {StencylDisplayCondition, StencylEditor, StencylMarks} from '../../types';\nimport {activateMark, deactivateMark} from '../common/commands';\n\nimport {isMarkActive} from '../common/utils';\n\nexport function setColorMark(editor: StencylEditor, value: string) {\n\tactivateMark(editor, 'color', value);\n}\n\nexport function unsetColorMark(editor: StencylEditor) {\n\tdeactivateMark(editor, 'color');\n}\n\nexport function toggleBoldMark(editor: StencylEditor, marks?: StencylMarks) {\n\tisMarkActive(editor, 'bold', marks)\n\t\t? deactivateMark(editor, 'bold')\n\t\t: activateMark(editor, 'bold');\n}\n\nexport function toggleItalicMark(editor: StencylEditor, marks?: StencylMarks) {\n\tisMarkActive(editor, 'italic', marks)\n\t\t? deactivateMark(editor, 'italic')\n\t\t: activateMark(editor, 'italic');\n}\n\nexport function toggleUnderlineMark(editor: StencylEditor, marks?: StencylMarks) {\n\tisMarkActive(editor, 'underline', marks)\n\t\t? deactivateMark(editor, 'underline')\n\t\t: activateMark(editor, 'underline');\n}\n\nexport function toggleStrikethroughMark(editor: StencylEditor, marks?: StencylMarks) {\n\tisMarkActive(editor, 'strikethrough', marks)\n\t\t? deactivateMark(editor, 'strikethrough')\n\t\t: activateMark(editor, 'strikethrough');\n}\n\nexport function toggleCodeMark(editor: StencylEditor, marks?: StencylMarks) {\n\tisMarkActive(editor, 'code', marks)\n\t\t? deactivateMark(editor, 'code')\n\t\t: activateMark(editor, 'code');\n}\n\nexport function setConditionMark(\n\teditor: StencylEditor,\n\tvalue: StencylDisplayCondition | Array<StencylDisplayCondition>,\n) {\n\tactivateMark(editor, 'condition', value);\n}\n\nexport function unsetConditionMark(editor: StencylEditor) {\n\tdeactivateMark(editor, 'condition');\n}\n","import {BulletedListElement, NumberedListElement, StencylEditor} from '../../types';\nimport {Editor, Element} from 'slate';\n\nexport function getListEntries(editor: StencylEditor) {\n\tconst [listItemEntry] = Editor.nodes(editor, {\n\t\tmatch: (o) => Element.isElement(o) && o.type === 'list-item',\n\t\tmode: 'lowest',\n\t});\n\n\tconst [listEntry] = Editor.nodes(editor, {\n\t\tmatch: (o) =>\n\t\t\tElement.isElement(o) && (o.type === 'bulleted-list' || o.type === 'numbered-list'),\n\t\tmode: 'lowest',\n\t});\n\n\treturn {\n\t\tlistEntry,\n\t\tlistItemEntry,\n\t};\n}\n\nexport function getCurrentListBlock(editor: StencylEditor) {\n\tconst [match] = Editor.nodes<NumberedListElement | BulletedListElement>(editor, {\n\t\tmatch: (node) =>\n\t\t\tElement.isElement(node) && ['bulleted-list', 'numbered-list'].includes(node.type),\n\t\tmode: 'lowest',\n\t});\n\n\tif (!match) {\n\t\treturn undefined;\n\t}\n\n\treturn match;\n}\n","import {Editor, Element, Path, Range, Transforms} from 'slate';\nimport {\n\tgetLastChildEntry,\n\tgetNextPath,\n\tgetNodeAt,\n\tgetPreviousPath,\n\tisBlockActive,\n} from '../common/utils';\n\nimport {StencylEditor} from '../../types';\nimport {clamp} from '../../utils';\nimport {getListEntries} from './utils';\nimport {preBlockOps} from '../common/commands';\n\nexport function insertBulletedListBlock(editor: StencylEditor) {\n\tif (!editor.selection) {\n\t\treturn;\n\t}\n\n\tif (isBlockActive(editor, 'list-item')) {\n\t\tremoveListItemBlock(editor);\n\t} else {\n\t\tpreBlockOps(editor);\n\t}\n\n\tEditor.withoutNormalizing(editor, () => {\n\t\t// Transforms.setNodes(editor, {\n\t\t// \ttype: 'list-item-container',\n\t\t// });\n\n\t\t// const nodes = Array.from(\n\t\t// \tEditor.nodes(editor, {\n\t\t// \t\tmatch: (o) => Element.isElement(o) && o.type === 'list-item-container',\n\t\t// \t}),\n\t\t// );\n\n\t\t// const items: Array<any> = nodes.map(([o]) => ({\n\t\t// \ttype: 'list-item',\n\t\t// \tchildren: [o],\n\t\t// }));\n\n\t\t// Transforms.removeNodes(editor);\n\n\t\t// Transforms.insertNodes(\n\t\t// \teditor,\n\t\t// \t{\n\t\t// \t\ttype: 'bulleted-list',\n\t\t// \t\tchildren: items,\n\t\t// \t},\n\t\t// \t{select: true},\n\t\t// );\n\n\t\tTransforms.setNodes(editor, {\n\t\t\ttype: 'list-item',\n\t\t});\n\n\t\tTransforms.wrapNodes(editor, {\n\t\t\ttype: 'bulleted-list',\n\t\t\tchildren: [],\n\t\t});\n\t});\n}\n\nexport function insertNumberedListBlock(editor: StencylEditor) {\n\tif (!editor.selection) {\n\t\treturn;\n\t}\n\n\tif (isBlockActive(editor, 'list-item')) {\n\t\tremoveListItemBlock(editor);\n\t} else {\n\t\tpreBlockOps(editor);\n\t}\n\n\tEditor.withoutNormalizing(editor, () => {\n\t\tTransforms.setNodes(editor, {\n\t\t\ttype: 'list-item',\n\t\t});\n\n\t\tTransforms.wrapNodes(editor, {\n\t\t\ttype: 'numbered-list',\n\t\t\tchildren: [],\n\t\t});\n\t});\n}\n\nexport function removeListItemBlock(editor: StencylEditor) {\n\tif (!editor.selection) {\n\t\treturn;\n\t}\n\n\tconst {listEntry, listItemEntry} = getListEntries(editor);\n\n\tif (!listEntry) {\n\t\treturn;\n\t}\n\n\tconst [, listPath] = listEntry;\n\tconst [, listItemPath] = listItemEntry;\n\tconst ancestorListItemEntry = Editor.parent(editor, listItemPath, {\n\t\tdepth: clamp(listItemPath.length - 1, 0, Infinity),\n\t});\n\tconst isNested =\n\t\tElement.isElement(ancestorListItemEntry[0]) && ancestorListItemEntry[0].type === 'list-item';\n\n\tif (isNested) {\n\t\tTransforms.moveNodes(editor, {\n\t\t\tat: listItemPath,\n\t\t\tto: Path.next(ancestorListItemEntry[1]),\n\t\t});\n\t} else {\n\t\tEditor.withoutNormalizing(editor, () => {\n\t\t\tTransforms.unwrapNodes(editor, {\n\t\t\t\tsplit: true,\n\t\t\t});\n\n\t\t\tTransforms.moveNodes(editor, {\n\t\t\t\tto: Path.next(listPath),\n\t\t\t});\n\t\t\tTransforms.setNodes(\n\t\t\t\teditor,\n\t\t\t\t{\n\t\t\t\t\ttype: 'paragraph',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\thanging: true,\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t}\n}\n\nexport function increaseListNesting(editor: StencylEditor) {\n\t/**\n\t * Get previous list item in same level\n\t * If no previous list item, do nothing.\n\t * If previous list item exists, get last node in it\n\t * If last node is a list, move current list item into list in last node from above\n\t * If not, wrap list item with a list of type of parent list and move into previous list item\n\t */\n\n\tconst {listEntry, listItemEntry} = getListEntries(editor);\n\n\tif (!listEntry) {\n\t\treturn;\n\t}\n\n\tconst [, listItemPath] = listItemEntry;\n\tconst previousListItemPath = getPreviousPath(listItemPath, 1);\n\tconst previousListItemEntry = getNodeAt(editor, previousListItemPath);\n\n\tif (!previousListItemEntry) {\n\t\treturn;\n\t}\n\n\tconst lastNodeEntry = getLastChildEntry(previousListItemEntry);\n\n\tif (!lastNodeEntry) {\n\t\treturn;\n\t}\n\n\tconst [lastNode, lastNodePath] = lastNodeEntry;\n\n\tif (!Element.isElement(lastNode)) {\n\t\treturn;\n\t}\n\n\tEditor.withoutNormalizing(editor, () => {\n\t\tif (lastNode.type === 'bulleted-list' || lastNode.type === 'numbered-list') {\n\t\t\tconst destinationEntry = getLastChildEntry(lastNodeEntry);\n\n\t\t\tif (destinationEntry) {\n\t\t\t\tTransforms.moveNodes(editor, {\n\t\t\t\t\tmatch: (o) => Element.isElement(o) && o.type === 'list-item',\n\t\t\t\t\tto: getNextPath(destinationEntry[1]),\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tTransforms.wrapNodes(\n\t\t\t\teditor,\n\t\t\t\t{\n\t\t\t\t\ttype: (listEntry[0] as any).type,\n\t\t\t\t\tchildren: [],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmatch: (o) => Element.isElement(o) && o.type === 'list-item',\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tTransforms.moveNodes(editor, {\n\t\t\t\tmatch: (o) => Element.isElement(o) && ['bulleted-list', 'numbered-list'].includes(o.type),\n\t\t\t\tto: getNextPath(lastNodePath),\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport function decreaseListNesting(editor: StencylEditor) {\n\tconst {listEntry, listItemEntry} = getListEntries(editor);\n\n\tif (!listEntry) {\n\t\treturn;\n\t}\n\n\tconst [listNode, listPath] = listEntry;\n\tconst [, listItemPath] = listItemEntry;\n\tconst [ancestorListItemNode, ancestorListItemPath] = Editor.parent(editor, listItemPath, {\n\t\tdepth: clamp(listItemPath.length - 1, 0, Infinity),\n\t});\n\tconst [, lastPath] = Editor.last(editor, listPath);\n\tconst nextItem = getNodeAt(editor, Path.next(listItemPath));\n\tconst lastItem = getNodeAt(editor, lastPath.slice(0, listItemPath.length));\n\n\tif (nextItem && lastItem) {\n\t\tconst range: Range = {\n\t\t\tanchor: Editor.point(editor, nextItem[1], {edge: 'start'}),\n\t\t\tfocus: Editor.point(editor, lastItem[1], {edge: 'end'}),\n\t\t};\n\n\t\tEditor.withoutNormalizing(editor, () => {\n\t\t\tTransforms.wrapNodes(\n\t\t\t\teditor,\n\t\t\t\t{\n\t\t\t\t\ttype: Element.isElement(listNode) ? (listNode.type as any) : 'bulleted-list',\n\t\t\t\t\tchildren: [],\n\t\t\t\t},\n\t\t\t\t{at: range},\n\t\t\t);\n\n\t\t\tTransforms.moveNodes(editor, {\n\t\t\t\tat: Path.next(listItemPath),\n\t\t\t\tto: [...listItemPath, 1],\n\t\t\t});\n\t\t});\n\t}\n\n\tif (Editor.isEditor(ancestorListItemNode)) {\n\t\tEditor.withoutNormalizing(editor, () => {\n\t\t\tTransforms.unwrapNodes(editor, {\n\t\t\t\tsplit: true,\n\t\t\t});\n\n\t\t\tTransforms.moveNodes(editor, {\n\t\t\t\tto: Path.next(listPath),\n\t\t\t});\n\t\t\tTransforms.setNodes(\n\t\t\t\teditor,\n\t\t\t\t{\n\t\t\t\t\ttype: 'paragraph',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\thanging: true,\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t} else {\n\t\tTransforms.moveNodes(editor, {\n\t\t\tat: listItemPath,\n\t\t\tto: Path.next(ancestorListItemPath),\n\t\t});\n\t}\n}\n","import {IS_MAC} from '../../utils';\nimport {KeyboardEvent} from 'react';\nimport {StencylEditor} from '../../types';\nimport {leafKeyBindings} from '../leaf/keybinding';\nimport {listsKeyBindings} from '../lists/keybinding';\n\nexport type KeyBinding = (editor: StencylEditor, e: KeyboardEvent) => void;\n\nexport type KeyBindings = Record<string, KeyBinding>;\n\nexport type KeyBindingFn = () => KeyBindings;\n\nexport function mergeKeyBindings(generators: Array<KeyBindingFn>): KeyBindings {\n\tlet bindings: KeyBindings = {};\n\n\tfor (const generator of generators) {\n\t\tbindings = {...bindings, ...generator()};\n\t}\n\n\treturn bindings;\n}\n\nexport function toHotkey(e: KeyboardEvent) {\n\tconst list: Array<string> = [];\n\tconst key = e.key.toLowerCase();\n\n\tif (IS_MAC && e.metaKey) {\n\t\tif (key === 'meta') {\n\t\t\treturn 'mod';\n\t\t}\n\n\t\tlist.push('mod');\n\t}\n\n\tif (!IS_MAC && e.ctrlKey) {\n\t\tif (key === 'control') {\n\t\t\treturn 'mod';\n\t\t}\n\n\t\tlist.push('mod');\n\t}\n\n\tif (IS_MAC && e.ctrlKey && key !== 'control') {\n\t\tlist.push('control');\n\t}\n\n\tif (e.altKey && key !== 'alt') {\n\t\tlist.push('alt');\n\t}\n\n\tif (e.shiftKey && key !== 'shift') {\n\t\tlist.push('shift');\n\t}\n\n\tlist.push(key);\n\n\treturn list.join('+');\n}\n\n// ------------------------------------------------\n// Operations\n// ------------------------------------------------\n\nconst generators: Array<KeyBindingFn> = [leafKeyBindings, listsKeyBindings];\n\nconst KEYBINDINGS = mergeKeyBindings(generators);\n\nexport function runKeyBindings(editor: StencylEditor, e: KeyboardEvent) {\n\tconst hotkey = toHotkey(e);\n\tconst keybinding = KEYBINDINGS[hotkey];\n\n\tif (keybinding) {\n\t\tkeybinding(editor, e);\n\t}\n}\n","import {\n\ttoggleBoldMark,\n\ttoggleItalicMark,\n\ttoggleStrikethroughMark,\n\ttoggleUnderlineMark,\n} from './commands';\n\nimport {KeyBindingFn} from '../keybindings';\n\nexport const leafKeyBindings: KeyBindingFn = () => ({\n\t'mod+b': (editor) => {\n\t\ttoggleBoldMark(editor);\n\t},\n\t'mod+i': (editor) => {\n\t\ttoggleItalicMark(editor);\n\t},\n\t'mod+u': (editor) => {\n\t\ttoggleUnderlineMark(editor);\n\t},\n\t'mod+shift+x': (editor) => {\n\t\ttoggleStrikethroughMark(editor);\n\t},\n});\n","import {decreaseListNesting, increaseListNesting} from './commands';\n\nimport {KeyBindingFn} from '../keybindings';\nimport {isBlockActive} from '../common/utils';\n\nexport const listsKeyBindings: KeyBindingFn = () => ({\n\ttab: (editor, e) => {\n\t\tconst isActive = isBlockActive(editor, 'list-item');\n\n\t\tif (isActive) {\n\t\t\te.preventDefault();\n\t\t\tincreaseListNesting(editor);\n\t\t}\n\t},\n\t'shift+tab': (editor, e) => {\n\t\tconst isActive = isBlockActive(editor, 'list-item');\n\n\t\tif (isActive) {\n\t\t\te.preventDefault();\n\t\t\tdecreaseListNesting(editor);\n\t\t}\n\t},\n});\n","import {Editable, useSlateStatic} from 'slate-react';\nimport React, {FC, KeyboardEvent, PropsWithChildren, memo, useCallback} from 'react';\n\nimport {EditorElement} from '../element';\nimport {Leaf} from '../../../../packages/leaf';\nimport constants from '../../../../constants';\nimport css from './style.module.css';\nimport {runKeyBindings} from '../../../../packages/keybindings';\n\ntype CanvasProps = PropsWithChildren<{}>;\n\nconst canvasWidthStyle = {\n\twidth: constants.paperSizes.a4.width,\n\tminHeight: constants.paperSizes.a4.height,\n};\n\nconst BaseCanvas: FC<CanvasProps> = () => {\n\tconst editor = useSlateStatic();\n\tconst renderElement = useCallback((props) => <EditorElement {...props} />, []);\n\tconst renderLeaf = useCallback((props) => <Leaf {...props} />, []);\n\tconst handleKeyDown = useCallback((e: KeyboardEvent) => {\n\t\trunKeyBindings(editor, e);\n\t}, []);\n\n\treturn (\n\t\t<div className={css.container} style={canvasWidthStyle}>\n\t\t\t<Editable\n\t\t\t\tspellCheck\n\t\t\t\tplaceholder='Start typing...'\n\t\t\t\trenderElement={renderElement}\n\t\t\t\trenderLeaf={renderLeaf}\n\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport const Canvas = memo(BaseCanvas);\n","export const DATE_FORMATS = [\n\t'do MMMM, yyyy',\n\t'dd MMMM, yyyy',\n\t'MMMM dd, yyyy',\n\t'dd/MM/yyyy',\n\t'MM/dd/yyyy',\n\t'MMM d, yyyy',\n\t'dd MMM, yy',\n\t'dd-MM-yyyy',\n\t'dd-MM-yy',\n];\n\nexport const TIME_FORMATS = ['hh:mm a', 'hh:mm aaaa', 'HH:mm'];\n","import React, {Children, FC, PropsWithChildren, ReactElement, cloneElement} from 'react';\n\nimport classNames from 'classnames';\n\ntype FieldProps = PropsWithChildren<{\n\tlabel?: string;\n\tclassName?: string;\n}>;\n\nconst Field: FC<FieldProps> = ({className, children, label}) => {\n\treturn (\n\t\t<div className={className}>\n\t\t\t{!!label?.length && (\n\t\t\t\t<label className='text-blue-500 block mb-4 text-subhead font-medium'>{label}</label>\n\t\t\t)}\n\t\t\t{Children.map(children, (child: ReactElement) =>\n\t\t\t\tcloneElement(child, {\n\t\t\t\t\tclassName: classNames(\n\t\t\t\t\t\tchild.props.className,\n\t\t\t\t\t\t'w-full appearance-none border border-gray-200 rounded-lg h-36 px-8 transition:colors transition:shadow duration-250 focus:border-blue-500 focus:shadow-outline',\n\t\t\t\t\t),\n\t\t\t\t}),\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Field;\n","import {DependencyList, MouseEvent, useCallback, useEffect, useMemo, useState} from 'react';\nimport {EditableElement, ImageElement, TableElement} from '../types';\nimport {useFocused, useSlate} from 'slate-react';\n\nimport {NodeEntry} from 'slate';\nimport {getConfigurableBlockInSelection} from '../packages/common/utils';\nimport {sleep} from '../utils';\nimport useDebouncedEffectLib from 'use-debounced-effect';\n\nexport type ModalActions = {\n\tvisible: boolean;\n\topen: Fn;\n\tclose: () => Promise<void>;\n\ttoggle: Fn;\n};\n\nexport function useMouseDown(fn?: Fn): (e: MouseEvent) => void {\n\treturn useCallback(\n\t\t(e: MouseEvent) => {\n\t\t\te?.preventDefault();\n\t\t\tfn?.();\n\t\t},\n\t\t[fn],\n\t);\n}\n\nexport function useModalUtils(initialOpen: boolean = false, animationDuration = 0): ModalActions {\n\tconst [visible, setVisible] = useState(initialOpen);\n\n\tconst handleOpen = useCallback(() => {\n\t\tsetVisible(true);\n\t}, []);\n\n\tconst handleClose = useCallback(async () => {\n\t\tsetVisible(false);\n\t\tawait sleep(animationDuration);\n\t\treturn Promise.resolve();\n\t}, [animationDuration]);\n\n\tconst handleToggle = useCallback(() => {\n\t\tsetVisible((o) => !o);\n\t}, []);\n\n\tconst actions: ModalActions = useMemo(\n\t\t() => ({\n\t\t\tvisible,\n\t\t\topen: handleOpen,\n\t\t\tclose: handleClose,\n\t\t\ttoggle: handleToggle,\n\t\t}),\n\t\t[handleClose, handleOpen, handleToggle, visible],\n\t);\n\n\treturn actions;\n}\n\nexport function useBooleanState(initialState: boolean) {\n\tconst [state, setState] = useState(initialState);\n\tconst toggleState = useCallback(() => {\n\t\tsetState((o) => !o);\n\t}, []);\n\treturn [state, toggleState, setState] as const;\n}\n\nexport function useDebounceEffect(callback: Fn, deps: DependencyList, delay = 500) {\n\treturn useDebouncedEffectLib(callback, delay, deps);\n}\n\nexport function useEditingBlock() {\n\tconst editor = useSlate();\n\tconst focused = useFocused();\n\tconst [entry, setEntry] = useState<NodeEntry<ImageElement | TableElement | EditableElement>>();\n\n\tuseEffect(() => {\n\t\tconst block = getConfigurableBlockInSelection(editor);\n\t\tsetEntry((o) => (focused ? block : o));\n\t}, [editor.selection, focused]);\n\n\treturn entry;\n}\n\nexport function withMouseDown(fn?: Fn): (e: MouseEvent) => void {\n\tconst wrapped = (e: MouseEvent) => {\n\t\te?.preventDefault();\n\t\tfn?.();\n\t};\n\treturn wrapped;\n}\n","import React, {Children, FC, PropsWithChildren, ReactElement, cloneElement, memo} from 'react';\n\nimport classNames from 'classnames';\nimport {useMouseDown} from '../../../../hooks';\n\ntype IconProps = PropsWithChildren<{\n\tclassName?: string;\n\tonPress?: Fn;\n}>;\n\nconst BaseIcon: FC<IconProps> = ({children, className, onPress}) => {\n\tconst handlePress = useMouseDown(onPress);\n\treturn (\n\t\t<figure\n\t\t\tonMouseDown={handlePress}\n\t\t\tclassName={classNames('flex-shrink-0', className, {\n\t\t\t\t's-16': !/\\bs-[0-9]/gi.test(className ?? ''),\n\t\t\t})}\n\t\t>\n\t\t\t{Children.map(children, (child: ReactElement) =>\n\t\t\t\tchild\n\t\t\t\t\t? cloneElement(child, {\n\t\t\t\t\t\t\tclassName: classNames(\n\t\t\t\t\t\t\t\tchild.props.className,\n\t\t\t\t\t\t\t\t'h-full w-full object-contain  object-center m-auto pointer-events-none',\n\t\t\t\t\t\t\t),\n\t\t\t\t\t  })\n\t\t\t\t\t: child,\n\t\t\t)}\n\t\t</figure>\n\t);\n};\n\nconst Icon = memo(BaseIcon);\n\nexport default Icon;\n","import React, {ChangeEvent, FC, KeyboardEvent, useState} from 'react';\n\nimport {ReactComponent as CirclePlus} from '../../../../assets/images/icon-circle-plus.svg';\nimport Icon from '../icon';\nimport {StencylOption} from '../../../../types';\nimport {ReactComponent as Trash} from '../../../../assets/images/icon-trash.svg';\n\ntype OptionItemProps = {\n\toption: StencylOption;\n\tonClickDelete?: (id: string) => void;\n};\n\ntype OptionsProps = {\n\tclassName?: string;\n\tlabel?: string;\n\toptions: Array<StencylOption>;\n\tonCreateOption?: (text: string) => void;\n\tonDeleteOption?: (id: string) => void;\n};\n\nconst OptionItem: FC<OptionItemProps> = ({option, onClickDelete}) => {\n\treturn (\n\t\t<div className='flex items-center justify-between px-8 h-36 w-full border border-gray-200 bg-gray-100 rounded-lg'>\n\t\t\t<span className='text-gray-500'>{option.label}</span>\n\t\t\t<Icon\n\t\t\t\tonPress={() => onClickDelete?.(option.id)}\n\t\t\t\tclassName='cursor-pointer text-gray-500 transition-colors duration-250 hover:text-red-300'\n\t\t\t>\n\t\t\t\t<Trash />\n\t\t\t</Icon>\n\t\t</div>\n\t);\n};\n\nexport const Options: FC<OptionsProps> = ({\n\tclassName,\n\tlabel,\n\toptions,\n\tonCreateOption,\n\tonDeleteOption,\n}) => {\n\tconst [editingOption, setEditingOption] = useState('');\n\n\tconst handleSubmitEditingOption = () => {\n\t\tif (!editingOption?.trim().length) {\n\t\t\treturn;\n\t\t}\n\n\t\tonCreateOption?.(editingOption);\n\t\tsetEditingOption('');\n\t};\n\n\tconst handleChangeEditingOption = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetEditingOption(e.target.value);\n\t};\n\n\tconst handleEditingOptionKeydown = (e: KeyboardEvent) => {\n\t\tif (e.key?.toLowerCase() === 'enter') {\n\t\t\te.preventDefault();\n\t\t\thandleSubmitEditingOption();\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{!!label?.length && (\n\t\t\t\t<label className='text-blue-500 block mb-4 text-subhead font-medium'>{label}</label>\n\t\t\t)}\n\t\t\t<div className='space-y-8'>\n\t\t\t\t{options.map((o) => (\n\t\t\t\t\t<OptionItem option={o} key={o.id} onClickDelete={onDeleteOption} />\n\t\t\t\t))}\n\t\t\t\t<div className='flex items-center justify-between px-8 h-36 w-full border border-gray-200 rounded-lg transition:colors transition:shadow duration-250 focus-within:shadow-outline focus-within:border-blue-500'>\n\t\t\t\t\t<input\n\t\t\t\t\t\tvalue={editingOption}\n\t\t\t\t\t\tclassName='border-none h-full w-full bg-transparent m-0'\n\t\t\t\t\t\tplaceholder='+ Add an option'\n\t\t\t\t\t\tonChange={handleChangeEditingOption}\n\t\t\t\t\t\tonKeyDown={handleEditingOptionKeydown}\n\t\t\t\t\t/>\n\t\t\t\t\t<Icon\n\t\t\t\t\t\tonPress={handleSubmitEditingOption}\n\t\t\t\t\t\tclassName='cursor-pointer text-blue-500 transition-colors duration-250 hover:text-blue-600'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CirclePlus />\n\t\t\t\t\t</Icon>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React, {FC, memo} from 'react';\n\nimport ReactSwitch from 'react-switch';\n\ntype SwitchProps = {\n\tclassName?: string;\n\tvalue: boolean;\n\tonChangeValue: (value: boolean) => void;\n};\n\nconst BaseSwitch: FC<SwitchProps> = ({className, value, onChangeValue}) => {\n\treturn (\n\t\t<ReactSwitch\n\t\t\tchecked={value}\n\t\t\tclassName={className}\n\t\t\tonChange={onChangeValue}\n\t\t\toffColor='#ADC5FA'\n\t\t\tonColor='#326FF3'\n\t\t\tcheckedIcon={false}\n\t\t\tuncheckedIcon={false}\n\t\t\thandleDiameter={18}\n\t\t\theight={22}\n\t\t\twidth={44}\n\t\t\tactiveBoxShadow='0 0 0 4px rgba(103, 126, 138, 0.125)'\n\t\t/>\n\t);\n};\n\nconst Switch = memo(BaseSwitch);\n\nexport default Switch;\n","import {\n\tEditableDateElement,\n\tEditableElement,\n\tEditableImageElement,\n\tEditableOptionsElement,\n\tEditableTextElement,\n\tStencylEditor,\n} from '../../types';\nimport {Element, Node, NodeEntry, Transforms} from 'slate';\nimport {getCurrentEditableElement, invalidateEditableElementsCache} from './utils';\n\nexport function insertInlineEditable(editor: StencylEditor, element: EditableElement) {\n\tTransforms.insertNodes(editor, element, {voids: false});\n\tinvalidateEditableElementsCache();\n}\n\nexport function insertInvisibleEditable(editor: StencylEditor, element: EditableElement) {\n\tTransforms.insertNodes(editor, element);\n\tinvalidateEditableElementsCache();\n}\n\nexport function updateInlineEditable(\n\teditor: StencylEditor,\n\tattributes: Partial<EditableElement> = {},\n\teditableEntry?: NodeEntry<Node>,\n) {\n\teditableEntry = editableEntry ?? getCurrentEditableElement(editor) ?? undefined;\n\n\tif (!editableEntry) {\n\t\treturn;\n\t}\n\n\tconst [editableNode, editablePath] = editableEntry;\n\n\tif (!Element.isElement(editableNode) || editableNode.type !== 'editable') {\n\t\treturn;\n\t}\n\n\tTransforms.setNodes(\n\t\teditor,\n\t\t{\n\t\t\tdefaultValue: attributes.defaultValue ?? editableNode.defaultValue,\n\t\t\tlabel: attributes.label ?? editableNode.label,\n\t\t\ttip: attributes.tip,\n\t\t\tlinkId: attributes.linkId ?? editableNode.linkId,\n\t\t\tmultiline:\n\t\t\t\teditableNode.dataType === 'text'\n\t\t\t\t\t? (attributes as EditableTextElement).multiline ?? editableNode.multiline\n\t\t\t\t\t: undefined,\n\t\t\toptions:\n\t\t\t\teditableNode.dataType === 'options' || editableNode.dataType === 'radio'\n\t\t\t\t\t? (attributes as EditableOptionsElement).options ?? editableNode.options\n\t\t\t\t\t: undefined,\n\t\t\tdateTimeFormat:\n\t\t\t\teditableNode.dataType === 'date' || editableNode.dataType === 'time'\n\t\t\t\t\t? (attributes as EditableDateElement).dateTimeFormat ?? editableNode.dateTimeFormat\n\t\t\t\t\t: undefined,\n\t\t\twidth:\n\t\t\t\teditableNode.dataType === 'image'\n\t\t\t\t\t? (attributes as EditableImageElement).width ?? editableNode.width\n\t\t\t\t\t: undefined,\n\t\t\theight:\n\t\t\t\teditableNode.dataType === 'image'\n\t\t\t\t\t? (attributes as EditableImageElement).height ?? editableNode.height\n\t\t\t\t\t: undefined,\n\t\t},\n\t\t{at: editablePath, hanging: true, voids: true},\n\t);\n\n\tinvalidateEditableElementsCache();\n}\n","import {DATE_FORMATS, TIME_FORMATS} from '../../../../../constants/datetime';\nimport {EditableElement, ImageElement, TableElement} from '../../../../../types';\nimport React, {\n\tChangeEvent,\n\tFC,\n\tFragment,\n\tKeyboardEvent,\n\tmemo,\n\tuseCallback,\n\tuseEffect,\n\tuseRef,\n\tuseState,\n} from 'react';\nimport {formatDate, generateUUID, isEnterKey} from '../../../../../utils';\n\nimport Field from '../../field';\nimport {NodeEntry} from 'slate';\nimport {Options} from '../../options';\nimport Switch from '../../switch';\nimport {updateInlineEditable} from '../../../../../packages/editable/commands';\nimport {useSlateStatic} from 'slate-react';\n\ntype EditEditableProps = {\n\tentry: NodeEntry<ImageElement | TableElement | EditableElement>;\n};\n\nconst BaseEditEditable: FC<EditEditableProps> = ({entry}) => {\n\tconst now = useRef(Date.now());\n\tconst editor = useSlateStatic();\n\tconst [node, path] = entry;\n\n\tif (node.type !== 'editable') {\n\t\treturn null;\n\t}\n\n\tconst [attributes, setAttributes] = useState(node);\n\n\tuseEffect(() => {\n\t\tsetAttributes(node);\n\t}, [node]);\n\n\tconst persistChanges = (patch: Partial<EditableElement> = {}) => {\n\t\tconst current: Partial<EditableElement> = {...attributes, ...patch};\n\t\tcurrent.label = current.label?.length ? current.label : undefined;\n\t\tcurrent.tip = current.tip?.length ? current.tip : undefined;\n\n\t\tupdateInlineEditable(editor, current, [node, path]);\n\t};\n\n\tconst handleBlurInput = () => {\n\t\tpersistChanges();\n\t};\n\n\tconst handleKeyDown = (e: KeyboardEvent) => {\n\t\tif (isEnterKey(e)) {\n\t\t\tpersistChanges();\n\t\t}\n\t};\n\n\tconst handleChangeLabel = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tconst label = e.target?.value ?? '';\n\t\tsetAttributes((o) => ({...o, label}));\n\t};\n\n\tconst handleChangeMultiline = (value: boolean) => {\n\t\tsetAttributes((o) => ({...o, multiline: value}));\n\t\tpersistChanges({multiline: value});\n\t};\n\n\tconst handleChangeTip = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tconst tip = e.target?.value ?? '';\n\t\tsetAttributes((o) => ({...o, tip}));\n\t};\n\n\tconst handleChangeDateTimeFormat = useCallback(\n\t\t(e: ChangeEvent<HTMLSelectElement>) => {\n\t\t\tconst value = e.target.value;\n\t\t\tsetAttributes((o) => ({...o, dateTimeFormat: value}));\n\t\t\tpersistChanges({dateTimeFormat: value});\n\t\t},\n\t\t[persistChanges],\n\t);\n\n\tconst handleChangeWidth = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tif (attributes.dataType !== 'image') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst parsedValue = parseInt(e.target.value);\n\t\tconst eventualWidth = isNaN(parsedValue) || parsedValue < 1 ? attributes.width : parsedValue;\n\t\tsetAttributes((o) => ({...o, width: eventualWidth}));\n\t};\n\n\tconst handleChangeHeight = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tif (attributes.dataType !== 'image') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst parsedValue = parseInt(e.target.value);\n\t\tconst eventualHeight = isNaN(parsedValue) || parsedValue < 1 ? attributes.height : parsedValue;\n\t\tsetAttributes((o) => ({...o, height: eventualHeight}));\n\t};\n\n\tconst handleCreateOption = (text: string) => {\n\t\tif (attributes.dataType !== 'options' && attributes.dataType !== 'radio') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = generateUUID();\n\t\tconst eventualValue = [...attributes.options, {id, label: text}];\n\n\t\tsetAttributes((o) => ({...o, options: eventualValue}));\n\t\tpersistChanges({options: eventualValue});\n\t};\n\n\tconst handleDeleteOption = useCallback((id: string) => {\n\t\tif (attributes.dataType !== 'options' && attributes.dataType !== 'radio') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst eventualValue = [...attributes.options];\n\t\tconst index = eventualValue.findIndex((o) => o.id === id);\n\n\t\tif (!~index) {\n\t\t\treturn;\n\t\t}\n\n\t\teventualValue.splice(index, 1);\n\t\tsetAttributes((o) => ({...o, options: eventualValue}));\n\t\tpersistChanges({options: eventualValue});\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='text-headline text-blue-500 mb-8'>Editable {attributes.dataType}</div>\n\t\t\t<div className='text-gray-500 mb-24 text-subhead'>\n\t\t\t\tConfigure properties of editable elements, which show up as form elements to users.\n\t\t\t</div>\n\t\t\t<div className='space-y-16'>\n\t\t\t\t<Field label='Question'>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Type a question here...'\n\t\t\t\t\t\tvalue={attributes.label}\n\t\t\t\t\t\tonChange={handleChangeLabel}\n\t\t\t\t\t\tonBlur={handleBlurInput}\n\t\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\t/>\n\t\t\t\t</Field>\n\t\t\t\t{attributes.linkId || (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t{attributes.dataType === 'text' && (\n\t\t\t\t\t\t\t<div className='flex items-center justify-between'>\n\t\t\t\t\t\t\t\t<div>Multiline text</div>\n\t\t\t\t\t\t\t\t<Switch value={!!attributes.multiline} onChangeValue={handleChangeMultiline} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{attributes.dataType === 'image' && (\n\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t<div className='flex items-center justify-between'>\n\t\t\t\t\t\t\t\t\t<div className='bg-gray-500 text-footnote font-medium rounded-default px-8 py-4 text-white uppercase'>\n\t\t\t\t\t\t\t\t\t\tWidth\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<Field className='w-120'>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='0'\n\t\t\t\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\t\t\t\tvalue={attributes.width}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChangeWidth}\n\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlurInput}\n\t\t\t\t\t\t\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='flex items-center justify-between'>\n\t\t\t\t\t\t\t\t\t<div className='bg-gray-500 text-footnote font-medium rounded-default px-8 py-4 text-white uppercase'>\n\t\t\t\t\t\t\t\t\t\tHeight\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<Field className='w-120'>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='0'\n\t\t\t\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\t\t\t\tvalue={attributes.height}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChangeHeight}\n\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlurInput}\n\t\t\t\t\t\t\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{attributes.dataType === 'date' && (\n\t\t\t\t\t\t\t<Field label='Date format'>\n\t\t\t\t\t\t\t\t<select value={attributes.dateTimeFormat} onChange={handleChangeDateTimeFormat}>\n\t\t\t\t\t\t\t\t\t<option hidden value=''>\n\t\t\t\t\t\t\t\t\t\tChoose one\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t{DATE_FORMATS.map((o) => (\n\t\t\t\t\t\t\t\t\t\t<option value={o} key={o}>\n\t\t\t\t\t\t\t\t\t\t\t{formatDate(now.current, o)}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{attributes.dataType === 'time' && (\n\t\t\t\t\t\t\t<Field label='Time format'>\n\t\t\t\t\t\t\t\t<select value={attributes.dateTimeFormat} onChange={handleChangeDateTimeFormat}>\n\t\t\t\t\t\t\t\t\t<option hidden value=''>\n\t\t\t\t\t\t\t\t\t\tChoose one\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t{TIME_FORMATS.map((o) => (\n\t\t\t\t\t\t\t\t\t\t<option value={o} key={o}>\n\t\t\t\t\t\t\t\t\t\t\t{formatDate(now.current, o)}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field label='Description'>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tplaceholder='Type a description here'\n\t\t\t\t\t\t\t\tvalue={attributes.tip ?? ''}\n\t\t\t\t\t\t\t\tonChange={handleChangeTip}\n\t\t\t\t\t\t\t\tonBlur={handleBlurInput}\n\t\t\t\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t{(attributes.dataType === 'options' || attributes.dataType === 'radio') && (\n\t\t\t\t\t\t\t<Options\n\t\t\t\t\t\t\t\tlabel='Options'\n\t\t\t\t\t\t\t\toptions={attributes.options}\n\t\t\t\t\t\t\t\tonCreateOption={handleCreateOption}\n\t\t\t\t\t\t\t\tonDeleteOption={handleDeleteOption}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Fragment>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport const EditEditable = memo(BaseEditEditable);\n","import {Editor, Element, NodeEntry, Range, Transforms} from 'slate';\nimport {ImageElement, StencylEditor} from '../../types';\n\nimport {getEmptyTextNode} from '../common/utils';\n\nexport type ImageInsertOptions = {\n\twidth: number;\n\theight: number;\n\turl: string;\n};\n\nexport type ImageResizeOptions = {\n\tentry?: NodeEntry<ImageElement>;\n\twidth?: number;\n\theight?: number;\n};\n\nexport function getCurrentInlineImage(editor: StencylEditor) {\n\tconst {selection} = editor;\n\n\tif (!selection) {\n\t\treturn null;\n\t}\n\n\tconst [match] = Editor.nodes<ImageElement>(editor, {\n\t\tmatch: (node) => Element.isElement(node) && editor.isInline(node) && node.type === 'image',\n\t\tmode: 'lowest',\n\t});\n\n\treturn match;\n}\n\nexport function insertInlineImage(editor: StencylEditor, options: ImageInsertOptions) {\n\tif (!editor.selection) {\n\t\treturn;\n\t}\n\n\tif (!Range.isCollapsed(editor.selection)) {\n\t\tTransforms.delete(editor);\n\t}\n\n\tTransforms.insertNodes(editor, {\n\t\ttype: 'image',\n\t\turl: options.url,\n\t\twidth: options.width,\n\t\theight: options.height,\n\t\tchildren: getEmptyTextNode(),\n\t});\n}\n\nexport function resizeInlineImage(editor: StencylEditor, options: ImageResizeOptions = {}) {\n\tconst currentImage = options.entry ?? getCurrentInlineImage(editor);\n\n\tif (!currentImage || (!options.width && !options.height)) {\n\t\treturn;\n\t}\n\n\tconst [, path] = currentImage;\n\tconst {width, height} = options;\n\n\tTransforms.setNodes(\n\t\teditor,\n\t\t{\n\t\t\twidth,\n\t\t\theight,\n\t\t},\n\t\t{at: path},\n\t);\n}\n","import {EditableElement, ImageElement, TableElement} from '../../../../../types';\nimport React, {ChangeEvent, FC, KeyboardEvent, memo, useState} from 'react';\n\nimport Field from '../../field';\nimport Icon from '../../icon';\nimport {NodeEntry} from 'slate';\nimport {ReactComponent as Photo} from '../../../../../assets/images/icon-photo.svg';\nimport {isEnterKey} from '../../../../../utils';\nimport {resizeInlineImage} from '../../../../../packages/image/commands';\nimport {useSlateStatic} from 'slate-react';\n\ntype EditImageProps = {\n\tentry: NodeEntry<ImageElement | TableElement | EditableElement>;\n};\n\nconst BaseEditImage: FC<EditImageProps> = ({entry}) => {\n\tconst editor = useSlateStatic();\n\tconst [node, path] = entry;\n\n\tif (node.type !== 'image') {\n\t\treturn null;\n\t}\n\n\tconst ratio = node.width / node.height;\n\tconst [width, setWidth] = useState(node.width);\n\tconst [height, setHeight] = useState(node.height);\n\n\tconst handleChangeWidth = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tconst parsedValue = parseInt(e.target.value);\n\t\tconst eventualWidth = isNaN(parsedValue) || parsedValue < 1 ? width : parsedValue;\n\t\tconst eventualHeight = Math.round(eventualWidth / ratio);\n\n\t\tsetWidth(eventualWidth);\n\t\tsetHeight(eventualHeight);\n\t};\n\n\tconst handleChangeHeight = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tconst parsedValue = parseInt(e.target.value);\n\t\tconst eventualHeight = isNaN(parsedValue) || parsedValue < 1 ? height : parsedValue;\n\t\tconst eventualWidth = Math.round(eventualHeight * ratio);\n\n\t\tsetWidth(eventualWidth);\n\t\tsetHeight(eventualHeight);\n\t};\n\n\tconst persistChanges = () => {\n\t\tresizeInlineImage(editor, {\n\t\t\tentry: [node, path],\n\t\t\twidth,\n\t\t\theight,\n\t\t});\n\t};\n\n\tconst handleBlurInput = () => {\n\t\tpersistChanges();\n\t};\n\n\tconst handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n\t\tif (isEnterKey(e)) {\n\t\t\tpersistChanges();\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='text-headline text-blue-500 mb-16'>Edit an image</div>\n\t\t\t<div className='space-y-8'>\n\t\t\t\t<div className='space-x-16 flex items-center'>\n\t\t\t\t\t<Icon className='s-20 text-gray-500'>\n\t\t\t\t\t\t<Photo />\n\t\t\t\t\t</Icon>\n\t\t\t\t\t<Field className='w-full'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttitle={node.url}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tplaceholder='Paste a link to an image'\n\t\t\t\t\t\t\tdefaultValue={node.url}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Field>\n\t\t\t\t</div>\n\t\t\t\t<div className='flex items-center justify-between'>\n\t\t\t\t\t<div className='bg-gray-500 text-footnote font-medium rounded-default px-8 py-4 text-white uppercase'>\n\t\t\t\t\t\tWidth\n\t\t\t\t\t</div>\n\t\t\t\t\t<Field className='w-120'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tplaceholder='0'\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tvalue={width}\n\t\t\t\t\t\t\tonChange={handleChangeWidth}\n\t\t\t\t\t\t\tonBlur={handleBlurInput}\n\t\t\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Field>\n\t\t\t\t</div>\n\t\t\t\t<div className='flex items-center justify-between'>\n\t\t\t\t\t<div className='bg-gray-500 text-footnote font-medium rounded-default px-8 py-4 text-white uppercase'>\n\t\t\t\t\t\tHeight\n\t\t\t\t\t</div>\n\t\t\t\t\t<Field className='w-120'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tplaceholder='0'\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tvalue={height}\n\t\t\t\t\t\t\tonChange={handleChangeHeight}\n\t\t\t\t\t\t\tonBlur={handleBlurInput}\n\t\t\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Field>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport const EditImage = memo(BaseEditImage);\n","import {Editor, Element} from 'slate';\nimport {StencylEditor, TableCellElement, TableElement, TableRowElement} from '../../types';\n\nimport {array} from '../../utils';\n\nexport const DEFAULT_TABLE_CELL_WIDTH = 48;\nexport const DEFAULT_TABLE_CELL_HEIGHT = 48;\nexport const DEFAULT_TABLE_ROWS = 2;\nexport const DEFAULT_TABLE_COLS = 2;\n\nexport function getTableEntries(editor: StencylEditor) {\n\tconst [tableEntry, tableRowEntry, tableCellEntry] = Editor.nodes(editor, {\n\t\tmatch: (node) =>\n\t\t\tElement.isElement(node) && ['table', 'table-row', 'table-cell'].includes(node.type),\n\t\tmode: 'all',\n\t});\n\n\treturn {tableEntry, tableRowEntry, tableCellEntry};\n}\n\nexport function createTableCell(\n\twidth = DEFAULT_TABLE_CELL_WIDTH,\n\theight = DEFAULT_TABLE_CELL_HEIGHT,\n): TableCellElement {\n\treturn {\n\t\ttype: 'table-cell',\n\t\tchildren: [{type: 'paragraph', children: [{text: ''}]}],\n\t\twidth,\n\t\theight,\n\t};\n}\n\nexport function createTableRow(columns = DEFAULT_TABLE_COLS): TableRowElement {\n\treturn {\n\t\ttype: 'table-row',\n\t\tchildren: array(columns).map(() => createTableCell()),\n\t};\n}\n\nexport function createTable(rows = DEFAULT_TABLE_ROWS, columns = DEFAULT_TABLE_COLS): TableElement {\n\treturn {\n\t\ttype: 'table',\n\t\tchildren: array(rows).map(() => createTableRow(columns)),\n\t};\n}\n","import {Editor, Element, Path, Range, Text, Transforms} from 'slate';\nimport {array, lastItem} from '../../utils';\nimport {createTable, createTableCell, createTableRow, getTableEntries} from './utils';\nimport {getCurrentBlock, getNextPath, getSelectionLeaf} from '../common/utils';\n\nimport {StencylEditor} from '../../types';\nimport colors from '../../constants/colors';\n\nexport function insertTableBlock(editor: StencylEditor) {\n\tconst {selection} = editor;\n\n\tif (!selection) {\n\t\treturn;\n\t}\n\n\tlet destination: Path | undefined;\n\n\tif (!Range.isCollapsed(selection)) {\n\t\tTransforms.splitNodes(editor);\n\t} else {\n\t\tconst block = getCurrentBlock(editor, 'lowest');\n\n\t\tif (block) {\n\t\t\tconst [blockNode, blockPath] = block;\n\t\t\tconst leaf = getSelectionLeaf(editor);\n\n\t\t\tif (leaf && Text.isText(leaf[0]) && !leaf[0].text.length) {\n\t\t\t\tdestination =\n\t\t\t\t\tElement.isElement(blockNode) && blockNode.type === 'list-item-container'\n\t\t\t\t\t\t? getNextPath(blockPath)\n\t\t\t\t\t\t: blockPath;\n\t\t\t} else {\n\t\t\t\tdestination = getNextPath(blockPath);\n\t\t\t}\n\t\t}\n\t}\n\n\tTransforms.insertNodes(editor, createTable(), {\n\t\tat: destination,\n\t\tselect: true,\n\t});\n\n\tconst {tableEntry} = getTableEntries(editor);\n\tconst firstPoint = Editor.start(editor, tableEntry[1]);\n\n\tTransforms.setSelection(editor, {\n\t\tanchor: firstPoint,\n\t\tfocus: firstPoint,\n\t});\n}\n\nexport function removeTableBlock(editor: StencylEditor) {\n\tconst {tableEntry} = getTableEntries(editor);\n\n\tif (tableEntry) {\n\t\tTransforms.removeNodes(editor, {at: tableEntry[1], hanging: true});\n\t}\n}\n\nexport function insertTableRowAbove(editor: StencylEditor) {\n\tconst {tableRowEntry} = getTableEntries(editor);\n\n\tif (!tableRowEntry) {\n\t\treturn;\n\t}\n\n\tconst [tableRowNode, tableRowPath] = tableRowEntry;\n\tconst colCount = Element.isElement(tableRowNode) ? tableRowNode.children.length : 1;\n\n\tTransforms.insertNodes(editor, createTableRow(colCount), {\n\t\tat: tableRowPath,\n\t});\n}\n\nexport function insertTableRowBelow(editor: StencylEditor) {\n\tconst {tableRowEntry} = getTableEntries(editor);\n\n\tif (!tableRowEntry) {\n\t\treturn;\n\t}\n\n\tconst [tableRowNode, tableRowPath] = tableRowEntry;\n\tconst colCount = Element.isElement(tableRowNode) ? tableRowNode.children.length : 1;\n\n\tTransforms.insertNodes(editor, createTableRow(colCount), {\n\t\tat: getNextPath(tableRowPath),\n\t});\n}\n\nexport function removeTableRow(editor: StencylEditor) {\n\tconst {tableEntry, tableRowEntry} = getTableEntries(editor);\n\n\tif (!tableEntry || !tableRowEntry) {\n\t\treturn;\n\t}\n\n\tconst [tableNode] = tableEntry;\n\tconst [, tableRowPath] = tableRowEntry;\n\tconst rowCount = Element.isElement(tableNode) ? tableNode.children.length : 1;\n\n\tif (rowCount <= 1) {\n\t\treturn;\n\t}\n\n\tTransforms.removeNodes(editor, {\n\t\tat: tableRowPath,\n\t\thanging: true,\n\t});\n}\n\nexport function insertTableColumnLeft(editor: StencylEditor) {\n\tconst {tableEntry, tableCellEntry} = getTableEntries(editor);\n\n\tif (!tableEntry || !tableCellEntry) {\n\t\treturn;\n\t}\n\n\tconst [tableNode, tablePath] = tableEntry;\n\tconst [, tableCellPath] = tableCellEntry;\n\tconst rowCount = Element.isElement(tableNode) ? tableNode.children.length : 1;\n\tconst colPos = tableCellPath.slice(-1)[0];\n\tconst cellToCreate = createTableCell();\n\n\tarray(rowCount).forEach((o) => {\n\t\tTransforms.insertNodes(editor, cellToCreate, {\n\t\t\tat: [...tablePath, o, colPos],\n\t\t\thanging: true,\n\t\t});\n\t});\n}\n\nexport function insertTableColumnRight(editor: StencylEditor) {\n\tconst {tableEntry, tableCellEntry} = getTableEntries(editor);\n\n\tif (!tableEntry || !tableCellEntry) {\n\t\treturn;\n\t}\n\n\tconst [tableNode, tablePath] = tableEntry;\n\tconst [, tableCellPath] = tableCellEntry;\n\tconst rowCount = Element.isElement(tableNode) ? tableNode.children.length : 1;\n\tconst colPos = tableCellPath.slice(-1)[0];\n\tconst cellToCreate = createTableCell();\n\n\tarray(rowCount).forEach((o) => {\n\t\tTransforms.insertNodes(editor, cellToCreate, {\n\t\t\tat: [...tablePath, o, colPos + 1],\n\t\t\thanging: true,\n\t\t});\n\t});\n}\n\nexport function removeTableColumn(editor: StencylEditor) {\n\tconst {tableEntry, tableRowEntry, tableCellEntry} = getTableEntries(editor);\n\n\tif (!tableEntry || !tableRowEntry || !tableCellEntry) {\n\t\treturn;\n\t}\n\n\tconst [, tablePath] = tableEntry;\n\tconst [tableRowNode] = tableRowEntry;\n\tconst [, tableCellPath] = tableCellEntry;\n\tconst colCount = Element.isElement(tableRowNode) ? tableRowNode.children.length : 1;\n\tconst colPos = tableCellPath.slice(-1)[0];\n\n\tif (colCount <= 1) {\n\t\treturn;\n\t}\n\n\tTransforms.removeNodes(editor, {\n\t\tat: tablePath,\n\t\thanging: true,\n\t\tmatch: (node, path) =>\n\t\t\tElement.isElement(node) &&\n\t\t\tnode.type === 'table-cell' &&\n\t\t\tpath.length === tableCellPath.length &&\n\t\t\tlastItem(path) === colPos,\n\t});\n}\n\nexport function showTableBorders(editor: StencylEditor) {\n\tconst {tableEntry} = getTableEntries(editor);\n\tconst [, tablePath] = tableEntry;\n\n\tTransforms.setNodes(\n\t\teditor,\n\t\t{\n\t\t\tborderColor: undefined,\n\t\t},\n\t\t{\n\t\t\tat: tablePath,\n\t\t\tmatch: (node) => Element.isElement(node) && node.type === 'table-cell',\n\t\t\thanging: true,\n\t\t\tsplit: true,\n\t\t\tmode: 'all',\n\t\t},\n\t);\n}\n\nexport function hideTableBorders(editor: StencylEditor) {\n\tconst {tableEntry} = getTableEntries(editor);\n\tconst [, tablePath] = tableEntry;\n\n\tTransforms.setNodes(\n\t\teditor,\n\t\t{\n\t\t\tborderColor: colors.transparent,\n\t\t},\n\t\t{\n\t\t\tat: tablePath,\n\t\t\tmatch: (node) => Element.isElement(node) && node.type === 'table-cell',\n\t\t\thanging: true,\n\t\t\tsplit: true,\n\t\t\tmode: 'all',\n\t\t},\n\t);\n}\n\nexport function tabToNextCell(editor: StencylEditor) {\n\tconst {tableCellEntry} = getTableEntries(editor);\n\n\tif (!tableCellEntry) {\n\t\treturn;\n\t}\n\n\tconst nextTableCellEntry = Editor.next(editor, {\n\t\tmatch: (node, path) =>\n\t\t\tElement.isElement(node) &&\n\t\t\tnode.type === 'table-cell' &&\n\t\t\t!Path.equals(path, tableCellEntry[1]) &&\n\t\t\tpath.length === tableCellEntry[1].length,\n\t});\n\n\tif (!nextTableCellEntry) {\n\t\treturn;\n\t}\n\n\tconst edges = Editor.edges(editor, nextTableCellEntry[1]);\n\n\tTransforms.setSelection(editor, {\n\t\tanchor: edges[0],\n\t\tfocus: edges[1],\n\t});\n}\n\nexport function tabToPreviousCell(editor: StencylEditor) {\n\tconst {tableCellEntry} = getTableEntries(editor);\n\n\tif (!tableCellEntry) {\n\t\treturn;\n\t}\n\n\tconst previousTableCellEntry = Editor.previous(editor, {\n\t\tmatch: (node, path) =>\n\t\t\tElement.isElement(node) &&\n\t\t\tnode.type === 'table-cell' &&\n\t\t\t!Path.equals(path, tableCellEntry[1]) &&\n\t\t\tpath.length === tableCellEntry[1].length,\n\t});\n\n\tif (!previousTableCellEntry) {\n\t\treturn;\n\t}\n\n\tconst edges = Editor.edges(editor, previousTableCellEntry[1]);\n\n\tTransforms.setSelection(editor, {\n\t\tanchor: edges[0],\n\t\tfocus: edges[1],\n\t});\n}\n","import React, {FC, MouseEvent, memo, useEffect, useState} from 'react';\nimport {\n\thideTableBorders,\n\tinsertTableColumnLeft,\n\tinsertTableColumnRight,\n\tinsertTableRowAbove,\n\tinsertTableRowBelow,\n\tremoveTableBlock,\n\tremoveTableColumn,\n\tremoveTableRow,\n\tshowTableBorders,\n} from '../../../../../packages/table/commands';\n\nimport {ReactComponent as BorderAll} from '../../../../../assets/images/icon-border-all.svg';\nimport {ReactComponent as BorderNone} from '../../../../../assets/images/icon-border-none.svg';\nimport {ReactComponent as ColumnInsertLeft} from '../../../../../assets/images/icon-column-insert-left.svg';\nimport {ReactComponent as ColumnInsertRight} from '../../../../../assets/images/icon-column-insert-right.svg';\nimport Icon from '../../icon';\nimport {ReactComponent as LayoutList} from '../../../../../assets/images/icon-layout-list.svg';\nimport {NodeEntry} from 'slate';\nimport {ReactComponent as RowInsertBottom} from '../../../../../assets/images/icon-row-insert-bottom.svg';\nimport {ReactComponent as RowInsertTop} from '../../../../../assets/images/icon-row-insert-top.svg';\nimport {TableElement} from '../../../../../types';\nimport {ReactComponent as Trash} from '../../../../../assets/images/icon-trash.svg';\nimport {useSlateStatic} from 'slate-react';\n\ntype TableToolsProps = {\n\tentry: NodeEntry<TableElement>;\n};\n\nconst BaseTableTools: FC<TableToolsProps> = ({entry: [node]}) => {\n\tconst editor = useSlateStatic();\n\n\tconst [hasBorders, setHasBorders] = useState(!node.children[0].children[0].borderColor);\n\n\tuseEffect(() => {\n\t\tsetHasBorders(!node.children[0].children[0].borderColor);\n\t}, [node]);\n\n\tconst handleInsertRowAbove = (e: MouseEvent) => {\n\t\te.preventDefault();\n\t\tinsertTableRowAbove(editor);\n\t};\n\n\tconst handleInsertRowBelow = (e: MouseEvent) => {\n\t\te.preventDefault();\n\t\tinsertTableRowBelow(editor);\n\t};\n\n\tconst handleInsertColLeft = (e: MouseEvent) => {\n\t\te.preventDefault();\n\t\tinsertTableColumnLeft(editor);\n\t};\n\n\tconst handleInsertColRight = (e: MouseEvent) => {\n\t\te.preventDefault();\n\t\tinsertTableColumnRight(editor);\n\t};\n\n\tconst handleRemoveRow = (e: MouseEvent) => {\n\t\te.preventDefault();\n\t\tremoveTableRow(editor);\n\t};\n\n\tconst handleRemoveColumn = (e: MouseEvent) => {\n\t\te.preventDefault();\n\t\tremoveTableColumn(editor);\n\t};\n\n\tconst handleToggleBorders = (e: MouseEvent) => {\n\t\te.preventDefault();\n\t\tif (hasBorders) {\n\t\t\thideTableBorders(editor);\n\t\t} else {\n\t\t\tshowTableBorders(editor);\n\t\t}\n\n\t\tsetHasBorders((o) => !o);\n\t};\n\n\tconst handleRemoveTable = (e: MouseEvent) => {\n\t\te.preventDefault();\n\t\tremoveTableBlock(editor);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='text-headline text-blue-500 mb-8'>Table tools</div>\n\t\t\t<div className='text-gray-500 mb-8 text-subhead'>\n\t\t\t\tUse these tools to add or modify features on the table.\n\t\t\t</div>\n\t\t\t<div className='space-y-8'>\n\t\t\t\t<div className='flex space-x-8'>\n\t\t\t\t\t<div className='flex-1 space-y-8'>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonMouseDown={handleInsertRowAbove}\n\t\t\t\t\t\t\tclassName='h-36 px-6 flex items-center space-x-4 w-full bg-gray-100 text-gray-500 rounded-default cursor-pointer transition-colors duration-125 hover:bg-gray-200'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon className='s-16'>\n\t\t\t\t\t\t\t\t<RowInsertTop />\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t<div className='font-medium text-subhead'>Add row above</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonMouseDown={handleInsertColLeft}\n\t\t\t\t\t\t\tclassName='h-36 px-6 flex items-center space-x-4 w-full bg-gray-100 text-gray-500 rounded-default cursor-pointer transition-colors duration-125 hover:bg-gray-200'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon className='s-16'>\n\t\t\t\t\t\t\t\t<ColumnInsertLeft />\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t<div className='font-medium text-subhead'>Add column left</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonMouseDown={handleRemoveRow}\n\t\t\t\t\t\t\tclassName='h-36 px-6 flex items-center space-x-4 w-full bg-gray-100 text-gray-500 rounded-default cursor-pointer transition-colors duration-125 hover:bg-gray-200'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon className='s-16'>\n\t\t\t\t\t\t\t\t<LayoutList />\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t<div className='font-medium text-subhead'>Delete row</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonMouseDown={handleToggleBorders}\n\t\t\t\t\t\t\tclassName='h-36 px-6 flex items-center space-x-4 w-full bg-gray-100 text-gray-500 rounded-default cursor-pointer transition-colors duration-125 hover:bg-gray-200'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon className='s-16'>{hasBorders ? <BorderAll /> : <BorderNone />}</Icon>\n\t\t\t\t\t\t\t<div className='font-medium text-subhead'>Toggle borders</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='flex-1 space-y-8'>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonMouseDown={handleInsertRowBelow}\n\t\t\t\t\t\t\tclassName='h-36 px-6 flex items-center space-x-4 w-full bg-gray-100 text-gray-500 rounded-default cursor-pointer transition-colors duration-125 hover:bg-gray-200'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon className='s-16'>\n\t\t\t\t\t\t\t\t<RowInsertBottom />\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t<div className='font-medium text-subhead'>Add row below</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonMouseDown={handleInsertColRight}\n\t\t\t\t\t\t\tclassName='h-36 pl-6 flex items-center space-x-4 w-full bg-gray-100 text-gray-500 rounded-default cursor-pointer transition-colors duration-125 hover:bg-gray-200'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon className='s-16'>\n\t\t\t\t\t\t\t\t<ColumnInsertRight />\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t<div className='font-medium text-subhead'>Add column right</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonMouseDown={handleRemoveColumn}\n\t\t\t\t\t\t\tclassName='h-36 px-6 flex items-center space-x-4 w-full bg-gray-100 text-gray-500 rounded-default cursor-pointer transition-colors duration-125 hover:bg-gray-200'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon className='s-16 transform rotate-90'>\n\t\t\t\t\t\t\t\t<LayoutList />\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t<div className='font-medium text-subhead'>Delete column</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonMouseDown={handleRemoveTable}\n\t\t\t\t\t\t\tclassName='h-36 px-6 flex items-center space-x-4 w-full bg-red-300 text-white rounded-default cursor-pointer transition-colors duration-125 hover:bg-red-400'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon className='s-16'>\n\t\t\t\t\t\t\t\t<Trash />\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t<div className='font-medium text-subhead'>Delete table</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport const TableTools = memo(BaseTableTools);\n","import React, {memo} from 'react';\n\nimport {EditEditable} from './edit-editable';\nimport {EditImage} from './edit-image';\nimport {TableTools} from './table-tools';\nimport {useEditingBlock} from '../../../../hooks';\n\nconst BaseSidebar = () => {\n\tconst editingBlock = useEditingBlock();\n\n\tif (!editingBlock) {\n\t\treturn null;\n\t}\n\n\tconst [node, path] = editingBlock;\n\n\treturn (\n\t\t<div className='shadow-1 rounded-lg w-full bg-white p-16'>\n\t\t\t{node.type === 'table' && <TableTools entry={[node, path]} />}\n\t\t\t{node.type === 'image' && <EditImage entry={editingBlock} />}\n\t\t\t{node.type === 'editable' && <EditEditable entry={editingBlock} />}\n\t\t</div>\n\t);\n};\n\nexport const Sidebar = memo(BaseSidebar);\n","import React, {CSSProperties, MouseEventHandler, ReactNode, Ref, forwardRef} from 'react';\n\nimport Icon from '../icon';\nimport classNames from 'classnames';\nimport css from './style.module.css';\n\ntype IconButtonProps = {\n\tactive?: boolean;\n\tdisabled?: boolean;\n\tclassName?: string;\n\tstyle?: CSSProperties;\n\ttip?: string;\n\tonPress?: MouseEventHandler;\n\tchildren?: ReactNode;\n};\n\nconst BaseIconButton = (\n\t{active, disabled, className, children, onPress, style, tip}: IconButtonProps,\n\tref: Ref<HTMLDivElement>,\n) => {\n\tconst handleMouseDown: MouseEventHandler = (e) => {\n\t\te.preventDefault();\n\t\tonPress?.(e);\n\t};\n\treturn (\n\t\t<div\n\t\t\tstyle={style}\n\t\t\trole='button'\n\t\t\tref={ref}\n\t\t\tdata-tip={tip}\n\t\t\tonMouseDown={handleMouseDown}\n\t\t\tclassName={classNames(\n\t\t\t\t's-32 rounded-lg bg-transparent cursor-pointer flex items-center justify-center transition-colors duration-250 hover:bg-blue-100 hover:text-blue-500',\n\t\t\t\t{\n\t\t\t\t\t'text-gray-500': !active,\n\t\t\t\t\t'text-blue-500 bg-blue-highlight': active,\n\t\t\t\t\t'pointer-events-none opacity-50': disabled,\n\t\t\t\t\t[css.tooltip]: !!tip?.length,\n\t\t\t\t},\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t>\n\t\t\t<Icon className='s-20'>{children}</Icon>\n\t\t</div>\n\t);\n};\n\nexport const IconButton = forwardRef(BaseIconButton);\n","import {ReactComponent as AlignCenter} from '../../../../../../assets/images/icon-align-center.svg';\nimport {IconButton} from '../../../icon-button';\nimport React from 'react';\nimport {getCurrentBlockAlignment} from '../../../../../../packages/common/utils';\nimport {setBlockAlignment} from '../../../../../../packages/common/commands';\nimport {useSlate} from 'slate-react';\n\nexport const AlignCenterButton = () => {\n\tconst editor = useSlate();\n\tconst alignment = getCurrentBlockAlignment(editor);\n\n\tconst handlePress = () => {\n\t\tsetBlockAlignment(editor, 'center');\n\t};\n\n\treturn (\n\t\t<IconButton onPress={handlePress} active={alignment === 'center'} tip='Center align'>\n\t\t\t<AlignCenter />\n\t\t</IconButton>\n\t);\n};\n","import {ReactComponent as AlignJustified} from '../../../../../../assets/images/icon-align-justified.svg';\nimport {IconButton} from '../../../icon-button';\nimport React from 'react';\nimport {getCurrentBlockAlignment} from '../../../../../../packages/common/utils';\nimport {setBlockAlignment} from '../../../../../../packages/common/commands';\nimport {useSlate} from 'slate-react';\n\nexport const AlignJustifiedButton = () => {\n\tconst editor = useSlate();\n\tconst alignment = getCurrentBlockAlignment(editor);\n\n\tconst handlePress = () => {\n\t\tsetBlockAlignment(editor, 'justify');\n\t};\n\n\treturn (\n\t\t<IconButton onPress={handlePress} active={alignment === 'justify'} tip='Justify'>\n\t\t\t<AlignJustified />\n\t\t</IconButton>\n\t);\n};\n","import {ReactComponent as AlignLeft} from '../../../../../../assets/images/icon-align-left.svg';\nimport {IconButton} from '../../../icon-button';\nimport React from 'react';\nimport {getCurrentBlockAlignment} from '../../../../../../packages/common/utils';\nimport {setBlockAlignment} from '../../../../../../packages/common/commands';\nimport {useSlate} from 'slate-react';\n\nexport const AlignLeftButton = () => {\n\tconst editor = useSlate();\n\tconst alignment = getCurrentBlockAlignment(editor);\n\n\tconst handlePress = () => {\n\t\tsetBlockAlignment(editor, 'left');\n\t};\n\n\treturn (\n\t\t<IconButton onPress={handlePress} active={alignment === 'left'} tip='Left align'>\n\t\t\t<AlignLeft />\n\t\t</IconButton>\n\t);\n};\n","import {ReactComponent as AlignRight} from '../../../../../../assets/images/icon-align-right.svg';\nimport {IconButton} from '../../../icon-button';\nimport React from 'react';\nimport {getCurrentBlockAlignment} from '../../../../../../packages/common/utils';\nimport {setBlockAlignment} from '../../../../../../packages/common/commands';\nimport {useSlate} from 'slate-react';\n\nexport const AlignRightButton = () => {\n\tconst editor = useSlate();\n\tconst alignment = getCurrentBlockAlignment(editor);\n\n\tconst handlePress = () => {\n\t\tsetBlockAlignment(editor, 'right');\n\t};\n\n\treturn (\n\t\t<IconButton onPress={handlePress} active={alignment === 'right'} tip='Right align'>\n\t\t\t<AlignRight />\n\t\t</IconButton>\n\t);\n};\n","import {ReactComponent as Bold} from '../../../../../../assets/images/icon-bold.svg';\nimport {IconButton} from '../../../icon-button';\nimport React from 'react';\nimport {getShortcutText} from '../../../../../../utils';\nimport {isMarkActive} from '../../../../../../packages/common/utils';\nimport {toggleBoldMark} from '../../../../../../packages/leaf/commands';\nimport {useSlate} from 'slate-react';\n\nexport const BoldButton = () => {\n\tconst editor = useSlate();\n\tconst isActive = isMarkActive(editor, 'bold');\n\n\tconst handlePress = () => {\n\t\ttoggleBoldMark(editor);\n\t};\n\n\treturn (\n\t\t<IconButton onPress={handlePress} active={isActive} tip={`Bold ${getShortcutText('Mod', 'B')}`}>\n\t\t\t<Bold />\n\t\t</IconButton>\n\t);\n};\n","import {\n\tinsertBulletedListBlock,\n\tremoveListItemBlock,\n} from '../../../../../../packages/lists/commands';\n\nimport {IconButton} from '../../../icon-button';\nimport {ReactComponent as List} from '../../../../../../assets/images/icon-list.svg';\nimport React from 'react';\nimport {getCurrentListBlock} from '../../../../../../packages/lists/utils';\nimport {useSlate} from 'slate-react';\n\nexport const BulletedListButton = () => {\n\tconst editor = useSlate();\n\tconst listBlock = getCurrentListBlock(editor);\n\tconst isActive = listBlock && listBlock[0].type === 'bulleted-list';\n\n\tconst handlePress = () => {\n\t\tisActive ? removeListItemBlock(editor) : insertBulletedListBlock(editor);\n\t};\n\n\treturn (\n\t\t<IconButton onPress={handlePress} active={isActive} tip='Bulleted list'>\n\t\t\t<List />\n\t\t</IconButton>\n\t);\n};\n","import {ReactComponent as ClearFormatting} from '../../../../../../assets/images/icon-clear-formatting.svg';\nimport {IconButton} from '../../../icon-button';\nimport React from 'react';\nimport {clearMarks} from '../../../../../../packages/common/commands';\nimport {useSlate} from 'slate-react';\n\nexport const ClearFormattingButton = () => {\n\tconst editor = useSlate();\n\n\tconst handlePress = () => {\n\t\tclearMarks(editor);\n\t};\n\n\treturn (\n\t\t<IconButton onPress={handlePress} tip='Clear formatting'>\n\t\t\t<ClearFormatting />\n\t\t</IconButton>\n\t);\n};\n","import React, {FC, PropsWithChildren, memo} from 'react';\n\nimport classnames from 'classnames';\n\ntype ButtonProps = PropsWithChildren<{\n\tclassName?: string;\n\tdisabled?: boolean;\n\tonPress?: Fn;\n}>;\n\nconst BaseButton: FC<ButtonProps> = ({children, className, disabled, onPress}) => {\n\treturn (\n\t\t<button\n\t\t\trole='button'\n\t\t\tonClick={onPress}\n\t\t\tclassName={classnames(\n\t\t\t\t'border-transparent rounded-lg font-medium cursor-pointer text-white px-18 flex items-center justify-center transition-colors duration-250 hover:bg-blue-600',\n\t\t\t\t{\n\t\t\t\t\t'bg-blue-500': !disabled,\n\t\t\t\t\t'pointer-events-none bg-blue-300': disabled,\n\t\t\t\t\t'h-36': !/\\bh-[0-9]/gi.test(className ?? ''),\n\t\t\t\t},\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t>\n\t\t\t{children}\n\t\t</button>\n\t);\n};\n\nexport const Button = memo(BaseButton);\n","import React, {useLayoutEffect, useState} from 'react';\n\nimport classnames from 'classnames';\nimport css from './style.module.css';\n\nexport type ContentDimensions = {\n\twidth?: number;\n\theight?: number;\n\tx?: number;\n\ty?: number;\n};\n\ntype ContentProps = {\n\tonLayoutUpdate: (dimensions: ContentDimensions) => void;\n\tx?: number;\n\ty?: number;\n\thideArrow?: boolean;\n\tposition?: string;\n\talignment?: string;\n\tclassName?: string;\n};\n\nexport const Content: React.FC<ContentProps> = ({\n\tonLayoutUpdate,\n\tchildren,\n\tx = 0,\n\ty = 0,\n\tposition,\n\talignment,\n\tclassName,\n\thideArrow,\n}) => {\n\tconst [dimensions, setDimensions] = useState<ContentDimensions>({x, y});\n\n\tuseLayoutEffect(() => {\n\t\tconst element = document.querySelector(`.${css.container}`);\n\t\tconst {width, height, x, y} = element?.getBoundingClientRect() ?? {};\n\t\tconst computedDimensions: ContentDimensions = {width, height, x, y};\n\n\t\tif (JSON.stringify(computedDimensions) !== JSON.stringify(dimensions)) {\n\t\t\tsetDimensions(computedDimensions);\n\t\t\tonLayoutUpdate(computedDimensions);\n\t\t}\n\t}, [dimensions, onLayoutUpdate]);\n\n\tlet composedClassName = css.container;\n\tconst arrowClassName = ` ${css.arrow} ${css[`arrow${position}`]} ${css[`arrow${alignment}`]}`;\n\n\tif (!hideArrow) composedClassName += arrowClassName;\n\n\treturn (\n\t\t<div className={classnames(composedClassName, 'shadow-6', className)} style={{top: y, left: x}}>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n","import {Content, ContentDimensions} from './content';\nimport React, {FC, MutableRefObject, useCallback, useEffect, useRef, useState} from 'react';\n\nimport {createPortal} from 'react-dom';\nimport {useMouseDown} from '../../../../hooks';\n\nexport type AnchorRef = MutableRefObject<Element | null>;\n\nexport type PopupPosition = 'up' | 'right' | 'down' | 'left' | 'center';\n\nexport type PopupAlignment = 'start' | 'center' | 'end';\n\ntype PopupOffset = {\n\tx?: number;\n\ty?: number;\n};\n\ntype PopupContentPosition = {\n\tx: number;\n\ty: number;\n};\n\ntype PopupProps = {\n\tanchor?: string;\n\tanchorRef?: AnchorRef;\n\tcontentClassName?: string;\n\tposition?: PopupPosition;\n\talignment?: PopupAlignment;\n\ttransparent?: boolean;\n\tdistance?: number;\n\toffsets?: PopupOffset;\n\thideArrow?: boolean;\n\tisVisible?: boolean;\n\toverlayCloseOnClick?: boolean;\n\tonRequestClose: () => void;\n};\n\nconst EDGE_PADDING = 12;\n\nconst getViewportWidth = () =>\n\twindow.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n\nconst getViewportHeight = () =>\n\twindow.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n\nconst getPositioningWithoutAnchor = ({\n\tdimensions,\n\tposition,\n\talignment,\n}: {\n\tdimensions: ContentDimensions;\n\tposition: PopupPosition;\n\talignment: PopupAlignment;\n}) => {\n\tconst viewportWidth = getViewportWidth();\n\tconst viewportHeight = getViewportHeight();\n\tconst {width = 0, height = 0} = dimensions;\n\n\tlet x: number, y: number;\n\n\tswitch (position) {\n\t\tcase 'up':\n\t\t\ty = 0;\n\t\t\tbreak;\n\t\tcase 'down':\n\t\t\ty = viewportHeight - height;\n\t\t\tbreak;\n\t\tcase 'center':\n\t\t\ty = (viewportHeight - height) / 2;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ty = 0;\n\t\t\tbreak;\n\t}\n\n\tswitch (alignment) {\n\t\tcase 'start':\n\t\t\tx = 0;\n\t\t\tbreak;\n\t\tcase 'center':\n\t\t\tx = (viewportWidth - width) / 2;\n\t\t\tbreak;\n\t\tcase 'end':\n\t\t\tx = viewportWidth - width;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tx = 0;\n\t\t\tbreak;\n\t}\n\n\treturn {x, y};\n};\n\nconst getPositioningWithAnchor = ({\n\tdimensions,\n\tanchor,\n\tanchorRef,\n\tdistance,\n\tposition,\n\talignment,\n}: {\n\tdimensions: ContentDimensions;\n\tanchor?: string;\n\tanchorRef?: AnchorRef;\n\tdistance: number;\n\tposition: PopupPosition;\n\talignment: PopupAlignment;\n}) => {\n\tconst anchorElement = anchorRef?.current ?? (anchor ? document.querySelector(anchor) : null);\n\tif (!anchorElement) return getPositioningWithoutAnchor({dimensions, position, alignment});\n\n\tconst {\n\t\twidth: anchorWidth,\n\t\theight: anchorHeight,\n\t\tx: anchorX,\n\t\ty: anchorY,\n\t} = anchorElement.getBoundingClientRect();\n\tconst {width = 0, height = 0} = dimensions;\n\n\tlet x: number = 0;\n\tlet y: number = 0;\n\n\tif (position === 'up') {\n\t\ty = anchorY - height - distance;\n\n\t\tswitch (alignment) {\n\t\t\tcase 'start':\n\t\t\t\tx = anchorX;\n\t\t\t\tbreak;\n\t\t\tcase 'center':\n\t\t\t\tx = anchorX + anchorWidth / 2 - width / 2;\n\t\t\t\tbreak;\n\t\t\tcase 'end':\n\t\t\t\tx = anchorX + anchorWidth - width;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (position === 'down') {\n\t\ty = anchorY + anchorHeight + distance;\n\n\t\tswitch (alignment) {\n\t\t\tcase 'start':\n\t\t\t\tx = anchorX;\n\t\t\t\tbreak;\n\t\t\tcase 'center':\n\t\t\t\tx = anchorX + anchorWidth / 2 - width / 2;\n\t\t\t\tbreak;\n\t\t\tcase 'end':\n\t\t\t\tx = anchorX + anchorWidth - width;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (position === 'left') {\n\t\tx = anchorX - width - distance;\n\n\t\tswitch (alignment) {\n\t\t\tcase 'start':\n\t\t\t\ty = anchorY;\n\t\t\t\tbreak;\n\t\t\tcase 'center':\n\t\t\t\ty = anchorY + anchorHeight / 2 - height / 2;\n\t\t\t\tbreak;\n\t\t\tcase 'end':\n\t\t\t\ty = anchorY + anchorHeight - height;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (position === 'right') {\n\t\tx = anchorX + anchorWidth + distance;\n\n\t\tswitch (alignment) {\n\t\t\tcase 'start':\n\t\t\t\ty = anchorY;\n\t\t\t\tbreak;\n\t\t\tcase 'center':\n\t\t\t\ty = anchorY + anchorHeight / 2 - height / 2;\n\t\t\t\tbreak;\n\t\t\tcase 'end':\n\t\t\t\ty = anchorY + anchorHeight - height;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn {x, y};\n};\n\nconst getValidPositioning = ({\n\tdimensions,\n\tanchor,\n\tanchorRef,\n\tdistance,\n\tposition,\n\talignment,\n\toffsets,\n}: {\n\tdimensions: ContentDimensions;\n\tanchor?: string;\n\tanchorRef?: AnchorRef;\n\tdistance: number;\n\tposition: PopupPosition;\n\talignment: PopupAlignment;\n\toffsets?: PopupOffset;\n}) => {\n\tconst {width = 0, height = 0} = dimensions;\n\tconst viewportWidth = getViewportWidth();\n\tconst viewportHeight = getViewportHeight();\n\tlet contentPosition: PopupContentPosition;\n\n\tif (!!anchor || !!anchorRef) {\n\t\tcontentPosition = getPositioningWithAnchor({\n\t\t\tdimensions,\n\t\t\tanchor,\n\t\t\tanchorRef,\n\t\t\tdistance,\n\t\t\tposition,\n\t\t\talignment,\n\t\t});\n\t} else {\n\t\tcontentPosition = getPositioningWithoutAnchor({dimensions, position, alignment});\n\t}\n\n\tif (offsets) {\n\t\tconst xOffset = offsets.x ?? 0;\n\t\tconst yOffset = offsets.y ?? 0;\n\n\t\tcontentPosition.x = contentPosition.x + xOffset;\n\t\tcontentPosition.y = contentPosition.y + yOffset;\n\t}\n\n\tconst leftEdge = EDGE_PADDING;\n\tconst topEdge = EDGE_PADDING;\n\tconst rightEdge = viewportWidth - width;\n\tconst bottomEdge = viewportHeight - height;\n\n\tif (contentPosition.x <= leftEdge) contentPosition.x = leftEdge;\n\tif (contentPosition.y <= topEdge) contentPosition.y = topEdge;\n\tif (contentPosition.x >= rightEdge) contentPosition.x = rightEdge;\n\tif (contentPosition.y >= bottomEdge) contentPosition.y = bottomEdge;\n\n\treturn contentPosition;\n};\n\nexport const Popup: FC<PopupProps> = ({\n\tanchor,\n\tanchorRef,\n\tchildren,\n\tcontentClassName,\n\tposition = 'center',\n\talignment = 'center',\n\ttransparent = false,\n\tdistance = 10,\n\toffsets,\n\tisVisible = false,\n\thideArrow = false,\n\toverlayCloseOnClick = true,\n\tonRequestClose,\n}) => {\n\tconst portalRef = useRef<HTMLElement | null>();\n\tconst [popupContentPosition, setPopupContentPosition] = useState<PopupContentPosition>({\n\t\tx: 0,\n\t\ty: 0,\n\t});\n\n\tconst handleClickOverlay = useMouseDown(() => {\n\t\tif (overlayCloseOnClick) onRequestClose();\n\t});\n\n\tconst handleKeyUp = useCallback(\n\t\t(e: KeyboardEvent) => {\n\t\t\tif (e.key === 'Escape' && isVisible) onRequestClose();\n\t\t},\n\t\t[isVisible, onRequestClose],\n\t);\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('keyup', handleKeyUp);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('keyup', handleKeyUp);\n\t\t};\n\t}, [isVisible, handleKeyUp]);\n\n\tuseEffect(() => {\n\t\tif (!portalRef.current) {\n\t\t\tportalRef.current = document.getElementById('stencyl-portal');\n\t\t}\n\t}, [isVisible, portalRef]);\n\n\tconst render = () => (\n\t\t<div className='fixed top-0 left-0 w-full h-full z-2'>\n\t\t\t<div\n\t\t\t\tclassName={\n\t\t\t\t\ttransparent\n\t\t\t\t\t\t? 'w-full h-full absolute top-0 left-0 z-0'\n\t\t\t\t\t\t: 'w-full h-full absolute top-0 left-0 z-0 bg-blue-800 opacity-50'\n\t\t\t\t}\n\t\t\t\tonMouseDown={handleClickOverlay}\n\t\t\t/>\n\t\t\t<Content\n\t\t\t\tclassName={contentClassName}\n\t\t\t\tx={popupContentPosition.x}\n\t\t\t\ty={popupContentPosition.y}\n\t\t\t\tposition={position}\n\t\t\t\talignment={alignment}\n\t\t\t\thideArrow={(!anchorRef && !anchor) || hideArrow}\n\t\t\t\tonLayoutUpdate={(dimensions) =>\n\t\t\t\t\tsetPopupContentPosition(\n\t\t\t\t\t\tgetValidPositioning({\n\t\t\t\t\t\t\tdimensions,\n\t\t\t\t\t\t\tanchor,\n\t\t\t\t\t\t\tanchorRef,\n\t\t\t\t\t\t\tdistance,\n\t\t\t\t\t\t\tposition,\n\t\t\t\t\t\t\talignment,\n\t\t\t\t\t\t\toffsets,\n\t\t\t\t\t\t}),\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</Content>\n\t\t</div>\n\t);\n\n\tif (!isVisible || !portalRef.current) return null;\n\n\treturn createPortal(render(), portalRef.current);\n};\n","import React, {ChangeEvent, FC, memo, useMemo, useState} from 'react';\nimport {\n\tStencylDisplayCondition,\n\tStencylOption,\n\tStencylPopupCoordinates,\n} from '../../../../../types';\n\nimport {Button} from '../../button';\nimport Field from '../../field';\nimport {Popup} from '../../popup';\nimport {getAllEditableElements} from '../../../../../packages/editable/utils';\nimport {useSlateStatic} from 'slate-react';\n\ntype DisplayFlagPopupProps = {\n\tcoordinates: StencylPopupCoordinates;\n\tisVisible: boolean;\n\tonRequestClose: () => void;\n\tonSubmit: (condition: StencylDisplayCondition) => void;\n};\n\nconst BaseDisplayFlagPopup: FC<DisplayFlagPopupProps> = ({\n\tcoordinates: {x, y},\n\tisVisible,\n\tonRequestClose,\n\tonSubmit,\n}) => {\n\tconst editor = useSlateStatic();\n\tconst editableElements = getAllEditableElements(editor);\n\tconst matchedElements = useMemo(\n\t\t() =>\n\t\t\teditableElements\n\t\t\t\t.filter(\n\t\t\t\t\t([node]) => !node.linkId && (node.dataType === 'options' || node.dataType === 'radio'),\n\t\t\t\t)\n\t\t\t\t.map((o) => o[0]),\n\t\t[editableElements],\n\t);\n\n\tconst [parent, setParent] = useState('');\n\tconst [equals, setEquals] = useState('');\n\n\tconst handleSelectParent = (e: ChangeEvent<HTMLSelectElement>) => {\n\t\tsetParent(e.target.value);\n\t};\n\n\tconst handleSelectEquals = (e: ChangeEvent<HTMLSelectElement>) => {\n\t\tsetEquals(e.target.value);\n\t};\n\n\tconst handleSubmit = () => {\n\t\tonSubmit({parent, value: equals});\n\t\tonRequestClose();\n\t\tsetParent('');\n\t\tsetEquals('');\n\t};\n\n\treturn (\n\t\t<Popup\n\t\t\tposition='right'\n\t\t\talignment='start'\n\t\t\tisVisible={isVisible}\n\t\t\tonRequestClose={onRequestClose}\n\t\t\ttransparent\n\t\t\thideArrow\n\t\t\toverlayCloseOnClick\n\t\t\tcontentClassName='border-gray-50 border-solid border bg-white rounded-lg flex items-center py-8 px-8 space-x-8 text-gray-500'\n\t\t\tdistance={4}\n\t\t\toffsets={{\n\t\t\t\ty: y + 16,\n\t\t\t\tx: x,\n\t\t\t}}\n\t\t>\n\t\t\t<div className='flex items-center space-x-4'>\n\t\t\t\t<div className='bg-gray-500 text-footnote font-medium rounded-default px-8 py-4 text-white uppercase'>\n\t\t\t\t\tWhen\n\t\t\t\t</div>\n\t\t\t\t<Field className='w-180'>\n\t\t\t\t\t<select value={parent} onChange={handleSelectParent}>\n\t\t\t\t\t\t<option hidden value=''>\n\t\t\t\t\t\t\tChoose one\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t{matchedElements.map((node) => (\n\t\t\t\t\t\t\t<option key={node.id} value={node.id}>\n\t\t\t\t\t\t\t\t{node.defaultValue}({node.label})\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t</Field>\n\t\t\t</div>\n\t\t\t<div className='flex items-center space-x-4'>\n\t\t\t\t<div className='bg-gray-500 text-footnote font-medium rounded-default px-8 py-4 text-white uppercase'>\n\t\t\t\t\tEquals\n\t\t\t\t</div>\n\t\t\t\t<Field className='w-144'>\n\t\t\t\t\t<select value={equals} onChange={handleSelectEquals}>\n\t\t\t\t\t\t<option hidden value=''>\n\t\t\t\t\t\t\tChoose one\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t{parent?.length &&\n\t\t\t\t\t\t\t(matchedElements.find((o) => o.id === parent) as any).options.map(\n\t\t\t\t\t\t\t\t(option: StencylOption) => (\n\t\t\t\t\t\t\t\t\t<option key={option.id} value={option.id}>\n\t\t\t\t\t\t\t\t\t\t{option.label}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t</select>\n\t\t\t\t</Field>\n\t\t\t</div>\n\t\t\t<Button onPress={handleSubmit} disabled={!parent?.length || !equals?.length} className='h-36'>\n\t\t\t\tDone\n\t\t\t</Button>\n\t\t</Popup>\n\t);\n};\n\nexport const DisplayFlagPopup = memo(BaseDisplayFlagPopup);\n","import React, {Fragment, useRef, useState} from 'react';\nimport {StencylDisplayCondition, StencylPopupCoordinates} from '../../../../../../types';\nimport {getSelectionCoordinates, isMarkActive} from '../../../../../../packages/common/utils';\nimport {setConditionMark, unsetConditionMark} from '../../../../../../packages/leaf/commands';\n\nimport {BaseSelection} from 'slate';\nimport {DisplayFlagPopup} from '../../../popups/display-flag';\nimport {IconButton} from '../../../icon-button';\nimport {ReactComponent as Pennant} from '../../../../../../assets/images/icon-pennant.svg';\nimport {focusEditor} from '../../../../../../packages/common/commands';\nimport {useModalUtils} from '../../../../../../hooks';\nimport {useSlate} from 'slate-react';\n\nexport const DisplayFlagButton = () => {\n\tconst selectionRef = useRef<BaseSelection>();\n\tconst ref = useRef(null);\n\tconst editor = useSlate();\n\tconst modalUtils = useModalUtils();\n\tconst isActive = isMarkActive(editor, 'condition');\n\tconst [coordinates, setCoordinates] = useState<StencylPopupCoordinates>({x: 0, y: 0});\n\n\tconst handlePressIcon = () => {\n\t\tconst {selection} = editor;\n\n\t\tif (!selection) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isActive) {\n\t\t\tunsetConditionMark(editor);\n\t\t\treturn;\n\t\t}\n\n\t\tselectionRef.current = selection;\n\t\tsetCoordinates(getSelectionCoordinates(editor));\n\t\tmodalUtils.open();\n\t};\n\n\tconst handleAddCondition = (condition: StencylDisplayCondition) => {\n\t\tif (!selectionRef.current) {\n\t\t\treturn;\n\t\t}\n\n\t\tfocusEditor(editor, selectionRef.current);\n\n\t\tsetConditionMark(editor, condition);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<IconButton active={isActive} onPress={handlePressIcon} ref={ref} tip='Display flag'>\n\t\t\t\t<Pennant />\n\t\t\t</IconButton>\n\t\t\t<DisplayFlagPopup\n\t\t\t\tcoordinates={coordinates}\n\t\t\t\tisVisible={modalUtils.visible}\n\t\t\t\tonRequestClose={modalUtils.close}\n\t\t\t\tonSubmit={handleAddCondition}\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n","import React, {FC} from 'react';\n\nimport classnames from 'classnames';\n\ntype IconGroupProps = {\n\tclassName?: string;\n};\n\nconst IconGroup: FC<IconGroupProps> = ({className, children}) => {\n\treturn <div className={classnames('flex items-center space-x-4', className)}>{children}</div>;\n};\n\nIconGroup.defaultProps = {\n\tclassName: 'px-16',\n};\n\nexport default IconGroup;\n","import {IconButton} from '../../../icon-button';\nimport {ReactComponent as IndentDecrease} from '../../../../../../assets/images/icon-indent-decrease.svg';\nimport React from 'react';\nimport {changeBlockIndentation} from '../../../../../../packages/common/commands';\nimport {useSlateStatic} from 'slate-react';\n\nexport const IndentDecreaseButton = () => {\n\tconst editor = useSlateStatic();\n\n\tconst handlePress = () => {\n\t\tchangeBlockIndentation(editor, 'decrement');\n\t};\n\n\treturn (\n\t\t<IconButton onPress={handlePress} tip='Decrease indent'>\n\t\t\t<IndentDecrease />\n\t\t</IconButton>\n\t);\n};\n","import {IconButton} from '../../../icon-button';\nimport {ReactComponent as IndentIncrease} from '../../../../../../assets/images/icon-indent-increase.svg';\nimport React from 'react';\nimport {changeBlockIndentation} from '../../../../../../packages/common/commands';\nimport {useSlateStatic} from 'slate-react';\n\nexport const IndentIncreaseButton = () => {\n\tconst editor = useSlateStatic();\n\n\tconst handlePress = () => {\n\t\tchangeBlockIndentation(editor, 'increment');\n\t};\n\n\treturn (\n\t\t<IconButton onPress={handlePress} tip='Increase indent'>\n\t\t\t<IndentIncrease />\n\t\t</IconButton>\n\t);\n};\n","import {AnchorRef, Popup} from '../../popup';\nimport React, {FC, memo} from 'react';\n\nimport {Range} from 'slate';\nimport {StencylEditableElementTypes} from '../../../../../types';\nimport classNames from 'classnames';\nimport {useSlateStatic} from 'slate-react';\n\nexport type InsertEditableType = StencylEditableElementTypes | 'question' | 'existing';\n\ntype EditableTypePopupProps = {\n\tanchorRef: AnchorRef;\n\tisVisible: boolean;\n\tonRequestClose: () => void;\n\tonSelect: (value: InsertEditableType) => void;\n};\n\ntype OptionItemProps = {\n\tid: InsertEditableType;\n\tlabel: string;\n\tdisabled?: boolean;\n\tonPress: (id: InsertEditableType) => void;\n};\n\nconst OptionItem: FC<OptionItemProps> = ({disabled, id, label, onPress}) => {\n\treturn (\n\t\t<div\n\t\t\tonClick={() => onPress(id)}\n\t\t\tclassName={classNames(\n\t\t\t\t'h-36 flex items-center transition-colors duration-250 hover:text-gray-900 cursor-pointer',\n\t\t\t\t{\n\t\t\t\t\t'pointer-events-none opacity-50': disabled,\n\t\t\t\t},\n\t\t\t)}\n\t\t>\n\t\t\t<div>{label}</div>\n\t\t</div>\n\t);\n};\n\nconst BaseEditableTypePopup: FC<EditableTypePopupProps> = ({\n\tanchorRef,\n\tisVisible,\n\tonRequestClose,\n\tonSelect,\n}) => {\n\tconst editor = useSlateStatic();\n\tconst rangeIsCollapsed = editor.selection ? Range.isCollapsed(editor.selection) : true;\n\n\tconst handleClickOption = (option: InsertEditableType) => {\n\t\tonSelect(option);\n\t\tonRequestClose();\n\t};\n\n\treturn (\n\t\t<Popup\n\t\t\tposition='down'\n\t\t\talignment='start'\n\t\t\tanchorRef={anchorRef}\n\t\t\tisVisible={isVisible}\n\t\t\tonRequestClose={onRequestClose}\n\t\t\ttransparent\n\t\t\thideArrow\n\t\t\toverlayCloseOnClick\n\t\t\tcontentClassName='bg-white rounded-lg py-8 px-16 w-144 text-gray-500'\n\t\t\tdistance={4}\n\t\t\toffsets={{\n\t\t\t\ty: 16,\n\t\t\t}}\n\t\t>\n\t\t\t<OptionItem id='text' label='Text' disabled={rangeIsCollapsed} onPress={handleClickOption} />\n\t\t\t<OptionItem\n\t\t\t\tid='image'\n\t\t\t\tlabel='Image'\n\t\t\t\tdisabled={rangeIsCollapsed}\n\t\t\t\tonPress={handleClickOption}\n\t\t\t/>\n\t\t\t<OptionItem\n\t\t\t\tid='options'\n\t\t\t\tlabel='Dropdown'\n\t\t\t\tdisabled={rangeIsCollapsed}\n\t\t\t\tonPress={handleClickOption}\n\t\t\t/>\n\t\t\t<OptionItem\n\t\t\t\tid='radio'\n\t\t\t\tlabel='Radio'\n\t\t\t\tdisabled={rangeIsCollapsed}\n\t\t\t\tonPress={handleClickOption}\n\t\t\t/>\n\t\t\t<OptionItem id='date' label='Date' disabled={rangeIsCollapsed} onPress={handleClickOption} />\n\t\t\t<OptionItem id='time' label='Time' disabled={rangeIsCollapsed} onPress={handleClickOption} />\n\t\t\t<OptionItem id='question' label='Question only' onPress={handleClickOption} />\n\t\t\t<OptionItem\n\t\t\t\tid='existing'\n\t\t\t\tlabel='From existing...'\n\t\t\t\tdisabled={!rangeIsCollapsed}\n\t\t\t\tonPress={handleClickOption}\n\t\t\t/>\n\t\t</Popup>\n\t);\n};\n\nexport const EditableTypePopup = memo(BaseEditableTypePopup);\n","import React, {ChangeEvent, FC, KeyboardEvent, memo, useState} from 'react';\n\nimport {Button} from '../../button';\nimport Field from '../../field';\nimport {Popup} from '../../popup';\nimport {StencylPopupCoordinates} from '../../../../../types';\n\ntype EditableLabelPopupProps = {\n\tcoordinates: StencylPopupCoordinates;\n\tisVisible: boolean;\n\tonRequestClose: () => void;\n\tonSubmit: (value: string) => void;\n};\n\nconst BaseEditableLabelPopup: FC<EditableLabelPopupProps> = ({\n\tcoordinates: {x, y},\n\tisVisible,\n\tonRequestClose,\n\tonSubmit,\n}) => {\n\tconst [label, setLabel] = useState('');\n\n\tconst handleChangeLabel = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetLabel(e.target.value ?? '');\n\t};\n\n\tconst handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n\t\tif (e.key?.toLowerCase() === 'enter') {\n\t\t\thandleSubmit();\n\t\t}\n\t};\n\n\tconst handleSubmit = () => {\n\t\tif (!label?.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tonSubmit(label);\n\t\tonRequestClose();\n\t\tsetLabel('');\n\t};\n\n\treturn (\n\t\t<Popup\n\t\t\tposition='right'\n\t\t\talignment='start'\n\t\t\tisVisible={isVisible}\n\t\t\tonRequestClose={onRequestClose}\n\t\t\ttransparent\n\t\t\thideArrow\n\t\t\toverlayCloseOnClick\n\t\t\tcontentClassName='border-gray-50 border-solid border bg-white rounded-lg flex items-center py-8 px-8 space-x-8 text-gray-500'\n\t\t\tdistance={4}\n\t\t\toffsets={{\n\t\t\t\ty: y + 16,\n\t\t\t\tx: x,\n\t\t\t}}\n\t\t>\n\t\t\t<Field className='w-320'>\n\t\t\t\t<input\n\t\t\t\t\tautoFocus\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='Type a question here...'\n\t\t\t\t\tvalue={label}\n\t\t\t\t\tonChange={handleChangeLabel}\n\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t/>\n\t\t\t</Field>\n\t\t\t<Button className='h-36' onPress={handleSubmit} disabled={!label.length}>\n\t\t\t\tDone\n\t\t\t</Button>\n\t\t</Popup>\n\t);\n};\n\nexport const EditableLabelPopup = memo(BaseEditableLabelPopup);\n","import {EditableElement, StencylPopupCoordinates} from '../../../../../types';\nimport React, {ChangeEvent, FC, memo, useCallback, useMemo, useState} from 'react';\n\nimport Icon from '../../icon';\nimport {ReactComponent as ListSearch} from '../../../../../assets/images/icon-list-search.svg';\nimport {Popup} from '../../popup';\nimport classNames from 'classnames';\nimport {getAllEditableElements} from '../../../../../packages/editable/utils';\nimport {useSlateStatic} from 'slate-react';\n\ntype ExistingEditablePopupProps = {\n\tcoordinates: StencylPopupCoordinates;\n\tisVisible: boolean;\n\tonRequestClose: () => void;\n\tonSelect: (value: EditableElement) => void;\n};\n\nconst BaseExistingEditablePopup: FC<ExistingEditablePopupProps> = ({\n\tcoordinates: {x, y},\n\tisVisible,\n\tonRequestClose,\n\tonSelect,\n}) => {\n\tconst editor = useSlateStatic();\n\n\tconst editableElements = getAllEditableElements(editor);\n\n\tconst [keyword, setKeyword] = useState('');\n\n\tconst matchingElements = useMemo(() => {\n\t\treturn editableElements.filter(([node]) =>\n\t\t\tnode.defaultValue.toLowerCase().includes(keyword.toLowerCase()),\n\t\t);\n\t}, [keyword, editableElements]);\n\n\tconst handleSelectOption = useCallback(\n\t\t(option: EditableElement) => {\n\t\t\tonSelect(option);\n\t\t\tsetKeyword('');\n\t\t\tonRequestClose();\n\t\t},\n\t\t[onSelect, onRequestClose],\n\t);\n\n\tconst handleChangeKeyword = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetKeyword(e.target.value ?? '');\n\t};\n\n\treturn (\n\t\t<Popup\n\t\t\tposition='right'\n\t\t\talignment='start'\n\t\t\tisVisible={isVisible}\n\t\t\tonRequestClose={onRequestClose}\n\t\t\ttransparent\n\t\t\thideArrow\n\t\t\toverlayCloseOnClick\n\t\t\tcontentClassName='border-gray-50 border-solid border bg-white rounded-lg w-200 text-gray-500'\n\t\t\tdistance={4}\n\t\t\toffsets={{\n\t\t\t\ty: y + 16,\n\t\t\t\tx: x,\n\t\t\t}}\n\t\t>\n\t\t\t<div className='p-8'>\n\t\t\t\t<div className='flex items-center justify-between px-8 h-36 w-full border border-gray-200 rounded-lg transition:colors transition:shadow duration-250 focus-within:shadow-outline focus-within:border-blue-500'>\n\t\t\t\t\t<input\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tclassName='border-none h-full w-full bg-transparent m-0'\n\t\t\t\t\t\tplaceholder='Search...'\n\t\t\t\t\t\tvalue={keyword}\n\t\t\t\t\t\tonChange={handleChangeKeyword}\n\t\t\t\t\t/>\n\t\t\t\t\t<Icon className='text-gray-500'>\n\t\t\t\t\t\t<ListSearch />\n\t\t\t\t\t</Icon>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName={classNames({\n\t\t\t\t\t'pb-8': matchingElements.length,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t{matchingElements.map(([node]) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tkey={node.id}\n\t\t\t\t\t\tonClick={() => handleSelectOption(node)}\n\t\t\t\t\t\tclassName='px-8 h-28 flex items-center cursor-pointer bg-transparent transition-colors duration-250 hover:bg-gray-100'\n\t\t\t\t\t>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tstyle={{fontSize: '0.82em'}}\n\t\t\t\t\t\t\tclassName='inline-block text-white font-medium px-4 rounded-default mx-1 bg-blue-500'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{node.defaultValue}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</Popup>\n\t);\n};\n\nexport const ExistingEditablePopup = memo(BaseExistingEditablePopup);\n","import {BaseSelection, Editor, Transforms} from 'slate';\nimport {DATE_FORMATS, TIME_FORMATS} from '../../../../../../constants/datetime';\nimport {EditableElement, StencylPopupCoordinates} from '../../../../../../types';\nimport {EditableTypePopup, InsertEditableType} from '../../../popups/editable-type';\nimport React, {Fragment, useRef, useState} from 'react';\nimport {\n\tinsertInlineEditable,\n\tinsertInvisibleEditable,\n} from '../../../../../../packages/editable/commands';\n\nimport {ReactComponent as EditCircle} from '../../../../../../assets/images/icon-edit-circle.svg';\nimport {EditableLabelPopup} from '../../../popups/editable-label';\nimport {ExistingEditablePopup} from '../../../popups/existing-editable';\nimport {IconButton} from '../../../icon-button';\nimport {createEditableElement} from '../../../../../../packages/editable/utils';\nimport {focusEditor} from '../../../../../../packages/common/commands';\nimport {getSelectionCoordinates} from '../../../../../../packages/common/utils';\nimport {useModalUtils} from '../../../../../../hooks';\nimport {useSlateStatic} from 'slate-react';\n\nexport const InsertEditableButton = () => {\n\tconst selectionRef = useRef<BaseSelection>();\n\tconst ref = useRef(null);\n\tconst editor = useSlateStatic();\n\tconst editableTypeModalUtils = useModalUtils();\n\tconst editableLabelModalUtils = useModalUtils();\n\tconst existingEditableModalUtils = useModalUtils();\n\tconst [editableType, setEditableType] = useState<InsertEditableType>();\n\tconst [selectedText, setSelectedText] = useState('');\n\tconst [coordinates, setCoordinates] = useState<StencylPopupCoordinates>({x: 0, y: 0});\n\n\tconst handlePressIcon = () => {\n\t\tconst {selection} = editor;\n\n\t\tif (!selection) {\n\t\t\treturn;\n\t\t}\n\n\t\tselectionRef.current = selection;\n\n\t\tsetCoordinates(getSelectionCoordinates(editor));\n\t\tsetSelectedText(Editor.string(editor, selection));\n\t\teditableTypeModalUtils.open();\n\t};\n\n\tconst handleSelectEditableType = (value: InsertEditableType) => {\n\t\tsetEditableType(value);\n\n\t\tTransforms.select(editor, selectionRef.current!);\n\n\t\tif (value === 'existing') {\n\t\t\texistingEditableModalUtils.open();\n\t\t\treturn;\n\t\t}\n\n\t\teditableLabelModalUtils.open();\n\t};\n\n\tconst handleInsertEditable = (value: string) => {\n\t\tlet editable: EditableElement;\n\n\t\tswitch (editableType) {\n\t\t\tcase 'question':\n\t\t\t\teditable = createEditableElement(editor, {\n\t\t\t\t\tdataType: 'options',\n\t\t\t\t\tdefaultValue: '',\n\t\t\t\t\tlabel: value,\n\t\t\t\t\toptions: [],\n\t\t\t\t\tisInvisible: true,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'options':\n\t\t\tcase 'radio':\n\t\t\t\teditable = createEditableElement(editor, {\n\t\t\t\t\tdataType: editableType,\n\t\t\t\t\tdefaultValue: selectedText,\n\t\t\t\t\tlabel: value,\n\t\t\t\t\toptions: [],\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'date':\n\t\t\tcase 'time':\n\t\t\t\teditable = createEditableElement(editor, {\n\t\t\t\t\tdataType: editableType,\n\t\t\t\t\tdefaultValue: selectedText,\n\t\t\t\t\tlabel: value,\n\t\t\t\t\tdateTimeFormat: editableType === 'date' ? DATE_FORMATS[0] : TIME_FORMATS[0],\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'image':\n\t\t\t\teditable = createEditableElement(editor, {\n\t\t\t\t\tdataType: 'image',\n\t\t\t\t\tdefaultValue: selectedText,\n\t\t\t\t\tlabel: value,\n\t\t\t\t\twidth: 100,\n\t\t\t\t\theight: 100,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\teditable = createEditableElement(editor, {\n\t\t\t\t\tdataType: 'text',\n\t\t\t\t\tdefaultValue: selectedText,\n\t\t\t\t\tlabel: value,\n\t\t\t\t});\n\t\t}\n\n\t\tfocusEditor(editor, selectionRef.current ?? undefined);\n\n\t\teditableType === 'question'\n\t\t\t? insertInvisibleEditable(editor, editable)\n\t\t\t: insertInlineEditable(editor, editable);\n\t};\n\n\tconst handleInsertExistingEditable = (value: EditableElement) => {\n\t\tconst editable = createEditableElement(editor, {\n\t\t\tdataType: value.dataType as any,\n\t\t\tlabel: '',\n\t\t\tdefaultValue: '',\n\t\t\tlinkId: value.id,\n\t\t});\n\n\t\tfocusEditor(editor, selectionRef.current ?? undefined);\n\n\t\tinsertInlineEditable(editor, editable);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<IconButton tip='Insert editable...' onPress={handlePressIcon} ref={ref}>\n\t\t\t\t<EditCircle />\n\t\t\t</IconButton>\n\t\t\t<EditableTypePopup\n\t\t\t\tanchorRef={ref}\n\t\t\t\tisVisible={editableTypeModalUtils.visible}\n\t\t\t\tonRequestClose={editableTypeModalUtils.close}\n\t\t\t\tonSelect={handleSelectEditableType}\n\t\t\t/>\n\t\t\t<EditableLabelPopup\n\t\t\t\tcoordinates={coordinates}\n\t\t\t\tisVisible={editableLabelModalUtils.visible}\n\t\t\t\tonRequestClose={editableLabelModalUtils.close}\n\t\t\t\tonSubmit={handleInsertEditable}\n\t\t\t/>\n\t\t\t<ExistingEditablePopup\n\t\t\t\tcoordinates={coordinates}\n\t\t\t\tisVisible={existingEditableModalUtils.visible}\n\t\t\t\tonRequestClose={existingEditableModalUtils.close}\n\t\t\t\tonSelect={handleInsertExistingEditable}\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n","import {ImageDimensions, getImageSizeAsync} from '../../../../../packages/image/utils';\nimport React, {ChangeEvent, FC, KeyboardEvent, memo, useState} from 'react';\n\nimport {Button} from '../../button';\nimport Field from '../../field';\nimport Icon from '../../icon';\nimport {ImageInsertOptions} from '../../../../../packages/image/commands';\nimport {ReactComponent as Photo} from '../../../../../assets/images/icon-photo.svg';\nimport {Popup} from '../../popup';\nimport {StencylPopupCoordinates} from '../../../../../types';\nimport {isValidUrl} from '../../../../../utils';\nimport {useDebounceEffect} from '../../../../../hooks';\n\ntype InsertPhotoPopupProps = {\n\tcoordinates: StencylPopupCoordinates;\n\tisVisible: boolean;\n\tonRequestClose: () => void;\n\tonSubmit: (value: ImageInsertOptions) => void;\n};\n\nconst BaseInsertPhotoPopup: FC<InsertPhotoPopupProps> = ({\n\tcoordinates: {x, y},\n\tisVisible,\n\tonRequestClose,\n\tonSubmit,\n}) => {\n\tconst [url, setUrl] = useState('');\n\tconst [scale, setScale] = useState('100');\n\tconst [dimensions, setDimensions] = useState<ImageDimensions | null>(null);\n\n\tconst handleChangeScale = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetScale(e.target.value);\n\t};\n\n\tconst handleChangeUrl = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetUrl(e.target.value);\n\t};\n\n\tconst handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n\t\tif (e.key?.toLowerCase() === 'enter') {\n\t\t\thandleSubmit();\n\t\t}\n\t};\n\n\tconst handleSubmit = () => {\n\t\tif (!dimensions || !scale || !url?.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet parsedScale = parseFloat(scale);\n\t\tparsedScale = isNaN(parsedScale) || parsedScale < 1 ? 1 : parsedScale;\n\t\tparsedScale = parsedScale / 100;\n\n\t\tonSubmit({\n\t\t\turl,\n\t\t\twidth: Math.round(dimensions.width * parsedScale),\n\t\t\theight: Math.round(dimensions.height * parsedScale),\n\t\t});\n\t\tonRequestClose();\n\t\tresetFields();\n\t};\n\n\tconst getAndSetImageDimensionsAsync = async () => {\n\t\tsetDimensions(await getImageSizeAsync(url));\n\t};\n\n\tconst resetFields = () => {\n\t\tsetUrl('');\n\t\tsetScale('100');\n\t\tsetDimensions(null);\n\t};\n\n\tuseDebounceEffect(() => {\n\t\tif (isValidUrl(url)) {\n\t\t\tgetAndSetImageDimensionsAsync();\n\t\t}\n\t}, [url]);\n\n\treturn (\n\t\t<Popup\n\t\t\tposition='right'\n\t\t\talignment='start'\n\t\t\tisVisible={isVisible}\n\t\t\tonRequestClose={onRequestClose}\n\t\t\ttransparent\n\t\t\thideArrow\n\t\t\toverlayCloseOnClick\n\t\t\tcontentClassName='bg-white rounded-lg border-gray-50 border-solid border flex items-center py-8 px-8 space-x-8 text-gray-500'\n\t\t\tdistance={4}\n\t\t\toffsets={{\n\t\t\t\ty: y + 16,\n\t\t\t\tx: x,\n\t\t\t}}\n\t\t>\n\t\t\t<Icon className='s-20'>\n\t\t\t\t<Photo />\n\t\t\t</Icon>\n\t\t\t<div className='flex items-center space-x-4'>\n\t\t\t\t<Field className='w-180'>\n\t\t\t\t\t<input\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Paste a link to an image'\n\t\t\t\t\t\tvalue={url}\n\t\t\t\t\t\tonChange={handleChangeUrl}\n\t\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\t/>\n\t\t\t\t</Field>\n\t\t\t\t<div className='flex items-center justify-between px-8 h-36 border border-gray-200 rounded-lg transition:colors transition:shadow duration-250 focus-within:shadow-outline focus-within:border-blue-500'>\n\t\t\t\t\t<input\n\t\t\t\t\t\tvalue={scale}\n\t\t\t\t\t\tonChange={handleChangeScale}\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\tmaxLength={3}\n\t\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\t\tclassName='border-none h-full w-48 bg-transparent m-0'\n\t\t\t\t\t\tplaceholder='100'\n\t\t\t\t\t/>\n\t\t\t\t\t<div>%</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Button disabled={!dimensions} className='h-36' onPress={handleSubmit}>\n\t\t\t\tInsert\n\t\t\t</Button>\n\t\t</Popup>\n\t);\n};\n\nexport const InsertPhotoPopup = memo(BaseInsertPhotoPopup);\n","export type ImageDimensions = {\n\twidth: number;\n\theight: number;\n};\n\nexport function getImageSizeAsync(url: string): Promise<ImageDimensions | null> {\n\treturn new Promise((resolve) => {\n\t\tconst img = document.createElement('img');\n\n\t\timg.onload = () => {\n\t\t\tresolve({width: img.naturalWidth, height: img.naturalHeight});\n\t\t};\n\n\t\timg.onerror = () => {\n\t\t\tresolve(null);\n\t\t};\n\n\t\timg.src = url;\n\t});\n}\n","import {ImageInsertOptions, insertInlineImage} from '../../../../../../packages/image/commands';\nimport React, {Fragment, useRef, useState} from 'react';\n\nimport {BaseSelection} from 'slate';\nimport {IconButton} from '../../../icon-button';\nimport {InsertPhotoPopup} from '../../../popups/insert-photo';\nimport {ReactComponent as Photo} from '../../../../../../assets/images/icon-photo.svg';\nimport {StencylPopupCoordinates} from '../../../../../../types';\nimport {focusEditor} from '../../../../../../packages/common/commands';\nimport {getSelectionCoordinates} from '../../../../../../packages/common/utils';\nimport {useModalUtils} from '../../../../../../hooks';\nimport {useSlateStatic} from 'slate-react';\n\nexport const InsertPhotoButton = () => {\n\tconst selectionRef = useRef<BaseSelection>();\n\tconst ref = useRef(null);\n\tconst editor = useSlateStatic();\n\tconst modalUtils = useModalUtils();\n\tconst [coordinates, setCoordinates] = useState<StencylPopupCoordinates>({x: 0, y: 0});\n\n\tconst handlePressIcon = () => {\n\t\tconst {selection} = editor;\n\n\t\tif (!selection) {\n\t\t\treturn;\n\t\t}\n\n\t\tselectionRef.current = selection;\n\t\tsetCoordinates(getSelectionCoordinates(editor));\n\t\tmodalUtils.open();\n\t};\n\n\tconst handleInsertImage = (options: ImageInsertOptions) => {\n\t\tif (!selectionRef.current) {\n\t\t\treturn;\n\t\t}\n\n\t\tfocusEditor(editor, selectionRef.current);\n\n\t\tinsertInlineImage(editor, options);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<IconButton tip='Insert photo' onPress={handlePressIcon} ref={ref}>\n\t\t\t\t<Photo />\n\t\t\t</IconButton>\n\t\t\t<InsertPhotoPopup\n\t\t\t\tcoordinates={coordinates}\n\t\t\t\tisVisible={modalUtils.visible}\n\t\t\t\tonRequestClose={modalUtils.close}\n\t\t\t\tonSubmit={handleInsertImage}\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n","import {IconButton} from '../../../icon-button';\nimport React from 'react';\nimport {ReactComponent as Table} from '../../../../../../assets/images/icon-table.svg';\nimport {insertTableBlock} from '../../../../../../packages/table/commands';\nimport {useSlateStatic} from 'slate-react';\n\nexport const InsertTableButton = () => {\n\tconst editor = useSlateStatic();\n\n\tconst handlePress = () => {\n\t\tinsertTableBlock(editor);\n\t};\n\n\treturn (\n\t\t<IconButton onPress={handlePress} tip='Insert table'>\n\t\t\t<Table />\n\t\t</IconButton>\n\t);\n};\n","import {IconButton} from '../../../icon-button';\nimport {ReactComponent as Italic} from '../../../../../../assets/images/icon-italic.svg';\nimport React from 'react';\nimport {getShortcutText} from '../../../../../../utils';\nimport {isMarkActive} from '../../../../../../packages/common/utils';\nimport {toggleItalicMark} from '../../../../../../packages/leaf/commands';\nimport {useSlate} from 'slate-react';\n\nexport const ItalicButton = () => {\n\tconst editor = useSlate();\n\tconst isActive = isMarkActive(editor, 'italic');\n\n\tconst handlePress = () => {\n\t\ttoggleItalicMark(editor);\n\t};\n\n\treturn (\n\t\t<IconButton\n\t\t\tonPress={handlePress}\n\t\t\tactive={isActive}\n\t\t\ttip={`Italic ${getShortcutText('Mod', 'I')}`}\n\t\t>\n\t\t\t<Italic />\n\t\t</IconButton>\n\t);\n};\n","import {\n\tinsertNumberedListBlock,\n\tremoveListItemBlock,\n} from '../../../../../../packages/lists/commands';\n\nimport {IconButton} from '../../../icon-button';\nimport {ReactComponent as ListNumbers} from '../../../../../../assets/images/icon-list-numbers.svg';\nimport React from 'react';\nimport {getCurrentListBlock} from '../../../../../../packages/lists/utils';\nimport {useSlate} from 'slate-react';\n\nexport const NumberedListButton = () => {\n\tconst editor = useSlate();\n\tconst listBlock = getCurrentListBlock(editor);\n\tconst isActive = listBlock && listBlock[0].type === 'numbered-list';\n\n\tconst handlePress = () => {\n\t\tisActive ? removeListItemBlock(editor) : insertNumberedListBlock(editor);\n\t};\n\n\treturn (\n\t\t<IconButton onPress={handlePress} active={isActive} tip='Numbered list'>\n\t\t\t<ListNumbers />\n\t\t</IconButton>\n\t);\n};\n","import {ReactComponent as ArrowForwardUp} from '../../../../../../assets/images/icon-arrow-forward-up.svg';\nimport {HistoryEditor} from 'slate-history';\nimport {IconButton} from '../../../icon-button';\nimport React from 'react';\nimport {getShortcutText} from '../../../../../../utils';\nimport {useSlate} from 'slate-react';\n\nexport const RedoButton = () => {\n\tconst editor = useSlate();\n\n\tconst handlePress = () => {\n\t\tHistoryEditor.redo(editor);\n\t};\n\n\treturn (\n\t\t<IconButton\n\t\t\tonPress={handlePress}\n\t\t\tdisabled={!editor.history.redos.length}\n\t\t\ttip={`Redo ${getShortcutText('Mod', 'Shift', 'Z')}`}\n\t\t>\n\t\t\t<ArrowForwardUp />\n\t\t</IconButton>\n\t);\n};\n","import {IconButton} from '../../../icon-button';\nimport React from 'react';\nimport {ReactComponent as Strikethrough} from '../../../../../../assets/images/icon-strikethrough.svg';\nimport {getShortcutText} from '../../../../../../utils';\nimport {isMarkActive} from '../../../../../../packages/common/utils';\nimport {toggleStrikethroughMark} from '../../../../../../packages/leaf/commands';\nimport {useSlate} from 'slate-react';\n\nexport const StrikethroughButton = () => {\n\tconst editor = useSlate();\n\tconst isActive = isMarkActive(editor, 'strikethrough');\n\n\tconst handlePress = () => {\n\t\ttoggleStrikethroughMark(editor);\n\t};\n\n\treturn (\n\t\t<IconButton\n\t\t\tonPress={handlePress}\n\t\t\tactive={isActive}\n\t\t\ttip={`Strikethrough ${getShortcutText('Mod', 'Shift', 'X')}`}\n\t\t>\n\t\t\t<Strikethrough />\n\t\t</IconButton>\n\t);\n};\n","import {AnchorRef, Popup} from '../../popup';\nimport React, {FC, memo} from 'react';\nimport colors, {PRESET_COLORS} from '../../../../../constants/colors';\nimport {getCurrentDisplayTextSize, getMarkValue} from '../../../../../packages/common/utils';\nimport {setColorMark, unsetColorMark} from '../../../../../packages/leaf/commands';\nimport {\n\ttoggleHeadingOne,\n\ttoggleHeadingThree,\n\ttoggleHeadingTwo,\n} from '../../../../../packages/headings/commands';\nimport {useBooleanState, useMouseDown} from '../../../../../hooks';\n\nimport {ReactComponent as ChevronDown} from '../../../../../assets/images/icon-chevron-down.svg';\nimport Icon from '../../icon';\nimport {StencylDisplayTextSize} from '../../../../../types';\nimport classNames from 'classnames';\nimport css from './style.module.css';\nimport {isEqualColor} from '../../../../../utils';\nimport {setBlockAsParagraph} from '../../../../../packages/paragraph/commands';\nimport {useSlate} from 'slate-react';\n\ntype TextStylePopupProps = {\n\tanchorRef: AnchorRef;\n\tisVisible: boolean;\n\tonRequestClose: () => void;\n};\n\ntype ColorItemProps = {\n\tselected?: boolean;\n\tcolor?: string;\n\tonPress?: (color?: string) => void;\n};\n\ntype TextSizeItemProps = {\n\ttextSize?: StencylDisplayTextSize;\n\tlabel: string;\n\tonPress?: (textSize?: StencylDisplayTextSize) => void;\n};\n\nconst ColorItem: FC<ColorItemProps> = ({color, selected, onPress}) => {\n\tconst handleMouseDown = useMouseDown(() => {\n\t\tonPress?.(color);\n\t});\n\n\treturn (\n\t\t<div\n\t\t\tonMouseDown={handleMouseDown}\n\t\t\tstyle={{backgroundColor: color ?? colors.black}}\n\t\t\tclassName={classNames(\n\t\t\t\t'w-20 h-20 rounded-full cursor-pointer duration-250 transition-shadow hover:shadow-outline',\n\t\t\t\t{\n\t\t\t\t\t'shadow-outline': selected,\n\t\t\t\t},\n\t\t\t)}\n\t\t/>\n\t);\n};\n\nconst TextSizeItem: FC<TextSizeItemProps> = ({textSize, label, onPress}) => {\n\tconst handleMouseDown = useMouseDown(() => {\n\t\tonPress?.(textSize);\n\t});\n\n\treturn (\n\t\t<div\n\t\t\tonMouseDown={handleMouseDown}\n\t\t\tclassName='h-36 flex items-center transition-colors duration-250 hover:text-gray-900 cursor-pointer'\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName={classNames({\n\t\t\t\t\t'text-headline': textSize === 'heading-three',\n\t\t\t\t\t'text-heading-3': textSize === 'heading-two',\n\t\t\t\t\t'text-heading-2': textSize === 'heading-one',\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst BaseTextStylePopup: FC<TextStylePopupProps> = ({anchorRef, isVisible, onRequestClose}) => {\n\tconst editor = useSlate();\n\tconst colorMark = getMarkValue(editor, 'color');\n\tconst textSize = getCurrentDisplayTextSize(editor);\n\tconst [selectorOpen, toggleSelectorOpen] = useBooleanState(false);\n\n\tconst handleClickSelector = useMouseDown(() => {\n\t\ttoggleSelectorOpen();\n\t});\n\n\tconst handleClickTextSizeOption = (option?: StencylDisplayTextSize) => {\n\t\tif (!option) {\n\t\t\tsetBlockAsParagraph(editor);\n\t\t}\n\n\t\tif (option === 'heading-one') {\n\t\t\ttoggleHeadingOne(editor);\n\t\t}\n\n\t\tif (option === 'heading-two') {\n\t\t\ttoggleHeadingTwo(editor);\n\t\t}\n\n\t\tif (option === 'heading-three') {\n\t\t\ttoggleHeadingThree(editor);\n\t\t}\n\n\t\ttoggleSelectorOpen();\n\t};\n\n\tconst handleClickColorOption = (color?: string) => {\n\t\tif (!color) {\n\t\t\tunsetColorMark(editor);\n\t\t\treturn;\n\t\t}\n\n\t\tsetColorMark(editor, color);\n\t};\n\n\treturn (\n\t\t<Popup\n\t\t\tposition='down'\n\t\t\talignment='start'\n\t\t\tanchorRef={anchorRef}\n\t\t\tisVisible={isVisible}\n\t\t\tonRequestClose={onRequestClose}\n\t\t\ttransparent\n\t\t\thideArrow\n\t\t\toverlayCloseOnClick\n\t\t\tcontentClassName='bg-white rounded-lg py-16 text-gray-500 divide-y divide-y-gray-100'\n\t\t\tdistance={4}\n\t\t\toffsets={{\n\t\t\t\ty: 16,\n\t\t\t}}\n\t\t>\n\t\t\t<div className='pb-8 px-16'>\n\t\t\t\t<div className='text-blue-500 font-medium'>Style</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames(css.selector, {\n\t\t\t\t\t\t[css.open]: selectorOpen,\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tonMouseDown={handleClickSelector}\n\t\t\t\t\t\tclassName='h-36 flex items-center space-x-6 transition-colors duration-250 hover:text-gray-900 cursor-pointer'\n\t\t\t\t\t>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{!textSize && 'Base Paragraph'}\n\t\t\t\t\t\t\t{textSize === 'heading-one' && 'Heading 1'}\n\t\t\t\t\t\t\t{textSize === 'heading-two' && 'Heading 2'}\n\t\t\t\t\t\t\t{textSize === 'heading-three' && 'Heading 3'}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Icon className='s-18'>\n\t\t\t\t\t\t\t<ChevronDown />\n\t\t\t\t\t\t</Icon>\n\t\t\t\t\t</div>\n\t\t\t\t\t{!!textSize && (\n\t\t\t\t\t\t<TextSizeItem label='Base Paragraph' onPress={handleClickTextSizeOption} />\n\t\t\t\t\t)}\n\t\t\t\t\t{textSize !== 'heading-three' && (\n\t\t\t\t\t\t<TextSizeItem\n\t\t\t\t\t\t\tlabel='Heading 3'\n\t\t\t\t\t\t\ttextSize='heading-three'\n\t\t\t\t\t\t\tonPress={handleClickTextSizeOption}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{textSize !== 'heading-two' && (\n\t\t\t\t\t\t<TextSizeItem\n\t\t\t\t\t\t\tlabel='Heading 2'\n\t\t\t\t\t\t\ttextSize='heading-two'\n\t\t\t\t\t\t\tonPress={handleClickTextSizeOption}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{textSize !== 'heading-one' && (\n\t\t\t\t\t\t<TextSizeItem\n\t\t\t\t\t\t\tlabel='Heading 1'\n\t\t\t\t\t\t\ttextSize='heading-one'\n\t\t\t\t\t\t\tonPress={handleClickTextSizeOption}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='pt-16 px-16'>\n\t\t\t\t<div className='text-blue-500 font-medium mb-8'>Color</div>\n\t\t\t\t<div className='flex items-center space-x-6'>\n\t\t\t\t\t{PRESET_COLORS.map((o) => (\n\t\t\t\t\t\t<ColorItem\n\t\t\t\t\t\t\tcolor={o}\n\t\t\t\t\t\t\tkey={o}\n\t\t\t\t\t\t\tselected={isEqualColor(o, colorMark)}\n\t\t\t\t\t\t\tonPress={handleClickColorOption}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t\t<ColorItem selected={!colorMark} onPress={handleClickColorOption} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Popup>\n\t);\n};\n\nexport const TextStylePopup = memo(BaseTextStylePopup);\n","import {StencylEditor} from '../../types';\nimport {deactivateBlock} from '../common/commands';\n\nexport function setBlockAsParagraph(editor: StencylEditor) {\n\tdeactivateBlock(editor);\n}\n","import {activateBlock, deactivateBlock} from '../common/commands';\n\nimport {StencylEditor} from '../../types';\nimport {isBlockActive} from '../common/utils';\n\nexport function toggleHeadingOne(editor: StencylEditor) {\n\tisBlockActive(editor, 'heading-one')\n\t\t? deactivateBlock(editor)\n\t\t: activateBlock(editor, 'heading-one');\n}\n\nexport function toggleHeadingTwo(editor: StencylEditor) {\n\tisBlockActive(editor, 'heading-two')\n\t\t? deactivateBlock(editor)\n\t\t: activateBlock(editor, 'heading-two');\n}\n\nexport function toggleHeadingThree(editor: StencylEditor) {\n\tisBlockActive(editor, 'heading-three')\n\t\t? deactivateBlock(editor)\n\t\t: activateBlock(editor, 'heading-three');\n}\n\nexport function toggleHeadingFour(editor: StencylEditor) {\n\tisBlockActive(editor, 'heading-four')\n\t\t? deactivateBlock(editor)\n\t\t: activateBlock(editor, 'heading-four');\n}\n\nexport function toggleHeadingFive(editor: StencylEditor) {\n\tisBlockActive(editor, 'heading-five')\n\t\t? deactivateBlock(editor)\n\t\t: activateBlock(editor, 'heading-one');\n}\n\nexport function toggleHeadingSix(editor: StencylEditor) {\n\tisBlockActive(editor, 'heading-six')\n\t\t? deactivateBlock(editor)\n\t\t: activateBlock(editor, 'heading-six');\n}\n","import React, {Fragment, useRef} from 'react';\nimport {getCurrentDisplayTextSize, getMarkValue} from '../../../../../../packages/common/utils';\n\nimport {ReactComponent as H1} from '../../../../../../assets/images/icon-h-1.svg';\nimport {ReactComponent as H2} from '../../../../../../assets/images/icon-h-2.svg';\nimport {ReactComponent as H3} from '../../../../../../assets/images/icon-h-3.svg';\nimport {IconButton} from '../../../icon-button';\nimport {ReactComponent as LetterCase} from '../../../../../../assets/images/icon-letter-case.svg';\nimport {TextStylePopup} from '../../../popups/text-style';\nimport colors from '../../../../../../constants/colors';\nimport {getRgbaColor} from '../../../../../../utils';\nimport {useModalUtils} from '../../../../../../hooks';\nimport {useSlate} from 'slate-react';\n\nexport const TextStyleButton = () => {\n\tconst ref = useRef(null);\n\tconst modalUtils = useModalUtils();\n\tconst editor = useSlate();\n\tconst colorMark = getMarkValue(editor, 'color');\n\tconst textSize = getCurrentDisplayTextSize(editor);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<IconButton\n\t\t\t\tonPress={modalUtils.open}\n\t\t\t\tref={ref}\n\t\t\t\ttip='Text style'\n\t\t\t\tclassName='transition-shadow hover:shadow-outline'\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundColor: getRgbaColor(colorMark ?? colors.black, 0.15),\n\t\t\t\t\tcolor: colorMark ?? colors.black,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{textSize === 'heading-one' && <H1 />}\n\t\t\t\t{textSize === 'heading-two' && <H2 />}\n\t\t\t\t{textSize === 'heading-three' && <H3 />}\n\t\t\t\t{!textSize && <LetterCase />}\n\t\t\t</IconButton>\n\t\t\t<TextStylePopup\n\t\t\t\tanchorRef={ref}\n\t\t\t\tisVisible={modalUtils.visible}\n\t\t\t\tonRequestClose={modalUtils.close}\n\t\t\t/>\n\t\t</Fragment>\n\t);\n};\n","import {IconButton} from '../../../icon-button';\nimport React from 'react';\nimport {ReactComponent as Underline} from '../../../../../../assets/images/icon-underline.svg';\nimport {getShortcutText} from '../../../../../../utils';\nimport {isMarkActive} from '../../../../../../packages/common/utils';\nimport {toggleUnderlineMark} from '../../../../../../packages/leaf/commands';\nimport {useSlate} from 'slate-react';\n\nexport const UnderlineButton = () => {\n\tconst editor = useSlate();\n\tconst isActive = isMarkActive(editor, 'underline');\n\n\tconst handlePress = () => {\n\t\ttoggleUnderlineMark(editor);\n\t};\n\n\treturn (\n\t\t<IconButton\n\t\t\tonPress={handlePress}\n\t\t\tactive={isActive}\n\t\t\ttip={`Underline ${getShortcutText('Mod', 'U')}`}\n\t\t>\n\t\t\t<Underline />\n\t\t</IconButton>\n\t);\n};\n","import {ReactComponent as ArrowBackUp} from '../../../../../../assets/images/icon-arrow-back-up.svg';\nimport {HistoryEditor} from 'slate-history';\nimport {IconButton} from '../../../icon-button';\nimport React from 'react';\nimport {getShortcutText} from '../../../../../../utils';\nimport {useSlate} from 'slate-react';\n\nexport const UndoButton = () => {\n\tconst editor = useSlate();\n\n\tconst handlePress = () => {\n\t\tHistoryEditor.undo(editor);\n\t};\n\n\treturn (\n\t\t<IconButton\n\t\t\tonPress={handlePress}\n\t\t\tdisabled={!editor.history.undos.length}\n\t\t\ttip={`Undo ${getShortcutText('Mod', 'Z')}`}\n\t\t>\n\t\t\t<ArrowBackUp />\n\t\t</IconButton>\n\t);\n};\n","import React, {memo} from 'react';\n\nimport {AlignCenterButton} from './modules/align-center';\nimport {AlignJustifiedButton} from './modules/align-justified';\nimport {AlignLeftButton} from './modules/align-left';\nimport {AlignRightButton} from './modules/align-right';\nimport {BoldButton} from './modules/bold';\nimport {BulletedListButton} from './modules/bulleted-list';\nimport {ClearFormattingButton} from './modules/clear-formatting';\nimport {DisplayFlagButton} from './modules/display-flag';\nimport IconGroup from '../icon-group';\nimport {IndentDecreaseButton} from './modules/indent-decrease';\nimport {IndentIncreaseButton} from './modules/indent-increase';\nimport {InsertEditableButton} from './modules/insert-editable';\nimport {InsertPhotoButton} from './modules/insert-photo';\nimport {InsertTableButton} from './modules/insert-table';\nimport {ItalicButton} from './modules/italic';\nimport {NumberedListButton} from './modules/numbered-list';\nimport {RedoButton} from './modules/redo';\nimport {StrikethroughButton} from './modules/strikethrough';\nimport {TextStyleButton} from './modules/text-style';\nimport {UnderlineButton} from './modules/underline';\nimport {UndoButton} from './modules/undo';\n\nconst BaseToolbar = () => {\n\treturn (\n\t\t<div className='flex items-center justify-between px-60 py-16 bg-white'>\n\t\t\t<div className='flex items-center divide-x divide-gray-100'>\n\t\t\t\t<IconGroup>\n\t\t\t\t\t<UndoButton />\n\t\t\t\t\t<RedoButton />\n\t\t\t\t</IconGroup>\n\t\t\t\t<IconGroup>\n\t\t\t\t\t<TextStyleButton />\n\t\t\t\t</IconGroup>\n\t\t\t\t<IconGroup>\n\t\t\t\t\t<BoldButton />\n\t\t\t\t\t<ItalicButton />\n\t\t\t\t\t<UnderlineButton />\n\t\t\t\t\t<StrikethroughButton />\n\t\t\t\t</IconGroup>\n\t\t\t\t<IconGroup>\n\t\t\t\t\t<AlignLeftButton />\n\t\t\t\t\t<AlignCenterButton />\n\t\t\t\t\t<AlignRightButton />\n\t\t\t\t\t<AlignJustifiedButton />\n\t\t\t\t</IconGroup>\n\t\t\t\t<IconGroup>\n\t\t\t\t\t<IndentDecreaseButton />\n\t\t\t\t\t<IndentIncreaseButton />\n\t\t\t\t</IconGroup>\n\t\t\t\t<IconGroup>\n\t\t\t\t\t<BulletedListButton />\n\t\t\t\t\t<NumberedListButton />\n\t\t\t\t</IconGroup>\n\t\t\t\t<IconGroup>\n\t\t\t\t\t<InsertTableButton />\n\t\t\t\t\t<InsertPhotoButton />\n\t\t\t\t\t<InsertEditableButton />\n\t\t\t\t\t<DisplayFlagButton />\n\t\t\t\t</IconGroup>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<ClearFormattingButton />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport const Toolbar = memo(BaseToolbar);\n","import {StencylEditor} from '../../types';\n\nexport const withEditable = (editor: StencylEditor) => {\n\tconst {isVoid, isInline} = editor;\n\n\teditor.isInline = (element) => {\n\t\treturn element.type === 'editable' && !element.isInvisible ? true : isInline(element);\n\t};\n\n\teditor.isVoid = (element) => {\n\t\treturn element.type === 'editable' ? true : isVoid(element);\n\t};\n\n\treturn editor;\n};\n","import {Descendant, Element, Text} from 'slate';\nimport {StencylAlignment, StencylEditor, StencylElement, StencylText} from '../../types';\n\nimport constants from '../../constants';\nimport {getEmptyTextNode} from '../common/utils';\nimport htmlNodeTypes from '../../constants/html-node-types';\nimport {jsx} from 'slate-hyperscript';\n\nexport type DeserializedChildren = Descendant | Descendant[] | undefined | null;\n\nexport type DeserializeFn = (element: Node, children: Descendant[]) => DeserializedChildren;\n\nexport function cruftFilterFn(element: HTMLElement) {\n\treturn !(element.nodeName === '#text' && /^[\\n]{1,}$/.test(element.nodeValue ?? ''));\n}\n\nexport function invalidNodesFilterFn(element: HTMLElement) {\n\treturn [htmlNodeTypes.ELEMENT_NODE, htmlNodeTypes.TEXT_NODE].includes(element.nodeType);\n}\n\nexport function deserializeToFragment(children: any) {\n\treturn jsx('fragment', {}, children);\n}\n\nexport function deserializeToElement(attributes: Partial<StencylElement>, children: any) {\n\treturn jsx('element', attributes, children);\n}\n\nexport function deserializeToLeaf(attributes: Partial<StencylText>, child?: any) {\n\treturn jsx('text', attributes, child);\n}\n\nexport function matchHTMLNode(\n\telement: Node,\n\trules: {nodeName?: string; nodeType?: number; nodeValue?: string | null} = {},\n) {\n\treturn Object.keys(rules).every((o) => element[o] === rules[o]);\n}\n\nexport function matchHTMLElementNode(\n\telement: Node,\n\trules: {nodeName?: string; nodeType?: number; nodeValue?: string | null} = {},\n) {\n\treturn matchHTMLNode(element, {nodeType: htmlNodeTypes.ELEMENT_NODE, ...rules});\n}\n\nexport function matchHTMLTextNode(\n\telement: HTMLElement,\n\trules: {nodeName?: string; nodeType?: number; nodeValue?: string | null} = {},\n) {\n\treturn matchHTMLNode(element, {nodeType: htmlNodeTypes.TEXT_NODE, ...rules});\n}\n\nexport function wrapInlineTopLevelNodesInParagraph(editor: StencylEditor, nodes: Descendant[]) {\n\tconst wrappedNodes: Array<Descendant> = [];\n\tconst pendingNodes: Array<Descendant> = [];\n\n\tconst flushPendingNodes = () => {\n\t\tif (pendingNodes.length) {\n\t\t\twrappedNodes.push(\n\t\t\t\tdeserializeToElement(\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'paragraph',\n\t\t\t\t\t},\n\t\t\t\t\tpendingNodes,\n\t\t\t\t),\n\t\t\t);\n\t\t\tpendingNodes.length = 0;\n\t\t}\n\t};\n\n\tfor (const node of nodes) {\n\t\tconst isInline = Text.isText(node) || editor.isInline(node);\n\n\t\tif (isInline) {\n\t\t\tpendingNodes.push(node);\n\t\t} else {\n\t\t\tflushPendingNodes();\n\t\t\twrappedNodes.push(node);\n\t\t}\n\t}\n\n\tflushPendingNodes();\n\n\treturn wrappedNodes;\n}\n\nexport function normalizeFirstNode(nodes: Descendant[]) {\n\tif (!nodes.length) {\n\t\treturn nodes;\n\t}\n\n\tconst firstNode = nodes[0];\n\n\tif (Element.isElement(firstNode) && firstNode.type !== 'paragraph') {\n\t\tnodes = [{type: 'paragraph', children: getEmptyTextNode()}, ...nodes];\n\t}\n\n\treturn nodes;\n}\n\nexport function getNodeStyle<T extends keyof CSSStyleDeclaration>(\n\tnode: Node,\n\tkey: T,\n): CSSStyleDeclaration[T] | undefined {\n\tif (node instanceof HTMLElement) {\n\t\treturn node.style[key];\n\t}\n\n\treturn undefined;\n}\n\nexport function getNodeAttribute(node: Node, key: string): string | undefined {\n\tif (node instanceof HTMLElement) {\n\t\treturn node.getAttribute(key) ?? undefined;\n\t}\n\n\treturn undefined;\n}\n\nexport function getStencylAlignmentAttribute(\n\talignment: string | undefined,\n): StencylAlignment | undefined {\n\tif (!alignment) {\n\t\treturn undefined;\n\t}\n\n\tif (['start', 'left'].includes(alignment)) {\n\t\treturn 'left';\n\t}\n\n\tif (['end', 'right'].includes(alignment)) {\n\t\treturn 'right';\n\t}\n\n\tif (['center'].includes(alignment)) {\n\t\treturn 'center';\n\t}\n\n\tif (['justify'].includes(alignment)) {\n\t\treturn 'justify';\n\t}\n\n\treturn undefined;\n}\n\nexport function getNodeIndentation(node: Node): number | undefined {\n\tif (node instanceof HTMLElement) {\n\t\tconst marginLeft = getNodeStyle(node, 'marginLeft');\n\n\t\tif (marginLeft?.length) {\n\t\t\tconst parsed = parseFloat(marginLeft);\n\n\t\t\tif (parsed) {\n\t\t\t\treturn Math.round((parsed * 100) / constants.paperSizes.a4.width);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nexport function getNodeTextContent(node: Node): string {\n\tconst text = node.textContent ?? '';\n\n\treturn text === '\\n' ? text : text.replace(/[\\n]/gi, ' ');\n}\n","import {\n\tDeserializeFn,\n\tdeserializeToFragment,\n\tdeserializeToLeaf,\n\tmatchHTMLElementNode,\n} from './utils';\n\nimport htmlNodeNames from '../../constants/html-node-names';\nimport htmlNodeTypes from '../../constants/html-node-types';\n\nexport const deserializeBody: DeserializeFn = (element, children) => {\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.BLOCKQUOTE})) {\n\t\treturn deserializeToFragment(children);\n\t}\n\n\treturn undefined;\n};\n\nexport const deserializeLineBreak: DeserializeFn = (element, children) => {\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.BR})) {\n\t\treturn deserializeToLeaf({text: '\\n'}, children);\n\t}\n\n\treturn undefined;\n};\n\nexport const deserializeMarks: DeserializeFn = (element, children) => {\n\tif (\n\t\t![\n\t\t\thtmlNodeNames.SPAN,\n\t\t\thtmlNodeNames.STRONG,\n\t\t\thtmlNodeNames.I,\n\t\t\thtmlNodeNames.B,\n\t\t\thtmlNodeNames.U,\n\t\t\thtmlNodeNames.S,\n\t\t\thtmlNodeNames.CODE,\n\t\t\thtmlNodeNames.FONT,\n\t\t].includes(element.nodeName) &&\n\t\telement.nodeType !== htmlNodeTypes.TEXT_NODE\n\t) {\n\t\treturn undefined;\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.SPAN})) {\n\t\treturn children;\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.FONT})) {\n\t\treturn children;\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.STRONG})) {\n\t\treturn children.map((child) => ({...child, bold: true}));\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.B})) {\n\t\treturn children.map((child) => ({...child, bold: true}));\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.I})) {\n\t\treturn children.map((child) => ({...child, italic: true}));\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.U})) {\n\t\treturn children.map((child) => ({...child, underline: true}));\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.S})) {\n\t\treturn children.map((child) => ({...child, strikethrough: true}));\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.CODE})) {\n\t\treturn children.map((child) => ({...child, code: true}));\n\t}\n\n\treturn undefined;\n};\n","import {\n\tDeserializeFn,\n\tcruftFilterFn,\n\tdeserializeToFragment,\n\tdeserializeToLeaf,\n\tgetNodeTextContent,\n\tinvalidNodesFilterFn,\n\tmatchHTMLElementNode,\n\tnormalizeFirstNode,\n\twrapInlineTopLevelNodesInParagraph,\n} from './utils';\nimport {deserializeBody, deserializeLineBreak, deserializeMarks} from './rules';\n\nimport {Descendant} from 'slate';\nimport {StencylEditor} from '../../types';\nimport {deserializeBlockquote} from '../blockquote/deserialize';\nimport {deserializeCodeblock} from '../codeblock/deserialize';\nimport {deserializeHeadings} from '../headings/deserialize';\nimport {deserializeImage} from '../image/deserialize';\nimport {deserializeLink} from '../link/deserialize';\nimport {deserializeLists} from '../lists/deserialize';\nimport {deserializeParagraph} from '../paragraph/deserialize';\nimport {deserializeTable} from '../table/deserialize';\nimport {getEmptyTextNode} from '../common/utils';\nimport htmlNodeNames from '../../constants/html-node-names';\nimport htmlNodeTypes from '../../constants/html-node-types';\nimport {notNil} from '../../utils';\n\nexport const withHTMLDeserializer = (editor: StencylEditor) => {\n\tconst {insertData} = editor;\n\n\teditor.insertData = (data) => {\n\t\tconst html = data.getData('text/html');\n\n\t\tif (html) {\n\t\t\tconst fragment = deserializeHTML(html, editor);\n\t\t\teditor.insertFragment(fragment);\n\t\t\treturn;\n\t\t}\n\n\t\tinsertData(data);\n\t};\n\n\treturn editor;\n};\n\nconst VOID_NODES = [htmlNodeNames.IMG];\n\nconst rules: Array<DeserializeFn> = [\n\tdeserializeBody,\n\tdeserializeLineBreak,\n\tdeserializeBlockquote,\n\tdeserializeCodeblock,\n\tdeserializeHeadings,\n\tdeserializeImage,\n\tdeserializeLink,\n\tdeserializeLists,\n\tdeserializeParagraph,\n\tdeserializeTable,\n\tdeserializeMarks,\n];\n\nfunction deserializeHTML(html: string, editor: StencylEditor) {\n\tconst parsed = new DOMParser().parseFromString(html, 'text/html');\n\tconst children = deserializeHTMLElements(Array.from(parsed.body.childNodes));\n\treturn deserializeToFragment(\n\t\tnormalizeFirstNode(wrapInlineTopLevelNodesInParagraph(editor, children)),\n\t);\n}\n\nfunction deserializeHTMLElements(elements: Array<Node>) {\n\tlet nodes: Descendant[] = [];\n\n\telements\n\t\t.filter(cruftFilterFn)\n\t\t.filter(invalidNodesFilterFn)\n\t\t.forEach((o) => {\n\t\t\tconst result = deserializeHTMLElement(o);\n\n\t\t\tif (Array.isArray(result)) {\n\t\t\t\tnodes = nodes.concat(result);\n\t\t\t} else {\n\t\t\t\tif (notNil(result)) {\n\t\t\t\t\tnodes.push(result);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\treturn nodes;\n}\n\nfunction deserializeHTMLElement(element: Node) {\n\tlet children = deserializeHTMLElements(normalizeChildNodes(element.childNodes, element));\n\n\tif (!children?.length && !VOID_NODES.includes(element.nodeName)) {\n\t\treturn deserializeToLeaf({text: getNodeTextContent(element)});\n\t}\n\n\tchildren = children.length ? children : getEmptyTextNode();\n\n\tfor (const rule of rules) {\n\t\tconst result = rule(element, children);\n\n\t\tif (typeof result === 'undefined') {\n\t\t\tcontinue;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tif (children?.length) {\n\t\treturn children;\n\t}\n\n\treturn null;\n}\n\nfunction normalizeChildNodes(childNodeList: NodeListOf<ChildNode>, parent: Node): Array<Node> {\n\tconst childNodes = Array.from(childNodeList);\n\n\tif (!matchHTMLElementNode(parent, {nodeName: htmlNodeNames.LI})) {\n\t\treturn childNodes;\n\t}\n\n\tconst validNodes: Array<Node> = [];\n\tconst pendingNodes: Array<Node> = [];\n\tconst validNodeNames = [\n\t\thtmlNodeNames.TABLE,\n\t\thtmlNodeNames.OL,\n\t\thtmlNodeNames.UL,\n\t\thtmlNodeNames.LIC,\n\t];\n\n\tfor (const node of childNodes) {\n\t\tif (node.nodeType === htmlNodeTypes.ELEMENT_NODE && validNodeNames.includes(node.nodeName)) {\n\t\t\tvalidNodes.push(node);\n\t\t} else {\n\t\t\tpendingNodes.push(node);\n\t\t}\n\t}\n\n\tif (pendingNodes.length) {\n\t\tconst container = document.createElement(htmlNodeNames.LIC);\n\t\tpendingNodes.forEach((o) => container.appendChild(o));\n\t\treturn [container, ...validNodes];\n\t}\n\n\treturn validNodes;\n}\n","import {\n\tDeserializeFn,\n\tdeserializeToElement,\n\tgetNodeIndentation,\n\tgetNodeStyle,\n\tgetStencylAlignmentAttribute,\n\tmatchHTMLElementNode,\n} from '../deserialize/utils';\n\nimport htmlNodeNames from '../../constants/html-node-names';\n\nexport const deserializeBlockquote: DeserializeFn = (element, children) => {\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.BLOCKQUOTE})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'block-quote',\n\t\t\t\talignment: getStencylAlignmentAttribute(getNodeStyle(element, 'textAlign')),\n\t\t\t\tindentation: getNodeIndentation(element),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\treturn undefined;\n};\n","import {\n\tDeserializeFn,\n\tdeserializeToElement,\n\tgetNodeIndentation,\n\tgetNodeStyle,\n\tgetStencylAlignmentAttribute,\n\tmatchHTMLElementNode,\n} from '../deserialize/utils';\n\nimport htmlNodeNames from '../../constants/html-node-names';\n\nexport const deserializeCodeblock: DeserializeFn = (element, children) => {\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.PRE})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'code-block',\n\t\t\t\talignment: getStencylAlignmentAttribute(getNodeStyle(element, 'textAlign')),\n\t\t\t\tindentation: getNodeIndentation(element),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\treturn undefined;\n};\n","import {\n\tDeserializeFn,\n\tdeserializeToElement,\n\tgetNodeIndentation,\n\tgetNodeStyle,\n\tgetStencylAlignmentAttribute,\n\tmatchHTMLElementNode,\n} from '../deserialize/utils';\n\nimport htmlNodeNames from '../../constants/html-node-names';\n\nexport const deserializeHeadings: DeserializeFn = (element, children) => {\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.H1})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'heading-one',\n\t\t\t\talignment: getStencylAlignmentAttribute(getNodeStyle(element, 'textAlign')),\n\t\t\t\tindentation: getNodeIndentation(element),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.H2})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'heading-two',\n\t\t\t\talignment: getStencylAlignmentAttribute(getNodeStyle(element, 'textAlign')),\n\t\t\t\tindentation: getNodeIndentation(element),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.H3})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'heading-three',\n\t\t\t\talignment: getStencylAlignmentAttribute(getNodeStyle(element, 'textAlign')),\n\t\t\t\tindentation: getNodeIndentation(element),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.H4})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'heading-four',\n\t\t\t\talignment: getStencylAlignmentAttribute(getNodeStyle(element, 'textAlign')),\n\t\t\t\tindentation: getNodeIndentation(element),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.H5})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'heading-five',\n\t\t\t\talignment: getStencylAlignmentAttribute(getNodeStyle(element, 'textAlign')),\n\t\t\t\tindentation: getNodeIndentation(element),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.H6})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'heading-six',\n\t\t\t\talignment: getStencylAlignmentAttribute(getNodeStyle(element, 'textAlign')),\n\t\t\t\tindentation: getNodeIndentation(element),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\treturn undefined;\n};\n","import {\n\tDeserializeFn,\n\tdeserializeToElement,\n\tgetNodeAttribute,\n\tgetNodeStyle,\n\tmatchHTMLElementNode,\n} from '../deserialize/utils';\n\nimport htmlNodeNames from '../../constants/html-node-names';\nimport {runIfDefined} from '../../utils';\n\nexport const deserializeImage: DeserializeFn = (element, children) => {\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.IMG})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'image',\n\t\t\t\turl: getNodeAttribute(element, 'src'),\n\t\t\t\twidth: runIfDefined(\n\t\t\t\t\tgetNodeAttribute(element, 'width') ?? getNodeStyle(element, 'width'),\n\t\t\t\t\t(o) => parseFloat(o),\n\t\t\t\t),\n\t\t\t\theight: runIfDefined(\n\t\t\t\t\tgetNodeAttribute(element, 'height') ?? getNodeStyle(element, 'height'),\n\t\t\t\t\t(o) => parseFloat(o),\n\t\t\t\t),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\treturn undefined;\n};\n","import {\n\tDeserializeFn,\n\tdeserializeToElement,\n\tgetNodeAttribute,\n\tmatchHTMLElementNode,\n} from '../deserialize/utils';\n\nimport htmlNodeNames from '../../constants/html-node-names';\n\nexport const deserializeLink: DeserializeFn = (element, children) => {\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.A})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'link',\n\t\t\t\turl: getNodeAttribute(element, 'href'),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\treturn undefined;\n};\n","import {DeserializeFn, deserializeToElement, matchHTMLElementNode} from '../deserialize/utils';\n\nimport htmlNodeNames from '../../constants/html-node-names';\n\nexport const deserializeLists: DeserializeFn = (element, children) => {\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.LI})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'list-item',\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.LIC})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'list-item-container',\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.UL})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'bulleted-list',\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.OL})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'numbered-list',\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\treturn undefined;\n};\n","import {\n\tDeserializeFn,\n\tdeserializeToElement,\n\tgetNodeIndentation,\n\tgetNodeStyle,\n\tgetStencylAlignmentAttribute,\n\tmatchHTMLElementNode,\n} from '../deserialize/utils';\n\nimport htmlNodeNames from '../../constants/html-node-names';\n\nexport const deserializeParagraph: DeserializeFn = (element, children) => {\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.P})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'paragraph',\n\t\t\t\talignment: getStencylAlignmentAttribute(getNodeStyle(element, 'textAlign')),\n\t\t\t\tindentation: getNodeIndentation(element),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.DIV})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'paragraph',\n\t\t\t\talignment: getStencylAlignmentAttribute(getNodeStyle(element, 'textAlign')),\n\t\t\t\tindentation: getNodeIndentation(element),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\treturn undefined;\n};\n","import {\n\tDeserializeFn,\n\tdeserializeToElement,\n\tgetNodeAttribute,\n\tgetNodeStyle,\n\tmatchHTMLElementNode,\n} from '../deserialize/utils';\n\nimport htmlNodeNames from '../../constants/html-node-names';\nimport {runIfDefined} from '../../utils';\n\nexport const deserializeTable: DeserializeFn = (element, children) => {\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.TD})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'table-cell',\n\t\t\t\tcolspan: runIfDefined(getNodeAttribute(element, 'colspan'), (o) => parseInt(o)),\n\t\t\t\trowspan: runIfDefined(getNodeAttribute(element, 'rowspan'), (o) => parseInt(o)),\n\t\t\t\twidth: runIfDefined(getNodeStyle(element, 'width'), (o) => parseFloat(o)),\n\t\t\t\theight: runIfDefined(getNodeStyle(element, 'height'), (o) => parseFloat(o)),\n\t\t\t\tborderColor: getNodeStyle(element, 'borderColor'),\n\t\t\t\tborderWidth: runIfDefined(getNodeStyle(element, 'borderWidth'), (o) => {\n\t\t\t\t\tconst parsed = parseFloat(o);\n\t\t\t\t\treturn !parsed || isNaN(parsed) ? 1 : parsed;\n\t\t\t\t}),\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.TH})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'table-row',\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.TR})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'table-row',\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\tif (matchHTMLElementNode(element, {nodeName: htmlNodeNames.TABLE})) {\n\t\treturn deserializeToElement(\n\t\t\t{\n\t\t\t\ttype: 'table',\n\t\t\t},\n\t\t\tchildren,\n\t\t);\n\t}\n\n\treturn undefined;\n};\n","import {StencylEditor} from '../../types';\n\nexport const withImage = (editor: StencylEditor) => {\n\tconst {isVoid, isInline} = editor;\n\n\teditor.isInline = (element) => {\n\t\treturn element.type === 'image' ? true : isInline(element);\n\t};\n\n\teditor.isVoid = (element) => {\n\t\treturn element.type === 'image' ? true : isVoid(element);\n\t};\n\n\treturn editor;\n};\n","import {Editor, Element, Range, Transforms} from 'slate';\n\nimport {getEmptyTextNode} from '../common/utils';\nimport {isValidUrl} from '../../utils';\n\nexport function insertInlineLink(editor: Editor, url: string) {\n\tconst {selection} = editor;\n\n\tif (!selection || !isValidUrl(url)) {\n\t\treturn;\n\t}\n\n\tremoveInlineLink(editor);\n\n\tif (Range.isCollapsed(selection)) {\n\t\tTransforms.insertNodes(editor, {\n\t\t\ttype: 'link',\n\t\t\turl,\n\t\t\tchildren: [{text: url}],\n\t\t});\n\t\treturn;\n\t}\n\n\tTransforms.wrapNodes(\n\t\teditor,\n\t\t{\n\t\t\ttype: 'link',\n\t\t\turl,\n\t\t\tchildren: getEmptyTextNode(),\n\t\t},\n\t\t{split: true},\n\t);\n\tTransforms.collapse(editor, {edge: 'end'});\n}\n\nexport function removeInlineLink(editor: Editor) {\n\tTransforms.unwrapNodes(editor, {\n\t\tmatch: (node) => Element.isElement(node) && node.type === 'link',\n\t});\n}\n","import {StencylEditor} from '../../types';\nimport {insertInlineLink} from './commands';\nimport {isValidUrl} from '../../utils';\n\nexport const withLink = (editor: StencylEditor) => {\n\tconst {isInline, insertText} = editor;\n\n\teditor.isInline = (element) => {\n\t\treturn element.type === 'link' ? true : isInline(element);\n\t};\n\n\teditor.insertText = (text) => {\n\t\tisValidUrl(text) ? insertInlineLink(editor, text) : insertText(text);\n\t};\n\n\treturn editor;\n};\n","import {Editor, Element, Location, NodeEntry, Range, Text, Transforms} from 'slate';\nimport {StencylEditor, StencylElementTypes} from '../../types';\nimport {\n\tgetCurrentBlock,\n\tgetNextPath,\n\tgetNodeAt,\n\tgetParentNode,\n\tgetSelectionLeaf,\n} from '../common/utils';\n\nimport {decreaseListNesting} from './commands';\nimport {getListEntries} from './utils';\n\nexport const withLists = (editor: StencylEditor) => {\n\tconst {normalizeNode, insertBreak, deleteBackward} = editor;\n\n\teditor.normalizeNode = (entry) => {\n\t\tconst [node] = entry;\n\n\t\tif (Element.isElement(node) && node.type === 'list-item') {\n\t\t\tconst fixedOrphanedListItems = fixOrphanedListItems(editor, entry);\n\t\t\tif (fixedOrphanedListItems) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tElement.isElement(node) &&\n\t\t\t(node.type === 'bulleted-list' || node.type === 'numbered-list')\n\t\t) {\n\t\t\t// const [firstListItem] = Editor.nodes(editor, {\n\t\t\t// \tat: path,\n\t\t\t// \tmatch: (o, p) =>\n\t\t\t// \t\tElement.isElement(o) && o.type === 'list-item' && p.length - path.length === 1,\n\t\t\t// });\n\t\t\t// if (!firstListItem) {\n\t\t\t// \tTransforms.removeNodes(editor, {at: path, hanging: true});\n\t\t\t// \treturn;\n\t\t\t// }\n\t\t\tconst fixedUnwrappedListItemChildren = fixUnwrappedListItemChildren(editor, entry);\n\n\t\t\tif (fixedUnwrappedListItemChildren) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst fixedEmptyList = fixEmptyList(editor, entry);\n\n\t\t\tif (fixedEmptyList) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tnormalizeNode(entry);\n\t};\n\n\teditor.insertBreak = () => {\n\t\tconst lowestBlockEntry = getCurrentBlock(editor, 'lowest');\n\n\t\tif (lowestBlockEntry) {\n\t\t\tconst [node] = lowestBlockEntry;\n\n\t\t\tif (Element.isElement(node) && node.type === 'list-item-container') {\n\t\t\t\tconst leafNodeEntry = getSelectionLeaf(editor);\n\n\t\t\t\tif (leafNodeEntry) {\n\t\t\t\t\tconst [leafNode] = leafNodeEntry;\n\n\t\t\t\t\tif (leafNode.text.length) {\n\t\t\t\t\t\tinsertNewListItem(editor);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdecreaseListNesting(editor);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinsertBreak();\n\t};\n\n\teditor.deleteBackward = (unit) => {\n\t\tconst {selection} = editor;\n\n\t\tif (selection && Range.isCollapsed(selection)) {\n\t\t\tconst [listEntry] = Editor.nodes(editor, {\n\t\t\t\tmatch: (node, path) =>\n\t\t\t\t\t!Editor.isEditor(node) &&\n\t\t\t\t\tElement.isElement(node) &&\n\t\t\t\t\t['numbered-list', 'bulleted-list'].includes(node.type) &&\n\t\t\t\t\tpath.length === 1 &&\n\t\t\t\t\tpath[0] === 0,\n\t\t\t});\n\n\t\t\tif (listEntry) {\n\t\t\t\tconst [, listPath] = listEntry;\n\t\t\t\tconst text = Editor.string(editor, listPath);\n\n\t\t\t\tif (!text.length) {\n\t\t\t\t\tTransforms.removeNodes(editor, {\n\t\t\t\t\t\tat: listPath,\n\t\t\t\t\t\thanging: true,\n\t\t\t\t\t});\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdeleteBackward(unit);\n\t};\n\n\treturn editor;\n};\n\nfunction fixOrphanedListItems(editor: StencylEditor, entry: NodeEntry): boolean {\n\tconst parent = getParentNode(editor, entry);\n\n\tif (parent) {\n\t\tconst [parentNode, parentPath] = parent;\n\n\t\tif (\n\t\t\t!Element.isElement(parentNode) ||\n\t\t\t(parentNode.type !== 'bulleted-list' && parentNode.type !== 'numbered-list')\n\t\t) {\n\t\t\tTransforms.wrapNodes(\n\t\t\t\teditor,\n\t\t\t\t{\n\t\t\t\t\ttype: 'bulleted-list',\n\t\t\t\t\tchildren: [],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tat: parentPath,\n\t\t\t\t\tmatch: (o) => Element.isElement(o) && o.type === 'list-item',\n\t\t\t\t},\n\t\t\t);\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction fixUnwrappedListItemChildren(editor: StencylEditor, entry: NodeEntry): boolean {\n\tconst [node, path] = entry;\n\tconst validChildren: Array<StencylElementTypes> = [\n\t\t'numbered-list',\n\t\t'bulleted-list',\n\t\t'list-item-container',\n\t\t'table',\n\t];\n\n\tif (\n\t\t!Element.isElement(node) ||\n\t\t(node.type !== 'bulleted-list' && node.type !== 'numbered-list')\n\t) {\n\t\treturn false;\n\t}\n\n\tlet opsCount = 0;\n\n\tEditor.withoutNormalizing(editor, () => {\n\t\tfor (let i = 0; i < node.children.length; i++) {\n\t\t\tconst listItem = node.children[i];\n\n\t\t\tif (Element.isElement(listItem) && listItem.type === 'list-item') {\n\t\t\t\tfor (let j = 0; j < listItem.children.length; j++) {\n\t\t\t\t\tconst child = listItem.children[j];\n\t\t\t\t\tif (\n\t\t\t\t\t\tText.isText(child) ||\n\t\t\t\t\t\t(Element.isElement(child) && !validChildren.includes(child.type))\n\t\t\t\t\t) {\n\t\t\t\t\t\tTransforms.wrapNodes(\n\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'list-item-container',\n\t\t\t\t\t\t\t\tchildren: [],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{at: [...path, i, j]},\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\topsCount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn !!opsCount;\n}\n\nfunction fixEmptyList(editor: StencylEditor, entry: NodeEntry): boolean {\n\tconst [node, path] = entry;\n\n\tif (Element.isElement(node) && node.children.length === 1 && Text.isText(node.children[0])) {\n\t\tTransforms.removeNodes(editor, {\n\t\t\tat: path,\n\t\t\thanging: true,\n\t\t});\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nfunction insertNewListItem(editor: StencylEditor) {\n\tlet at: Location;\n\n\tif (!editor.selection) {\n\t\treturn;\n\t}\n\n\tat = editor.selection;\n\n\tif (Range.isRange(at)) {\n\t\tat = Editor.unhangRange(editor, at);\n\t}\n\n\tif (Range.isCollapsed(at)) {\n\t\tat = at.anchor;\n\t} else {\n\t\tconst [, end] = Range.edges(at);\n\t\tconst pointRef = Editor.pointRef(editor, end);\n\t\tTransforms.delete(editor, {at});\n\t\tat = pointRef.unref()!;\n\t}\n\n\tconst {listItemEntry} = getListEntries(editor);\n\n\tconst leafEntry = getSelectionLeaf(editor);\n\n\tif (leafEntry) {\n\t\tconst [, listItemPath] = listItemEntry;\n\n\t\tTransforms.splitNodes(editor, {\n\t\t\tat,\n\t\t\talways: true,\n\t\t});\n\n\t\tEditor.withoutNormalizing(editor, () => {\n\t\t\tlet focus = listItemPath;\n\t\t\tlet focusNext = listItemPath;\n\n\t\t\tif (editor.selection) {\n\t\t\t\tconst currentPath = editor.selection.focus.path;\n\t\t\t\tfocus = currentPath.slice(0, -1);\n\t\t\t\tfocusNext = getNextPath(currentPath);\n\t\t\t}\n\t\t\tTransforms.wrapNodes(editor, {\n\t\t\t\ttype: 'list-item',\n\t\t\t\tchildren: [],\n\t\t\t});\n\n\t\t\tconst nextNodeEntry = getNodeAt(editor, getNextPath(focus));\n\n\t\t\tif (nextNodeEntry?.length) {\n\t\t\t\tconst [nextNode, nextPath] = nextNodeEntry;\n\n\t\t\t\tif (\n\t\t\t\t\tElement.isElement(nextNode) &&\n\t\t\t\t\t(nextNode.type === 'bulleted-list' || nextNode.type === 'numbered-list')\n\t\t\t\t) {\n\t\t\t\t\tTransforms.moveNodes(editor, {\n\t\t\t\t\t\tat: nextPath,\n\t\t\t\t\t\tto: focusNext,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tTransforms.moveNodes(editor, {\n\t\t\t\tmatch: (node) => Element.isElement(node) && node.type === 'list-item',\n\t\t\t\tto: getNextPath(listItemPath),\n\t\t\t});\n\t\t});\n\t}\n}\n","import {Editor, Element, Point, Range} from 'slate';\n\nimport {StencylEditor} from '../../types';\n\nexport const withTable = (editor: StencylEditor) => {\n\tconst {deleteBackward, deleteForward} = editor;\n\n\teditor.deleteBackward = (unit) => {\n\t\tconst {selection} = editor;\n\n\t\tif (selection && Range.isCollapsed(selection)) {\n\t\t\tconst [tableCell] = Editor.nodes(editor, {\n\t\t\t\tmatch: (n) => !Editor.isEditor(n) && Element.isElement(n) && n.type === 'table-cell',\n\t\t\t});\n\n\t\t\tif (tableCell) {\n\t\t\t\tconst [, tableCellPath] = tableCell;\n\t\t\t\tconst start = Editor.start(editor, tableCellPath);\n\n\t\t\t\tif (Point.equals(selection.anchor, start)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdeleteBackward(unit);\n\t};\n\n\teditor.deleteForward = (unit) => {\n\t\tconst {selection} = editor;\n\n\t\tif (selection && Range.isCollapsed(selection)) {\n\t\t\tconst [tableCell] = Editor.nodes(editor, {\n\t\t\t\tmatch: (n) => !Editor.isEditor(n) && Element.isElement(n) && n.type === 'table-cell',\n\t\t\t});\n\n\t\t\tif (tableCell) {\n\t\t\t\tconst [, tableCellPath] = tableCell;\n\t\t\t\tconst end = Editor.end(editor, tableCellPath);\n\n\t\t\t\tif (Point.equals(selection.anchor, end)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdeleteForward(unit);\n\t};\n\n\treturn editor;\n};\n","import {Element, Path, Transforms} from 'slate';\nimport {getEmptyTextNode, getLastNode} from './utils';\n\nimport {StencylEditor} from '../../types';\n\nexport const withTrailingBlock = (editor: StencylEditor) => {\n\tconst {normalizeNode} = editor;\n\n\teditor.normalizeNode = ([currentNode, currentPath]) => {\n\t\tif (!currentPath.length) {\n\t\t\tconst lastChild = getLastNode(editor, 0);\n\n\t\t\tconst lastChildNode = lastChild?.[0];\n\n\t\t\tif (\n\t\t\t\t!lastChildNode ||\n\t\t\t\t(Element.isElement(lastChildNode) && lastChildNode.type !== 'paragraph')\n\t\t\t) {\n\t\t\t\tconst at = lastChild ? Path.next(lastChild[1]) : [0];\n\n\t\t\t\tTransforms.insertNodes(\n\t\t\t\t\teditor,\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'paragraph',\n\t\t\t\t\t\tchildren: getEmptyTextNode(),\n\t\t\t\t\t},\n\t\t\t\t\t{at},\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\treturn normalizeNode([currentNode, currentPath]);\n\t};\n\n\treturn editor;\n};\n","import {Descendant, createEditor} from 'slate';\nimport React, {\n\tReactNode,\n\tRef,\n\tforwardRef,\n\tuseImperativeHandle,\n\tuseLayoutEffect,\n\tuseMemo,\n\tuseRef,\n\tuseState,\n} from 'react';\nimport {Slate, withReact} from 'slate-react';\n\nimport {Canvas} from './modules/canvas';\nimport {Sidebar} from './modules/sidebar';\nimport {Toolbar} from './modules/toolbar';\nimport classNames from 'classnames';\nimport css from './style.module.css';\nimport {getEmptyTextNode} from '../../packages/common/utils';\nimport {pipeline} from '../../utils';\nimport {withEditable} from '../../packages/editable/plugin';\nimport {withHTMLDeserializer} from '../../packages/deserialize';\nimport {withHistory} from 'slate-history';\nimport {withImage} from '../../packages/image/plugin';\nimport {withLink} from '../../packages/link/plugin';\nimport {withLists} from '../../packages/lists/plugin';\nimport {withTable} from '../../packages/table/plugin';\nimport {withTrailingBlock} from '../../packages/common/plugin';\n\ntype EditorProps = {\n\tchildren?: ReactNode;\n\tinitialData?: Array<Descendant>;\n};\n\nexport type EditorRef = {\n\tgetNodes: () => Descendant[];\n};\n\nconst BaseEditor = ({children, initialData}: EditorProps, ref: Ref<EditorRef>) => {\n\tconst bodyRef = useRef<HTMLDivElement>(null);\n\tconst editor = useMemo(\n\t\t() =>\n\t\t\tpipeline([\n\t\t\t\tcreateEditor,\n\t\t\t\twithHistory,\n\t\t\t\twithReact,\n\t\t\t\twithLink,\n\t\t\t\twithImage,\n\t\t\t\twithEditable,\n\t\t\t\twithLists,\n\t\t\t\twithTable,\n\t\t\t\twithTrailingBlock,\n\t\t\t\twithHTMLDeserializer,\n\t\t\t])(),\n\t\t[],\n\t);\n\tconst [editorState, setEditorState] = useState<Descendant[]>(\n\t\tinitialData ?? [\n\t\t\t{\n\t\t\t\ttype: 'paragraph',\n\t\t\t\tchildren: getEmptyTextNode(),\n\t\t\t},\n\t\t],\n\t);\n\tconst [sidebarTop, setSidebarTop] = useState<string>();\n\n\tuseLayoutEffect(() => {\n\t\tsetSidebarTop(`calc(20px + ${bodyRef.current?.getBoundingClientRect().top ?? 0}px)`);\n\t}, []);\n\n\tuseImperativeHandle(ref, () => ({\n\t\tgetNodes: () => editor.children,\n\t}));\n\n\treturn (\n\t\t<div className='bg-gray-200 min-h-screen'>\n\t\t\t<Slate editor={editor} value={editorState} onChange={setEditorState}>\n\t\t\t\t<div className='sticky top-0 w-full z-1 shadow-1'>\n\t\t\t\t\t{children}\n\t\t\t\t\t<Toolbar />\n\t\t\t\t</div>\n\t\t\t\t<div ref={bodyRef} className={classNames(css.body, 'flex justify-center')}>\n\t\t\t\t\t<div className='flex-1' />\n\t\t\t\t\t<Canvas />\n\t\t\t\t\t<div className='flex-1 px-20'>\n\t\t\t\t\t\t<div className={classNames(css.sidebar, 'sticky')} style={{top: sidebarTop}}>\n\t\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Slate>\n\t\t\t<div id='stencyl-portal' />\n\t\t</div>\n\t);\n};\n\nexport type Editor = EditorRef;\n\nexport const Editor = forwardRef(BaseEditor);\n","import {\n\tEditableElement,\n\tStencylDataset,\n\tStencylDisplayCondition,\n\tStencylElement,\n\tStencylElementTypes,\n} from '../../../types';\nimport {formatDate, lastItem, toAlphabetNumeral, toRomanNumeral} from '../../../utils';\n\nimport {Descendant} from 'slate';\nimport {Font} from '@react-pdf/renderer';\n\nexport function getValueFromDataset(dataset: StencylDataset, element: EditableElement) {\n\tconst data = dataset[element.id];\n\n\tif (!data) {\n\t\treturn null;\n\t}\n\n\tif (element.dataType === 'date' || element.dataType === 'time') {\n\t\treturn formatDate(data, element.dateTimeFormat) ?? '';\n\t}\n\n\tif (element.dataType === 'options' || element.dataType === 'radio') {\n\t\treturn element.options.find((o) => o.id === data)?.label ?? '';\n\t}\n\n\treturn data;\n}\n\nexport function isStencylElement(value: any): value is StencylElement {\n\treturn !!value?.type;\n}\n\nexport function shouldRenderByCondition(\n\tdataset: StencylDataset,\n\tcondition?: StencylDisplayCondition | Array<StencylDisplayCondition>,\n) {\n\tconst conditions = Array.isArray(condition) ? condition : condition ? [condition] : [];\n\n\tif (!conditions.length) {\n\t\treturn true;\n\t}\n\n\treturn !conditions.some((o) => dataset[o.parent] !== o.value);\n}\n\nexport function getMatchingEditableElement(\n\tnodes: Array<Descendant>,\n\tlinkId: string,\n): EditableElement | undefined {\n\tconst match = nodes.find(\n\t\t(o) => isStencylElement(o) && o.type === 'editable' && o.id === linkId,\n\t) as EditableElement | undefined;\n\n\treturn (\n\t\tmatch ??\n\t\tgetMatchingEditableElement(\n\t\t\tnodes\n\t\t\t\t.filter(isStencylElement)\n\t\t\t\t.map((o) => o.children)\n\t\t\t\t.flat(),\n\t\t\tlinkId,\n\t\t)\n\t);\n}\n\nexport function* getEditableElements(\n\tnodes: Array<Descendant>,\n): Generator<EditableElement, void, EditableElement> {\n\tconst matches = nodes.filter(\n\t\t(o) => isStencylElement(o) && o.type === 'editable' && !o.linkId,\n\t) as Array<EditableElement>;\n\n\tfor (const match of matches) {\n\t\tyield match;\n\t}\n\n\tconst children = nodes\n\t\t.filter(isStencylElement)\n\t\t.map((o) => o.children)\n\t\t.flat();\n\n\tif (children.length) {\n\t\tyield* getEditableElements(children);\n\t}\n}\n\nexport function getLevelByElementType(element: Descendant, level?: number) {\n\tif (\n\t\tisStencylElement(element) &&\n\t\t(element.type === 'bulleted-list' || element.type === 'numbered-list')\n\t) {\n\t\treturn (level ?? -1) + 1;\n\t}\n\n\treturn level;\n}\n\nexport const BULLETS = ['•', '◦', '▪'];\n\nfunction getOrderedListSymbol(level: number, index: number) {\n\tswitch (level) {\n\t\tcase 0:\n\t\t\treturn `${index + 1}.`;\n\t\tcase 1:\n\t\t\treturn `${toRomanNumeral(index + 1).toLowerCase()}.`;\n\t\tdefault:\n\t\t\treturn `${toAlphabetNumeral(index + 1)}.`;\n\t}\n}\n\nexport function getListItemSymbol(\n\tpath: Array<number>,\n\tparentType?: StencylElementTypes,\n\tlevel?: number,\n) {\n\tif (!parentType || (parentType !== 'bulleted-list' && parentType !== 'numbered-list')) {\n\t\treturn '';\n\t}\n\n\tlevel = level ?? 0;\n\tconst index = lastItem(path);\n\n\tif (parentType === 'bulleted-list') {\n\t\treturn BULLETS[level] ?? lastItem(BULLETS);\n\t}\n\n\treturn getOrderedListSymbol(level, index);\n}\n\nexport const registerPdfFonts = Font.register;\n","import {StencylDataset} from '../../../types';\nimport {createHookState} from '../../../packages/hookstate';\n\nexport const previewDatasetState = createHookState<StencylDataset>({});\n","import {HookState} from './types';\n\nexport function createHookState<T>(initialValue: T): HookState<T> {\n\tconst SUBSCRIBERS: Array<(state: T) => void> = [];\n\tlet STATE: T = initialValue;\n\n\tfunction get() {\n\t\treturn STATE;\n\t}\n\n\tfunction set(value: T | ((state: T) => T)) {\n\t\tSTATE = value instanceof Function ? value(STATE) : value;\n\n\t\tfor (const subscriber of SUBSCRIBERS) {\n\t\t\tsubscriber(STATE);\n\t\t}\n\t}\n\n\tfunction subscribe(callback: (state: T) => void) {\n\t\tSUBSCRIBERS.push(callback);\n\n\t\treturn () => {\n\t\t\tunsubscribe(callback);\n\t\t};\n\t}\n\n\tfunction unsubscribe(callback: (state: T) => void) {\n\t\tconst index = SUBSCRIBERS.indexOf(callback);\n\n\t\tif (!~index) {\n\t\t\treturn;\n\t\t}\n\n\t\tSUBSCRIBERS.splice(index, 1);\n\t}\n\n\tfunction unsubscribeAll() {\n\t\tSUBSCRIBERS.length = 0;\n\t}\n\n\treturn {\n\t\tget,\n\t\tset,\n\t\tsubscribe,\n\t\tunsubscribe,\n\t\tunsubscribeAll,\n\t};\n}\n","import {useEffect, useMemo, useState} from 'react';\n\nimport {HookState} from './types';\n\nexport function useHookState<S>(hookState: HookState<S>) {\n\tconst [state, setState] = useState(hookState.get());\n\n\tuseEffect(() => {\n\t\tconst unsubscribe = hookState.subscribe(setState);\n\n\t\treturn () => {\n\t\t\tunsubscribe();\n\t\t};\n\t}, []);\n\n\treturn useMemo(() => [state, hookState.set] as const, [state]);\n}\n\nexport function useHookStateStatic<S>(hookState: HookState<S>) {\n\treturn [hookState.get(), hookState.set] as const;\n}\n","import React, {FC} from 'react';\n\nimport {RenderLeafProps} from 'slate-react';\nimport {previewDatasetState} from '../../../state';\nimport {shouldRenderByCondition} from '../../../utils';\nimport {useHookState} from '../../../../../packages/hookstate/hooks';\n\nexport const Leaf: FC<RenderLeafProps> = ({attributes, children, leaf}) => {\n\tconst [dataset] = useHookState(previewDatasetState);\n\tconst shouldRender = shouldRenderByCondition(dataset, leaf.condition);\n\n\tif (!shouldRender) {\n\t\treturn null;\n\t}\n\n\tif (leaf.bold) {\n\t\tchildren = <strong>{children}</strong>;\n\t}\n\n\tif (leaf.code) {\n\t\tchildren = <code>{children}</code>;\n\t}\n\n\tif (leaf.italic) {\n\t\tchildren = <em>{children}</em>;\n\t}\n\n\tif (leaf.underline) {\n\t\tchildren = <u>{children}</u>;\n\t}\n\n\tif (leaf.strikethrough) {\n\t\tchildren = <del>{children}</del>;\n\t}\n\n\treturn (\n\t\t<span {...attributes} style={{color: leaf.color}}>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import {generateUUID, isObjectEqual} from '../../utils';\n\nimport {Canvas} from '../preview/pdf/modules/canvas';\nimport {Descendant} from 'slate';\nimport React from 'react';\nimport {StencylDataset} from '../..';\nimport {pdf} from '@react-pdf/renderer';\nimport {previewDatasetState} from '../preview/state';\nimport {saveAs} from 'file-saver';\n\nlet CACHED_DATASET: any;\nlet CACHED_BLOB: Blob;\n\ntype PDFGenerationOptions = {\n\tdataset: StencylDataset;\n\tnodes: Descendant[];\n\tauthor?: string;\n\tenableCache?: boolean;\n\tfontFamily?: string;\n\ttitle?: string;\n};\n\nfunction getRenderedDocument(options: PDFGenerationOptions) {\n\treturn (\n\t\t<Canvas\n\t\t\tauthor={options.author}\n\t\t\ttitle={options.title}\n\t\t\tfontFamily={options.fontFamily}\n\t\t\tnodes={options.nodes}\n\t\t/>\n\t);\n}\n\nexport async function generatePDFAsync(options: PDFGenerationOptions) {\n\tconst {dataset} = options;\n\tconst useCache = isObjectEqual(dataset, CACHED_DATASET);\n\n\tif (!useCache) {\n\t\tconst renderedDocument = getRenderedDocument(options);\n\t\tpreviewDatasetState.set(dataset);\n\n\t\tif (options.enableCache) {\n\t\t\tCACHED_DATASET = dataset;\n\t\t}\n\n\t\tCACHED_BLOB = await pdf(renderedDocument).toBlob();\n\t}\n\n\tif (CACHED_BLOB) {\n\t\tsaveAs(CACHED_BLOB, `${options.title ?? generateUUID()}.pdf`);\n\t}\n}\n","import React, {FC} from 'react';\nimport {getValueFromDataset, shouldRenderByCondition} from '../../../utils';\n\nimport {Leaf} from '../leaf';\nimport {RenderElementProps} from 'slate-react';\nimport classNames from 'classnames';\nimport {getPlaceholderImage} from '../../../../../utils';\nimport {previewDatasetState} from '../../../state';\nimport {useHookState} from '../../../../../packages/hookstate/hooks';\n\nexport const Editable: FC<RenderElementProps> = ({element, children, attributes}) => {\n\tconst [dataset] = useHookState(previewDatasetState);\n\n\tif (\n\t\telement.type !== 'editable' ||\n\t\telement.isInvisible ||\n\t\t!shouldRenderByCondition(dataset, element.marks.condition)\n\t) {\n\t\treturn null;\n\t}\n\n\tconst value = getValueFromDataset(dataset, element);\n\n\tif (value) {\n\t\treturn element.dataType === 'image' ? (\n\t\t\t<span {...attributes}>\n\t\t\t\t{children}\n\t\t\t\t<img\n\t\t\t\t\tclassName={classNames('inline-block max-w-full rounded-default align-bottom')}\n\t\t\t\t\tsrc={value}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: element.width,\n\t\t\t\t\t\theight: element.height,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</span>\n\t\t) : (\n\t\t\t<Leaf\n\t\t\t\ttext={{text: value}}\n\t\t\t\tattributes={{'data-slate-leaf': true}}\n\t\t\t\tleaf={{\n\t\t\t\t\ttext: value,\n\t\t\t\t\t...element.marks,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{value}\n\t\t\t</Leaf>\n\t\t);\n\t}\n\n\tif (element.dataType === 'image') {\n\t\treturn (\n\t\t\t<span {...attributes}>\n\t\t\t\t{children}\n\t\t\t\t<img\n\t\t\t\t\tclassName={classNames('inline-block max-w-full rounded-default align-bottom')}\n\t\t\t\t\tsrc={getPlaceholderImage(element.width, element.height)}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: element.width,\n\t\t\t\t\t\theight: element.height,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</span>\n\t\t);\n\t}\n\n\treturn (\n\t\t<span\n\t\t\t{...attributes}\n\t\t\tclassName={classNames(\n\t\t\t\t'inline-block text-white font-medium px-4 rounded-default mx-1 bg-blue-500',\n\t\t\t)}\n\t\t\tstyle={{fontSize: '0.82em'}}\n\t\t>\n\t\t\t{element.defaultValue}\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import React, {FC} from 'react';\n\nimport {RenderElementProps} from 'slate-react';\nimport classNames from 'classnames';\n\nexport const Image: FC<RenderElementProps> = ({element, attributes, children}) => {\n\tif (element.type === 'image') {\n\t\treturn (\n\t\t\t<span {...attributes}>\n\t\t\t\t{children}\n\t\t\t\t<img\n\t\t\t\t\tclassName={classNames('inline-block max-w-full rounded-default align-bottom')}\n\t\t\t\t\tsrc={element.url}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: element.width,\n\t\t\t\t\t\theight: element.height,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</span>\n\t\t);\n\t}\n\n\treturn null;\n};\n","import {List, ListItem, ListItemContainer} from '../../../../../packages/lists';\nimport React, {FC} from 'react';\nimport {Table, TableCell, TableRow} from '../../../../../packages/table';\n\nimport {Blockquote} from '../../../../../packages/blockquote';\nimport {Codeblock} from '../../../../../packages/codeblock';\nimport {Editable} from '../editable';\nimport {Headings} from '../../../../../packages/headings';\nimport {Image} from '../image';\nimport {Link} from '../../../../../packages/link';\nimport {Paragraph} from '../../../../../packages/paragraph';\nimport {RenderElementProps} from 'slate-react';\n\nexport const DomPreviewElement: FC<RenderElementProps> = (props) => {\n\tswitch (props.element.type) {\n\t\tcase 'block-quote':\n\t\t\treturn <Blockquote {...props} />;\n\t\tcase 'bulleted-list':\n\t\tcase 'numbered-list':\n\t\t\treturn <List {...props} />;\n\t\tcase 'code-block':\n\t\t\treturn <Codeblock {...props} />;\n\t\tcase 'heading-one':\n\t\tcase 'heading-two':\n\t\tcase 'heading-three':\n\t\tcase 'heading-four':\n\t\tcase 'heading-five':\n\t\tcase 'heading-six':\n\t\t\treturn <Headings {...props} />;\n\t\tcase 'image':\n\t\t\treturn <Image {...props} />;\n\t\tcase 'link':\n\t\t\treturn <Link {...props} />;\n\t\tcase 'list-item':\n\t\t\treturn <ListItem {...props} />;\n\t\tcase 'list-item-container':\n\t\t\treturn <ListItemContainer {...props} />;\n\t\tcase 'paragraph':\n\t\t\treturn <Paragraph {...props} />;\n\t\tcase 'table':\n\t\t\treturn <Table {...props} />;\n\t\tcase 'table-cell':\n\t\t\treturn <TableCell {...props} />;\n\t\tcase 'table-row':\n\t\t\treturn <TableRow {...props} />;\n\t\tcase 'editable':\n\t\t\treturn <Editable {...props} />;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n","import React, {FC} from 'react';\nimport {getMatchingEditableElement, isStencylElement} from '../../../utils';\n\nimport {Descendant} from 'slate';\nimport {DomPreviewElement} from '../element';\nimport {Leaf} from '../leaf';\n\ntype SliceProps = {\n\tnode: Descendant;\n\tnodes: Descendant[];\n};\n\nexport const Slice: FC<SliceProps> = ({node, nodes}) => {\n\tif (!isStencylElement(node)) {\n\t\treturn (\n\t\t\t<Leaf text={{text: node.text}} leaf={node} attributes={{'data-slate-leaf': true}}>\n\t\t\t\t{node.text}\n\t\t\t</Leaf>\n\t\t);\n\t}\n\n\tconst element =\n\t\tnode.type === 'editable' && node.linkId ? getMatchingEditableElement(nodes, node.linkId) : node;\n\n\tif (!element) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<DomPreviewElement\n\t\t\telement={element}\n\t\t\tattributes={{\n\t\t\t\t'data-slate-node': 'element',\n\t\t\t\tref: null,\n\t\t\t}}\n\t\t>\n\t\t\t{(element as any).children.map((o, i) => (\n\t\t\t\t<Slice key={i} node={o} nodes={nodes} />\n\t\t\t))}\n\t\t</DomPreviewElement>\n\t);\n};\n","import React, {FC, memo} from 'react';\n\nimport {Descendant} from 'slate';\nimport {Slice} from '../slice';\nimport classNames from 'classnames';\nimport constants from '../../../../../constants';\nimport css from './style.module.css';\n\ntype CanvasProps = {\n\tclassName?: string;\n\tnodes: Array<Descendant>;\n};\n\nconst canvasWidthStyle = {\n\twidth: constants.paperSizes.a4.width,\n\tminHeight: constants.paperSizes.a4.height,\n};\n\nconst BaseCanvas: FC<CanvasProps> = ({className, nodes}) => {\n\treturn (\n\t\t<div className={classNames(css.container, className)} style={canvasWidthStyle}>\n\t\t\t{nodes.map((node, i) => (\n\t\t\t\t<Slice key={i} node={node} nodes={nodes} />\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport const Canvas = memo(BaseCanvas);\n","import {StyleSheet} from '@react-pdf/renderer';\nimport {THEME_COLORS} from '../../../../constants/colors';\n\nexport const styles = StyleSheet.create({\n\tpage: {\n\t\tpaddingTop: 35,\n\t\tpaddingHorizontal: 35,\n\t\tpaddingBottom: 65,\n\t\tfontSize: 12,\n\t},\n\tblockquote: {\n\t\tmarginLeft: 40,\n\t},\n\tlist: {\n\t\tpaddingLeft: 24,\n\t},\n\tlistItem: {},\n\tlistItemSymbol: {\n\t\tposition: 'absolute',\n\t\tleft: -12,\n\t},\n\tpre: {\n\t\tbackgroundColor: THEME_COLORS.gray[100],\n\t\tborderRadius: 5,\n\t\tpadding: 12,\n\t},\n\tcode: {\n\t\tfontFamily: 'monospace',\n\t},\n\th1: {\n\t\tfontSize: 42,\n\t\tlineHeight: 57 / 42,\n\t},\n\th2: {\n\t\tfontSize: 32,\n\t\tlineHeight: 42 / 32,\n\t},\n\th3: {\n\t\tfontSize: 20,\n\t\tlineHeight: 25 / 20,\n\t},\n\th4: {\n\t\tfontSize: 18,\n\t\tlineHeight: 23 / 18,\n\t},\n\th5: {\n\t\tfontSize: 16,\n\t\tlineHeight: 20 / 16,\n\t},\n\th6: {\n\t\tfontSize: 14,\n\t\tlineHeight: 18 / 14,\n\t},\n\timage: {\n\t\tmaxWidth: '100%',\n\t\tborderRadius: 5,\n\t\talignSelf: 'baseline',\n\t},\n\tlink: {\n\t\ttextDecoration: 'underline',\n\t},\n\ttableRow: {\n\t\tflexDirection: 'row',\n\t\talignItems: 'stretch',\n\t},\n\ttableCell: {\n\t\tborderStyle: 'solid',\n\t\tpadding: 2,\n\t},\n\tleaf: {\n\t\tlineHeight: 1.25,\n\t},\n});\n","import React, {FC, useRef} from 'react';\n\nimport {PdfRenderLeafProps} from '../../types';\nimport {Style} from '@react-pdf/types';\nimport {Text} from '@react-pdf/renderer';\nimport {previewDatasetState} from '../../../state';\nimport {shouldRenderByCondition} from '../../../utils';\nimport {styles} from '../../styles';\nimport {useHookStateStatic} from '../../../../../packages/hookstate/hooks';\n\nexport const Leaf: FC<PdfRenderLeafProps> = ({children, leaf}) => {\n\tconst [dataset] = useHookStateStatic(previewDatasetState);\n\tconst shouldRender = shouldRenderByCondition(dataset, leaf.condition);\n\tconst style = useRef({} as Style).current;\n\n\tif (!shouldRender) {\n\t\treturn null;\n\t}\n\n\tif (leaf.bold) {\n\t\tstyle.fontWeight = 'bold';\n\t}\n\n\tif (leaf.code) {\n\t\tstyle.fontFamily = 'monospace';\n\t}\n\n\tif (leaf.italic) {\n\t\tstyle.fontStyle = 'italic';\n\t}\n\n\tif (leaf.underline) {\n\t\tstyle.textDecoration = 'underline';\n\t}\n\n\tif (leaf.strikethrough) {\n\t\tstyle.textDecoration = 'line-through';\n\t}\n\n\treturn <Text style={[styles.leaf, style, {color: leaf.color}]}>{children}</Text>;\n};\n","import React, {FC, useMemo} from 'react';\nimport {Text, View} from '@react-pdf/renderer';\n\nimport {PdfRenderElementProps} from '../../types';\nimport {Style} from '@react-pdf/types';\nimport {getListItemSymbol} from '../../../utils';\nimport {styles} from '../../styles';\n\nexport const List: FC<PdfRenderElementProps> = ({element, children}) => {\n\tconst style = useMemo(() => {\n\t\tconst properties: Style = {};\n\n\t\tif (element.type === 'numbered-list' || element.type === 'bulleted-list') {\n\t\t\tif (element.indentation) {\n\t\t\t\tproperties.marginLeft = `${element.indentation}%`;\n\t\t\t}\n\t\t}\n\n\t\treturn properties;\n\t}, [element]);\n\n\tif (element.type === 'bulleted-list') {\n\t\treturn <View style={[styles.list, style]}>{children}</View>;\n\t}\n\n\tif (element.type === 'numbered-list') {\n\t\treturn <View style={[styles.list, style]}>{children}</View>;\n\t}\n\n\treturn null;\n};\n\nexport const ListItem: FC<PdfRenderElementProps> = ({\n\telement,\n\tchildren,\n\tlevel,\n\tpath,\n\tparentType,\n}) => {\n\tif (element.type === 'list-item') {\n\t\treturn (\n\t\t\t<View style={styles.listItem}>\n\t\t\t\t<Text style={styles.listItemSymbol}>{getListItemSymbol(path, parentType, level)}</Text>\n\t\t\t\t{children}\n\t\t\t</View>\n\t\t);\n\t}\n\n\treturn null;\n};\n\nexport const ListItemContainer: FC<PdfRenderElementProps> = ({element, children}) => {\n\tif (element.type === 'list-item-container') {\n\t\treturn <View>{children}</View>;\n\t}\n\n\treturn null;\n};\n","import React, {FC} from 'react';\n\nimport {PdfRenderElementProps} from '../../types';\nimport {View} from '@react-pdf/renderer';\nimport colors from '../../../../../constants/colors';\nimport {lastItem} from '../../../../../utils';\nimport {styles} from '../../styles';\n\nexport const TableCell: FC<PdfRenderElementProps> = ({element, children, path}) => {\n\tif (element.type === 'table-cell') {\n\t\treturn (\n\t\t\t<View\n\t\t\t\tstyle={[\n\t\t\t\t\tstyles.tableCell,\n\t\t\t\t\t{\n\t\t\t\t\t\theight: element.height,\n\t\t\t\t\t\tminWidth: element.width,\n\t\t\t\t\t},\n\t\t\t\t\telement.borderColor !== colors.transparent\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tborderWidth: element.borderWidth ?? 1,\n\t\t\t\t\t\t\t\tborderTopWidth: lastItem(path, 1) ? 0 : undefined,\n\t\t\t\t\t\t\t\tborderLeftWidth: lastItem(path) ? 0 : undefined,\n\t\t\t\t\t\t\t\tborderColor: element.borderColor ?? colors.black,\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: {},\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</View>\n\t\t);\n\t}\n\n\treturn null;\n};\n\nexport const TableRow: FC<PdfRenderElementProps> = ({element, children}) => {\n\tif (element.type === 'table-row') {\n\t\treturn <View style={styles.tableRow}>{children}</View>;\n\t}\n\n\treturn null;\n};\n\nexport const Table: FC<PdfRenderElementProps> = ({element, children}) => {\n\tif (element.type === 'table') {\n\t\treturn <View>{children}</View>;\n\t}\n\n\treturn null;\n};\n","import React, {FC, useMemo} from 'react';\n\nimport {PdfRenderElementProps} from '../../types';\nimport {Style} from '@react-pdf/types';\nimport {View} from '@react-pdf/renderer';\nimport {styles} from '../../styles';\n\nexport const Blockquote: FC<PdfRenderElementProps> = ({element, children}) => {\n\tconst style = useMemo(() => {\n\t\tconst properties: Style = {};\n\n\t\tif (element.type === 'block-quote') {\n\t\t\tif (element.indentation) {\n\t\t\t\tproperties.marginLeft = `${element.indentation}%`;\n\t\t\t}\n\n\t\t\tif (element.alignment) {\n\t\t\t\tproperties.textAlign = element.alignment;\n\t\t\t}\n\t\t}\n\n\t\treturn properties;\n\t}, [element]);\n\n\treturn <View style={[styles.blockquote, style]}>{children}</View>;\n};\n","import React, {FC, useMemo} from 'react';\n\nimport {PdfRenderElementProps} from '../../types';\nimport {Style} from '@react-pdf/types';\nimport {View} from '@react-pdf/renderer';\nimport {styles} from '../../styles';\n\nexport const Codeblock: FC<PdfRenderElementProps> = ({element, children}) => {\n\tconst style = useMemo(() => {\n\t\tconst properties: Style = {};\n\n\t\tif (element.type === 'code-block') {\n\t\t\tif (element.indentation) {\n\t\t\t\tproperties.marginLeft = `${element.indentation}%`;\n\t\t\t}\n\n\t\t\tif (element.alignment) {\n\t\t\t\tproperties.textAlign = element.alignment;\n\t\t\t}\n\t\t}\n\n\t\treturn properties;\n\t}, [element]);\n\n\treturn (\n\t\t<View style={[styles.pre, style]}>\n\t\t\t<View style={styles.code}>{children}</View>\n\t\t</View>\n\t);\n};\n","import React, {FC} from 'react';\nimport {getValueFromDataset, shouldRenderByCondition} from '../../../utils';\n\nimport {Leaf} from '../leaf';\nimport {Image as PdfImage} from '@react-pdf/renderer';\nimport {PdfRenderElementProps} from '../../types';\nimport {getPlaceholderImage} from '../../../../../utils';\nimport {previewDatasetState} from '../../../state';\nimport {styles} from '../../styles';\nimport {useHookState} from '../../../../../packages/hookstate/hooks';\n\nexport const Editable: FC<PdfRenderElementProps> = ({element}) => {\n\tconst [dataset] = useHookState(previewDatasetState);\n\n\tif (\n\t\telement.type !== 'editable' ||\n\t\telement.isInvisible ||\n\t\t!shouldRenderByCondition(dataset, element.marks.condition)\n\t) {\n\t\treturn null;\n\t}\n\n\tconst value = getValueFromDataset(dataset, element);\n\n\tif (element.dataType === 'image') {\n\t\treturn (\n\t\t\t<PdfImage\n\t\t\t\tsrc={value ?? getPlaceholderImage(element.width, element.height)}\n\t\t\t\tstyle={[\n\t\t\t\t\tstyles.image,\n\t\t\t\t\t{\n\t\t\t\t\t\twidth: element.width,\n\t\t\t\t\t\theight: element.height,\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Leaf\n\t\t\ttext={{text: value ?? element.defaultValue}}\n\t\t\tattributes={{'data-slate-leaf': true}}\n\t\t\tleaf={{\n\t\t\t\ttext: value ?? element.defaultValue,\n\t\t\t\t...element.marks,\n\t\t\t}}\n\t\t>\n\t\t\t{value}\n\t\t</Leaf>\n\t);\n};\n","import React, {FC, useMemo} from 'react';\n\nimport {PdfRenderElementProps} from '../../types';\nimport {Style} from '@react-pdf/types';\nimport {Text} from '@react-pdf/renderer';\nimport {styles} from '../../styles';\n\nexport const Headings: FC<PdfRenderElementProps> = ({element, children}) => {\n\tconst style = useMemo(() => {\n\t\tconst properties: Style = {};\n\n\t\tif (\n\t\t\telement.type === 'heading-one' ||\n\t\t\telement.type === 'heading-two' ||\n\t\t\telement.type === 'heading-three' ||\n\t\t\telement.type === 'heading-four' ||\n\t\t\telement.type === 'heading-five' ||\n\t\t\telement.type === 'heading-six'\n\t\t) {\n\t\t\tif (element.indentation) {\n\t\t\t\tproperties.marginLeft = `${element.indentation}%`;\n\t\t\t}\n\n\t\t\tif (element.alignment) {\n\t\t\t\tproperties.textAlign = element.alignment;\n\t\t\t}\n\t\t}\n\n\t\treturn properties;\n\t}, [element]);\n\n\tswitch (element.type) {\n\t\tcase 'heading-one':\n\t\t\treturn <Text style={[styles.h1, style]}>{children}</Text>;\n\t\tcase 'heading-two':\n\t\t\treturn <Text style={[styles.h2, style]}>{children}</Text>;\n\t\tcase 'heading-three':\n\t\t\treturn <Text style={[styles.h3, style]}>{children}</Text>;\n\t\tcase 'heading-four':\n\t\t\treturn <Text style={[styles.h4, style]}>{children}</Text>;\n\t\tcase 'heading-five':\n\t\t\treturn <Text style={[styles.h5, style]}>{children}</Text>;\n\t\tcase 'heading-six':\n\t\t\treturn <Text style={[styles.h6, style]}>{children}</Text>;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n","import React, {FC} from 'react';\n\nimport {Image as PdfImage} from '@react-pdf/renderer';\nimport {PdfRenderElementProps} from '../../types';\nimport {styles} from '../../styles';\n\nexport const Image: FC<PdfRenderElementProps> = ({element}) => {\n\tif (element.type === 'image') {\n\t\treturn (\n\t\t\t<PdfImage\n\t\t\t\tsrc={element.url}\n\t\t\t\tstyle={[\n\t\t\t\t\tstyles.image,\n\t\t\t\t\t{\n\t\t\t\t\t\twidth: element.width,\n\t\t\t\t\t\theight: element.height,\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn null;\n};\n","import React, {FC} from 'react';\n\nimport {Link as PdfLink} from '@react-pdf/renderer';\nimport {PdfRenderElementProps} from '../../types';\nimport {styles} from '../../styles';\n\nexport const Link: FC<PdfRenderElementProps> = ({element, children}) => {\n\treturn (\n\t\t<PdfLink style={styles.link} src={element.type === 'link' ? element.url : ''}>\n\t\t\t{children}\n\t\t</PdfLink>\n\t);\n};\n","import React, {FC, useMemo} from 'react';\n\nimport {PdfRenderElementProps} from '../../types';\nimport {Style} from '@react-pdf/types';\nimport {Text} from '@react-pdf/renderer';\n\nexport const Paragraph: FC<PdfRenderElementProps> = ({element, children}) => {\n\tconst style = useMemo(() => {\n\t\tconst properties: Style = {};\n\n\t\tif (element.type === 'paragraph') {\n\t\t\tif (element.indentation) {\n\t\t\t\tproperties.marginLeft = `${element.indentation}%`;\n\t\t\t}\n\n\t\t\tif (element.alignment) {\n\t\t\t\tproperties.textAlign = element.alignment;\n\t\t\t}\n\t\t}\n\n\t\treturn properties;\n\t}, [element]);\n\n\treturn <Text style={style}>{children}</Text>;\n};\n","import {List, ListItem, ListItemContainer} from '../lists';\nimport React, {FC} from 'react';\nimport {Table, TableCell, TableRow} from '../table';\n\nimport {Blockquote} from '../blockquote';\nimport {Codeblock} from '../codeblock';\nimport {Editable} from '../editable';\nimport {Headings} from '../headings';\nimport {Image} from '../image';\nimport {Link} from '../link';\nimport {Paragraph} from '../paragraph';\nimport {PdfRenderElementProps} from '../../types';\n\nexport const PdfPreviewElement: FC<PdfRenderElementProps> = (props) => {\n\tswitch (props.element.type) {\n\t\tcase 'block-quote':\n\t\t\treturn <Blockquote {...props} />;\n\t\tcase 'bulleted-list':\n\t\tcase 'numbered-list':\n\t\t\treturn <List {...props} />;\n\t\tcase 'code-block':\n\t\t\treturn <Codeblock {...props} />;\n\t\tcase 'heading-one':\n\t\tcase 'heading-two':\n\t\tcase 'heading-three':\n\t\tcase 'heading-four':\n\t\tcase 'heading-five':\n\t\tcase 'heading-six':\n\t\t\treturn <Headings {...props} />;\n\t\tcase 'image':\n\t\t\treturn <Image {...props} />;\n\t\tcase 'link':\n\t\t\treturn <Link {...props} />;\n\t\tcase 'list-item':\n\t\t\treturn <ListItem {...props} />;\n\t\tcase 'list-item-container':\n\t\t\treturn <ListItemContainer {...props} />;\n\t\tcase 'paragraph':\n\t\t\treturn <Paragraph {...props} />;\n\t\tcase 'table':\n\t\t\treturn <Table {...props} />;\n\t\tcase 'table-cell':\n\t\t\treturn <TableCell {...props} />;\n\t\tcase 'table-row':\n\t\t\treturn <TableRow {...props} />;\n\t\tcase 'editable':\n\t\t\treturn <Editable {...props} />;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n","import React, {FC} from 'react';\nimport {getLevelByElementType, getMatchingEditableElement, isStencylElement} from '../../../utils';\n\nimport {Descendant} from 'slate';\nimport {Leaf} from '../leaf';\nimport {PdfPreviewElement} from '../element';\nimport {StencylElementTypes} from '../../../../..';\n\ntype SliceProps = {\n\tlevel?: number;\n\tpath: number[];\n\tparentType?: StencylElementTypes;\n\tnode: Descendant;\n\tnodes: Descendant[];\n};\n\nexport const Slice: FC<SliceProps> = ({level, path, node, nodes, parentType}) => {\n\tif (!isStencylElement(node)) {\n\t\treturn (\n\t\t\t<Leaf text={{text: node.text}} leaf={node} attributes={{'data-slate-leaf': true}}>\n\t\t\t\t{node.text}\n\t\t\t</Leaf>\n\t\t);\n\t}\n\n\tconst element =\n\t\tnode.type === 'editable' && node.linkId ? getMatchingEditableElement(nodes, node.linkId) : node;\n\n\tif (!element) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PdfPreviewElement\n\t\t\telement={element}\n\t\t\tattributes={{\n\t\t\t\t'data-slate-node': 'element',\n\t\t\t\tref: null,\n\t\t\t}}\n\t\t\tlevel={level}\n\t\t\tpath={path}\n\t\t\tparentType={parentType}\n\t\t>\n\t\t\t{(element as any).children.map((o, i) => (\n\t\t\t\t<Slice\n\t\t\t\t\tkey={i}\n\t\t\t\t\tlevel={getLevelByElementType(o, level)}\n\t\t\t\t\tnode={o}\n\t\t\t\t\tnodes={nodes}\n\t\t\t\t\tpath={[...path, i]}\n\t\t\t\t\tparentType={element.type}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</PdfPreviewElement>\n\t);\n};\n","import {Document, Page} from '@react-pdf/renderer';\nimport React, {FC, memo} from 'react';\n\nimport {Descendant} from 'slate';\nimport {Slice} from '../slice';\nimport {getLevelByElementType} from '../../../utils';\nimport {styles} from '../../styles';\n\ntype CanvasProps = {\n\tauthor?: string;\n\ttitle?: string;\n\tfontFamily?: string;\n\tnodes: Array<Descendant>;\n};\n\nconst BaseCanvas: FC<CanvasProps> = ({author, title, fontFamily, nodes}) => {\n\treturn (\n\t\t<Document author={author} title={title} creator={author} producer={author}>\n\t\t\t<Page size='A4' style={[styles.page, {fontFamily}]}>\n\t\t\t\t{nodes.map((node, i) => (\n\t\t\t\t\t<Slice key={i} level={getLevelByElementType(node)} node={node} nodes={nodes} path={[i]} />\n\t\t\t\t))}\n\t\t\t</Page>\n\t\t</Document>\n\t);\n};\n\nexport const Canvas = memo(BaseCanvas);\n","import 'stencyl/dist/index.css';\n\nimport {Editor, PdfPreview, generatePDFAsync} from 'stencyl';\nimport React, {useRef} from 'react';\n\nexport const EditorApp = () => {\n\tconst ref = useRef<Editor>(null);\n\tconst handleClick = () => {\n\t\tgeneratePDFAsync({\n\t\t\tnodes: ref.current?.getNodes() ?? [],\n\t\t\tdataset: {},\n\t\t\tauthor: 'Christian Drey',\n\t\t\ttitle: 'Sample Stencyl Document',\n\t\t});\n\t};\n\treturn (\n\t\t<Editor ref={ref}>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundColor: '#dbdfe2',\n\t\t\t\t\tpadding: '12px 24px',\n\t\t\t\t\ttextAlign: 'right',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<button\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tpadding: '8px 8px',\n\t\t\t\t\t\tbackgroundColor: '#326FF3',\n\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\tborderRadius: 5,\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={handleClick}\n\t\t\t\t>\n\t\t\t\t\tGet PDF\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</Editor>\n\t);\n};\n\nexport const PreviewApp = () => {\n\treturn (\n\t\t<PdfPreview\n\t\t\tnodes={[\n\t\t\t\t{type: 'paragraph', children: [{text: 'hELLO WORLD'}]},\n\t\t\t\t{type: 'paragraph', children: [{text: ''}]},\n\t\t\t\t{\n\t\t\t\t\ttype: 'table',\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'table-row',\n\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'table-cell',\n\t\t\t\t\t\t\t\t\tchildren: [{type: 'paragraph', children: [{text: 'aaa'}]}],\n\t\t\t\t\t\t\t\t\twidth: 48,\n\t\t\t\t\t\t\t\t\theight: 48,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'table-cell',\n\t\t\t\t\t\t\t\t\tchildren: [{type: 'paragraph', children: [{text: 'bbb'}]}],\n\t\t\t\t\t\t\t\t\twidth: 48,\n\t\t\t\t\t\t\t\t\theight: 48,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'table-row',\n\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'table-cell',\n\t\t\t\t\t\t\t\t\tchildren: [{type: 'paragraph', children: [{text: 'ccc'}]}],\n\t\t\t\t\t\t\t\t\twidth: 48,\n\t\t\t\t\t\t\t\t\theight: 48,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'table-cell',\n\t\t\t\t\t\t\t\t\tchildren: [{type: 'paragraph', children: [{text: 'ddd'}]}],\n\t\t\t\t\t\t\t\t\twidth: 48,\n\t\t\t\t\t\t\t\t\theight: 48,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{type: 'paragraph', children: [{text: ''}]},\n\t\t\t\t{type: 'paragraph', children: [{text: ''}]},\n\t\t\t\t{type: 'paragraph', children: [{text: 'Borderless'}]},\n\t\t\t\t{\n\t\t\t\t\ttype: 'table',\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'table-row',\n\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'table-cell',\n\t\t\t\t\t\t\t\t\tchildren: [{type: 'paragraph', children: [{text: 'border'}]}],\n\t\t\t\t\t\t\t\t\twidth: 48,\n\t\t\t\t\t\t\t\t\theight: 48,\n\t\t\t\t\t\t\t\t\tborderColor: 'rgba(0,0,0,0)',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'table-cell',\n\t\t\t\t\t\t\t\t\tchildren: [{type: 'paragraph', children: [{text: 'less'}]}],\n\t\t\t\t\t\t\t\t\twidth: 48,\n\t\t\t\t\t\t\t\t\theight: 48,\n\t\t\t\t\t\t\t\t\tborderColor: 'rgba(0,0,0,0)',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'table-row',\n\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'table-cell',\n\t\t\t\t\t\t\t\t\tchildren: [{type: 'paragraph', children: [{text: 'doc'}]}],\n\t\t\t\t\t\t\t\t\twidth: 48,\n\t\t\t\t\t\t\t\t\theight: 48,\n\t\t\t\t\t\t\t\t\tborderColor: 'rgba(0,0,0,0)',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'table-cell',\n\t\t\t\t\t\t\t\t\tchildren: [{type: 'paragraph', children: [{text: 'ument'}]}],\n\t\t\t\t\t\t\t\t\twidth: 48,\n\t\t\t\t\t\t\t\t\theight: 48,\n\t\t\t\t\t\t\t\t\tborderColor: 'rgba(0,0,0,0)',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{type: 'paragraph', children: [{text: ''}]},\n\t\t\t\t{\n\t\t\t\t\ttype: 'bulleted-list',\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t{type: 'list-item-container', children: [{text: 'Uni ner'}]},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'bulleted-list',\n\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\t\t\t\t\tchildren: [{type: 'list-item-container', children: [{text: 'dkkfk'}]}],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t{type: 'list-item-container', children: [{text: 'kfkf'}]},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'bulleted-list',\n\t\t\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{type: 'list-item-container', children: [{text: 'kfkfkf'}]},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{type: 'list-item-container', children: [{text: 'kfkfkf'}]},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'bulleted-list',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{type: 'list-item-container', children: [{text: 'kkfkf'}]},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{type: 'paragraph', children: [{text: ''}]},\n\t\t\t\t{type: 'paragraph', children: [{text: ''}]},\n\t\t\t\t{\n\t\t\t\t\ttype: 'numbered-list',\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t{type: 'list-item-container', children: [{text: 'jdjd'}]},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'numbered-list',\n\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\t\t\t\t\tchildren: [{type: 'list-item-container', children: [{text: 'kfkfk'}]}],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t{type: 'list-item-container', children: [{text: 'kfkfk'}]},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'numbered-list',\n\t\t\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{type: 'list-item-container', children: [{text: 'kfkfkf'}]},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{type: 'list-item-container', children: [{text: 'jfjfj'}]},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'numbered-list',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{type: 'list-item-container', children: [{text: 'kfkfkf'}]},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\tchildren: [{type: 'list-item-container', children: [{text: 'kkkd'}]}],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'list-item',\n\t\t\t\t\t\t\tchildren: [{type: 'list-item-container', children: [{text: 'dkdkd'}]}],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{type: 'paragraph', children: [{text: ''}]},\n\t\t\t\t{type: 'paragraph', children: [{text: ''}]},\n\t\t\t\t{type: 'paragraph', children: [{text: 'Indenterd text'}], indentation: 9},\n\t\t\t\t{type: 'paragraph', indentation: 9, children: [{text: ''}]},\n\t\t\t\t{\n\t\t\t\t\ttype: 'paragraph',\n\t\t\t\t\tindentation: 3,\n\t\t\t\t\tchildren: [{text: 'Right aigned txt'}],\n\t\t\t\t\talignment: 'right',\n\t\t\t\t},\n\t\t\t\t{type: 'paragraph', indentation: 3, alignment: 'center', children: [{text: 'Centere'}]},\n\t\t\t\t{type: 'paragraph', indentation: 3, alignment: 'justify', children: [{text: 'Justified'}]},\n\t\t\t\t{type: 'paragraph', indentation: 3, children: [{text: 'kdkdk'}]},\n\t\t\t\t{type: 'paragraph', indentation: 3, children: [{text: ''}]},\n\t\t\t\t{type: 'paragraph', indentation: 3, children: [{text: ''}]},\n\t\t\t\t{\n\t\t\t\t\ttype: 'paragraph',\n\t\t\t\t\tindentation: 3,\n\t\t\t\t\tchildren: [{text: 'cO'}, {text: 'LORED T', color: '#00D084'}, {text: 'ET'}],\n\t\t\t\t},\n\t\t\t]}\n\t\t\tdataset={{\n\t\t\t\t'd69f0fc0-abf2-4659-9412-60b4949298f1':\n\t\t\t\t\t'https://static.remove.bg/sample-gallery/graphics/bird-thumbnail.jpg',\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport default EditorApp;\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}